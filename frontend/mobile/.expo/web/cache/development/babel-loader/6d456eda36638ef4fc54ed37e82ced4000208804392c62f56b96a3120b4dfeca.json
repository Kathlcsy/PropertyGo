{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var showMessage = function showMessage(msg) {\n    setMessage(msg);\n    setTimeout(function () {\n      setMessage(null);\n    }, 3000);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setTimeout(function () {\n        setLoading(false);\n        var userData = {\n          username: userName\n        };\n        login(userData);\n        showMessage('Login successful');\n        setTimeout(function () {\n          navigation.navigate('Home');\n        }, 500);\n      }, 2000);\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../assets/PropertyGo-HighRes-Logo.png\"),\n      style: styles.iconImage\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      placeholderTextColor: \"black\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      placeholderTextColor: \"black\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Login\"\n      })\n    }), message && _jsx(View, {\n      style: styles.messageContainer,\n      children: _jsx(Text, {\n        style: styles.messageText,\n        children: message\n      })\n    })]\n  });\n}\nvar styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconImage: {\n    width: 100,\n    height: 100,\n    marginBottom: 40\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingLeft: 10,\n    color: 'black'\n  },\n  loginButton: {\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#1E90FF',\n    borderRadius: 25,\n    marginVertical: 10\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  messageContainer: {\n    position: 'absolute',\n    bottom: 20,\n    alignSelf: 'center',\n    backgroundColor: 'rgba(144, 238, 144, 0.8)',\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n    borderRadius: 8\n  },\n  messageText: {\n    fontSize: 16,\n    color: 'black'\n  }\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useContext","View","Text","TextInput","TouchableOpacity","Image","ActivityIndicator","AuthContext","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useContext","login","_useState5","_useState6","message","setMessage","_useState7","_useState8","loading","setLoading","showMessage","msg","setTimeout","handleLogin","_ref2","_asyncToGenerator","userData","username","navigate","apply","arguments","style","styles","container","children","source","require","iconImage","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","loginButton","onPress","disabled","color","loginButtonText","messageContainer","messageText","flex","padding","justifyContent","alignItems","width","height","marginBottom","borderColor","borderWidth","paddingLeft","backgroundColor","borderRadius","marginVertical","fontSize","position","bottom","alignSelf","paddingVertical","paddingHorizontal"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/LoginScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, Image, ActivityIndicator } from 'react-native';\nimport { AuthContext } from '../../AuthContext';\n\nfunction LoginScreen({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const { login } = useContext(AuthContext);\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const showMessage = (msg) => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const handleLogin = async () => {\n    setLoading(true);\n    // Simulate an API call or implement your authentication logic here\n    // For example, you can replace this with your API request\n    setTimeout(() => {\n      setLoading(false);\n      const userData = { username: userName, /* other user data */ };\n      login(userData);\n      showMessage('Login successful');\n      setTimeout(() => {\n        navigation.navigate('Home');\n      }, 500);\n    }, 2000);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../../assets/PropertyGo-HighRes-Logo.png')} // Replace with your logo path\n        style={styles.iconImage}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        placeholderTextColor=\"black\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        placeholderTextColor=\"black\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TouchableOpacity\n        style={styles.loginButton}\n        onPress={handleLogin}\n        disabled={loading}\n      >\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.loginButtonText}>Login</Text>\n        )}\n      </TouchableOpacity>\n      {message && (\n        <View style={styles.messageContainer}>\n          <Text style={styles.messageText}>{message}</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconImage: {\n    width: 100,\n    height: 100,\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingLeft: 10,\n    color: 'black',\n  },\n  loginButton: {\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#1E90FF',\n    borderRadius: 25,\n    marginVertical: 10,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: 'white',\n  },\n  messageContainer: {\n    position: 'absolute',\n    bottom: 20,\n    alignSelf: 'center',\n    backgroundColor: 'rgba(144, 238, 144, 0.8)',\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n  },\n  messageText: {\n    fontSize: 16,\n    color: 'black',\n  },\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}