{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { useFocusEffect, useRoute } from '@react-navigation/native';\nimport { AuthContext } from \"../../AuthContext\";\nimport { AntDesign, Ionicons } from '@expo/vector-icons';\nimport { getUserContactUsId } from \"../../utils/contactUsApi\";\nimport { getTimeAgo } from \"../../services/CalculateTimeAgo\";\nimport { createResponse } from \"../../utils/responseApi\";\nimport { socket } from \"../../navigations/LoginNavigator\";\nimport HTML from 'react-native-render-html';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Response = function Response(_ref) {\n  var route = _ref.route;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var contactUs = route.params.contactUs;\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var windowWidth = useWindowDimensions().width;\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var updatedContactUs = yield getUserContactUsId(contactUs.contactUsId);\n        setMessages([{\n          message: contactUs.message,\n          userId: contactUs.userId,\n          createdAt: contactUs.createdAt\n        }].concat(_toConsumableArray(updatedContactUs.responses)));\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var useResponseCallback = useCallback(function () {\n    fetchData();\n  }, []);\n  useFocusEffect(useResponseCallback);\n  useEffect(function () {\n    socket.on(\"userNotification\", function (data) {\n      useResponseCallback();\n    });\n  });\n  var handleSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        responseData = {\n          message: newMessage,\n          userId: user.user.userId,\n          contactUsId: contactUs.contactUsId\n        };\n        yield createResponse(responseData);\n        useResponseCallback();\n      } catch (error) {\n        console.error(error);\n      }\n      setNewMessage('');\n    });\n    return function handleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          style: item.userId ? styles.sentMessage : styles.receivedMessage,\n          children: [_jsx(Text, {\n            style: styles.messageText,\n            children: _jsx(HTML, {\n              source: {\n                html: item.message.replace(/<\\/?p>/g, '').replace(/<html>|<\\/html>/g, '')\n              },\n              contentWidth: windowWidth\n            })\n          }), _jsx(Text, {\n            style: styles.time,\n            children: getTimeAgo(item.createdAt)\n          })]\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.horizontalContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Type your message here\",\n        value: newMessage,\n        onChangeText: function onChangeText(text) {\n          return setNewMessage(text);\n        },\n        style: styles.textInput,\n        multiline: true\n      }), _jsx(TouchableHighlight, {\n        style: styles.iconButton,\n        onPress: handleSubmit,\n        disabled: !newMessage,\n        underlayColor: \"rgba(0, 0, 0, 0.1)\",\n        children: _jsx(Ionicons, {\n          name: \"send-outline\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  sentMessage: {\n    backgroundColor: \"#FFD700\",\n    alignSelf: 'flex-end',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 1\n  },\n  receivedMessage: {\n    backgroundColor: '#ECECEC',\n    alignSelf: 'flex-start',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 1\n  },\n  messageText: {\n    fontSize: 16\n  },\n  horizontalContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginHorizontal: 10,\n    borderWidth: 1,\n    marginBottom: 15\n  },\n  textInput: {\n    flex: 1,\n    paddingVertical: 10,\n    marginLeft: 10\n  },\n  iconButton: {\n    padding: 10\n  },\n  time: {\n    fontSize: 10,\n    color: \"grey\",\n    alignSelf: 'flex-end'\n  }\n});\nexport default Response;","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","StyleSheet","View","Text","TouchableOpacity","ScrollView","SafeAreaView","TextInput","RefreshControl","Image","TouchableHighlight","FlatList","useWindowDimensions","useFocusEffect","useRoute","AuthContext","AntDesign","Ionicons","getUserContactUsId","getTimeAgo","createResponse","socket","HTML","jsx","_jsx","jsxs","_jsxs","Response","_ref","route","_useContext","user","_useState","_useState2","_slicedToArray","messages","setMessages","contactUs","params","_useState3","_useState4","newMessage","setNewMessage","windowWidth","width","fetchData","_ref2","_asyncToGenerator","updatedContactUs","contactUsId","message","userId","createdAt","concat","_toConsumableArray","responses","error","console","apply","arguments","useResponseCallback","on","data","handleSubmit","_ref3","responseData","style","styles","container","children","keyExtractor","item","index","toString","renderItem","_ref4","sentMessage","receivedMessage","messageText","source","html","replace","contentWidth","time","horizontalContainer","placeholder","value","onChangeText","text","textInput","multiline","iconButton","onPress","disabled","underlayColor","name","size","color","create","flex","padding","backgroundColor","alignSelf","borderRadius","margin","borderWidth","fontSize","flexDirection","alignItems","justifyContent","marginHorizontal","marginBottom","paddingVertical","marginLeft"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/sideNavigatorBar/Response.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView, SafeAreaView, TextInput, RefreshControl, Image, TouchableHighlight, FlatList , useWindowDimensions} from 'react-native';\nimport { useFocusEffect, useRoute } from '@react-navigation/native';\nimport { AuthContext } from '../../AuthContext';\nimport { AntDesign, Ionicons } from '@expo/vector-icons';\nimport { getUserContactUsId } from '../../utils/contactUsApi';\nimport { getTimeAgo } from '../../services/CalculateTimeAgo';\nimport { createResponse } from '../../utils/responseApi';\nimport { socket } from '../../navigations/LoginNavigator';\nimport HTML from 'react-native-render-html';\n\nconst Response = ({ route }) => {\n    const { user } = useContext(AuthContext);\n    const [messages, setMessages] = useState([]);\n    const contactUs = route.params.contactUs;\n    const [newMessage, setNewMessage] = useState('');\n    const windowWidth = useWindowDimensions().width;\n    // console.log(\"contact US :\", contactUs)\n    // console.log(\"messages:\", messages)\n\n    const fetchData = async () => {\n        try {\n            const updatedContactUs = await getUserContactUsId(contactUs.contactUsId);\n            setMessages([{ message: contactUs.message, userId: contactUs.userId, createdAt: contactUs.createdAt }, ...updatedContactUs.responses])\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const useResponseCallback = useCallback(() => {\n        fetchData();\n    }, [])\n\n    useFocusEffect(useResponseCallback);\n\n    useEffect(() => {\n        socket.on(\"userNotification\", (data) => {\n            // console.log(\"RESPONDEDEDEDE\")\n            useResponseCallback();\n        });\n    })\n\n\n    const handleSubmit = async () => {\n\n        try {\n            responseData = {\n                message: newMessage,\n                userId: user.user.userId,\n                contactUsId: contactUs.contactUsId\n            }\n            await createResponse(responseData);\n            useResponseCallback();\n        } catch (error) {\n            console.error(error);\n        }\n\n        // Reset the input fields after submission\n        setNewMessage('');\n\n    };\n\n    return (\n        <View style={styles.container}>\n            <FlatList\n                data={messages}\n                keyExtractor={(item, index) => index.toString()}\n                renderItem={({ item }) => (\n                    <View style={item.userId ? styles.sentMessage : styles.receivedMessage}>\n                        <Text style={styles.messageText}><HTML source={{ html: item.message.replace(/<\\/?p>/g, '').replace(/<html>|<\\/html>/g, '')}} contentWidth={windowWidth}/></Text>\n                        <Text style={styles.time}>{getTimeAgo(item.createdAt)}</Text>\n                    </View>\n                )}\n            />\n            <View style={styles.horizontalContainer}>\n                <TextInput\n                    placeholder=\"Type your message here\"\n                    value={newMessage}\n                    onChangeText={text => setNewMessage(text)}\n                    style={styles.textInput}\n                    multiline // Allow multiline text input\n                />\n                <TouchableHighlight style={styles.iconButton} onPress={handleSubmit} disabled={!newMessage} underlayColor=\"rgba(0, 0, 0, 0.1)\">\n                    <Ionicons name=\"send-outline\" size={24} color=\"black\" />\n                </TouchableHighlight>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 10,\n        backgroundColor: \"white\"\n    },\n    sentMessage: {\n        backgroundColor: \"#FFD700\",\n        alignSelf: 'flex-end',\n        borderRadius: 10,\n        padding: 10,\n        margin: 5,\n        borderWidth: 1,\n        // alignItems: \"flex-end\"\n    },\n    receivedMessage: {\n        backgroundColor: '#ECECEC',\n        alignSelf: 'flex-start',\n        borderRadius: 10,\n        padding: 10,\n        margin: 5,\n        borderWidth: 1,\n    },\n    messageText: {\n        fontSize: 16,\n    },\n    horizontalContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        backgroundColor: 'white', // Set background color\n        // padding: 10, // Add padding to the container\n        borderRadius: 10, // Add border radius for rounded corners\n        marginHorizontal: 10,\n        borderWidth: 1,\n        marginBottom: 15,\n    },\n    textInput: {\n        flex: 1,\n        paddingVertical: 10,\n        marginLeft: 10, // Add margin to separate text input from icons\n    },\n    iconButton: {\n        padding: 10,\n    },\n    time: {\n        fontSize: 10,\n        color: \"grey\",\n        alignSelf: 'flex-end',\n        // justifyContent: \"flex-end\"\n    }\n});\n\nexport default Response;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}