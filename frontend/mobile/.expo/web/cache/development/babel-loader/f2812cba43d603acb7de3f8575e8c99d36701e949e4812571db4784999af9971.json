{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar } from 'react-native-calendars';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../../AuthContext\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { Picker } from '@react-native-picker/picker';\nimport { createSchedule, getViewingAvailabilityByDateAndPropertyId, getViewingAvailabilityByPropertyId, removeViewingAvailability, updateViewingAvailability, getScheduleByDateAndPropertyId, updateSchedule, removeSchedule, getScheduleByUserId, getScheduleBySellerId } from \"../../../utils/scheduleApi\";\nimport { set } from 'date-fns';\nimport AppointmentCard from \"../../schedule/AppointmentCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Appointments = function Appointments(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedSchedule = _useState4[0],\n    setSelectedSchedule = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    startTime = _useState6[0],\n    setStartTime = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endTime = _useState8[0],\n    setEndTime = _useState8[1];\n  var userId = user.user.userId;\n  var _useState9 = useState(new Date()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedDate = _useState10[0],\n    setSelectedDate = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    availability = _useState12[0],\n    setAvailability = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isToBeUpdated = _useState14[0],\n    setIsToBeUpdated = _useState14[1];\n  var _useState15 = useState(new Date()),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentDate = _useState16[0],\n    setCurrentDate = _useState16[1];\n  var _useState17 = useState(currentDate.setDate(currentDate.getDate() - 2)),\n    _useState18 = _slicedToArray(_useState17, 2),\n    pastDate = _useState18[0],\n    setPastDate = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    viewingAvailabilityId = _useState20[0],\n    setViewingAvailabilityId = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    scheduleId = _useState22[0],\n    setScheduleId = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    firstLoad = _useState24[0],\n    setFirstLoad = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    timeSlots = _useState26[0],\n    setTimeSlots = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    takenTimeSlots = _useState28[0],\n    setTakenTimeSlots = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    refreshFlatList = _useState30[0],\n    setRefreshFlatList = _useState30[1];\n  var _useState31 = useState([]),\n    _useState32 = _slicedToArray(_useState31, 2),\n    userSlots = _useState32[0],\n    setUserSlots = _useState32[1];\n  var _useState33 = useState([]),\n    _useState34 = _slicedToArray(_useState33, 2),\n    sellerSlots = _useState34[0],\n    setSellerSlots = _useState34[1];\n  var _useState35 = useState([]),\n    _useState36 = _slicedToArray(_useState35, 2),\n    userBuySchedules = _useState36[0],\n    setUserBuySchedules = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    sellerSellSchedules = _useState38[0],\n    setSellerSellSchedules = _useState38[1];\n  var _useState39 = useState('1'),\n    _useState40 = _slicedToArray(_useState39, 2),\n    selectedTimeRange = _useState40[0],\n    setSelectedTimeRange = _useState40[1];\n  var _useState41 = useState('Yesterday'),\n    _useState42 = _slicedToArray(_useState41, 2),\n    selectedTextDays = _useState42[0],\n    setSelectedTextDays = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    dayPickerVisible = _useState44[0],\n    setDayPickerVisible = _useState44[1];\n  var _useState45 = useState([]),\n    _useState46 = _slicedToArray(_useState45, 2),\n    filteredBuyerSchedules = _useState46[0],\n    setFilteredBuyerSchedules = _useState46[1];\n  var _useState47 = useState([]),\n    _useState48 = _slicedToArray(_useState47, 2),\n    filteredSellerSchedules = _useState48[0],\n    setFilteredSellerSchedules = _useState48[1];\n  var dayChoices = [{\n    label: 'Yesterday',\n    value: '1'\n  }, {\n    label: 'Last 3 Days',\n    value: '3'\n  }, {\n    label: 'Last 7 Days',\n    value: '7'\n  }, {\n    label: 'Last 15 Days',\n    value: '15'\n  }, {\n    label: 'Last 30 Days',\n    value: '30'\n  }];\n  var combinedSchedules = [].concat(_toConsumableArray(filteredBuyerSchedules), _toConsumableArray(filteredSellerSchedules));\n  combinedSchedules.sort(function (a, b) {\n    var dateA = new Date(a.meetupDate);\n    var dateB = new Date(b.meetupDate);\n    if (dateA < dateB) return -1;\n    if (dateA > dateB) return 1;\n    var timeA = a.meetupTime;\n    var timeB = b.meetupTime;\n    if (timeA < timeB) return -1;\n    if (timeA > timeB) return 1;\n    return 0;\n  });\n  useEffect(function () {\n    fetchScheduleByUser();\n    fetchScheduleBySeller();\n  }, [selectedDate]);\n  useEffect(function () {\n    fetchScheduleByUser();\n    fetchScheduleBySeller();\n  }, [selectedTimeRange]);\n  useEffect(function () {\n    if (firstLoad) {\n      setTimeSlots(generateTimeSlots());\n      console.log(\"timeslots: \", generateTimeSlots());\n    }\n  }, []);\n  var fetchScheduleByUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$getScheduleByU = yield getScheduleByUserId(userId),\n        success = _yield$getScheduleByU.success,\n        data = _yield$getScheduleByU.data,\n        message = _yield$getScheduleByU.message;\n      if (success) {\n        setUserSlots(data);\n        var selectedTimeRangeAsNumber = parseInt(selectedTimeRange);\n        var _currentDate = new Date();\n        var daysLater = new Date(_currentDate);\n        daysLater.setHours(0, 0, 0, 0);\n        daysLater.setDate(_currentDate.getDate() - selectedTimeRangeAsNumber);\n        _currentDate.setDate(_currentDate.getDate() - 1);\n        var filteredSchedules = data.filter(function (schedule) {\n          var meetupDate = new Date(schedule.meetupDate);\n          meetupDate.setHours(0, 0, 0, 0);\n          return meetupDate <= _currentDate && meetupDate >= daysLater;\n        });\n        setFilteredBuyerSchedules(filteredSchedules);\n      } else {\n        setUserSlots([]);\n        console.error('Error fetching schedule data for user:', message);\n      }\n    });\n    return function fetchScheduleByUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchScheduleBySeller = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$getScheduleByS = yield getScheduleBySellerId(userId),\n        success = _yield$getScheduleByS.success,\n        data = _yield$getScheduleByS.data,\n        message = _yield$getScheduleByS.message;\n      if (success) {\n        setSellerSlots(data);\n        var selectedTimeRangeAsNumber = parseInt(selectedTimeRange);\n        var _currentDate2 = new Date();\n        var todayDate = getTodayDate();\n        var daysLater = new Date(_currentDate2);\n        daysLater.setHours(0, 0, 0, 0);\n        daysLater.setDate(_currentDate2.getDate() - selectedTimeRangeAsNumber);\n        _currentDate2.setDate(_currentDate2.getDate() - 1);\n        var filteredSchedules = data.filter(function (schedule) {\n          var meetupDate = new Date(schedule.meetupDate);\n          meetupDate.setHours(0, 0, 0, 0);\n          return meetupDate <= _currentDate2 && meetupDate >= daysLater;\n        });\n        setFilteredSellerSchedules(filteredSchedules);\n      } else {\n        setSellerSlots([]);\n        console.error('Error fetching schedule data for user:', message);\n      }\n    });\n    return function fetchScheduleBySeller() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleTimeSlotSelect = function handleTimeSlotSelect(time, scheduleId) {\n    var selectedDateTime = new Date(selectedDate);\n    var _time$split = time.split(' '),\n      _time$split2 = _slicedToArray(_time$split, 2),\n      timeWithoutAmPm = _time$split2[0],\n      period = _time$split2[1];\n    var _timeWithoutAmPm$spli = timeWithoutAmPm.split(':').map(Number),\n      _timeWithoutAmPm$spli2 = _slicedToArray(_timeWithoutAmPm$spli, 2),\n      hours = _timeWithoutAmPm$spli2[0],\n      minutes = _timeWithoutAmPm$spli2[1];\n    var adjustedHours = hours;\n    if (period === 'PM' && hours !== 12) {\n      adjustedHours += 12;\n    } else if (period === 'AM' && hours === 12) {\n      adjustedHours = 0;\n    }\n    selectedDateTime.setHours(adjustedHours);\n    selectedDateTime.setMinutes(minutes);\n    setSelectedTime(time);\n    setSelectedSchedule(selectedDateTime);\n    setScheduleId(scheduleId);\n    setTimeSlots(function (prevTimeSlots) {\n      return prevTimeSlots.map(function (slot) {\n        return slot.time === time ? _objectSpread(_objectSpread({}, slot), {}, {\n          userBooked: true\n        }) : slot;\n      });\n    });\n  };\n  function convertTimeTo12HourFormat(time) {\n    var _time$split3 = time.split(':'),\n      _time$split4 = _slicedToArray(_time$split3, 3),\n      hours = _time$split4[0],\n      minutes = _time$split4[1],\n      seconds = _time$split4[2];\n    var period = 'AM';\n    var formattedHours = parseInt(hours);\n    if (formattedHours >= 12) {\n      period = 'PM';\n      if (formattedHours > 12) {\n        formattedHours -= 12;\n      }\n    }\n    return `${formattedHours}:${minutes} ${period}`;\n  }\n  var generateTimeSlots = function generateTimeSlots() {\n    console.log('generateTimeSlots() selectedDate:', selectedDate);\n    console.log('generateTimeSlots() startTime: ', startTime);\n    console.log('generateTimeSlots() endTime: ', endTime);\n    var timeSlots = [];\n    var userBookedFlag = false;\n    if (startTime && endTime) {\n      var startHour = startTime.getHours();\n      var endHour = endTime.getHours();\n      var _loop = function _loop() {\n        var hour = i % 12 || 12;\n        var ampm = i < 12 ? 'AM' : 'PM';\n        var time = `${hour}:00 ${ampm}`;\n        var isTimeSlotTaken = takenTimeSlots.some(function (takenSlot) {\n          return convertTimeTo12HourFormat(takenSlot.meetupTime) === time;\n        });\n        var userBookedSlot = takenTimeSlots.find(function (takenSlot) {\n          return takenSlot.userId === userId && convertTimeTo12HourFormat(takenSlot.meetupTime) === time;\n        });\n        var scheduleId = userBookedSlot ? userBookedSlot.scheduleId : null;\n        var isSlotDisabled = !userBookedSlot && isTimeSlotTaken;\n        timeSlots.push({\n          id: i.toString(),\n          time: time,\n          isTimeSlotTaken: isTimeSlotTaken,\n          userBooked: !!userBookedSlot,\n          isSlotDisabled: isSlotDisabled,\n          scheduleId: scheduleId\n        });\n        if (!!userBookedSlot) {\n          userBookedFlag = true;\n        }\n      };\n      for (var i = startHour; i <= endHour; i++) {\n        _loop();\n      }\n    }\n    console.log('timeSlots: ', timeSlots, \"for: \", selectedDate);\n    if (firstLoad) {\n      return [{\n        id: 'initial-load',\n        time: 'Select a time slot',\n        isSlotDisabled: true,\n        userBooked: false\n      }];\n    }\n    return timeSlots;\n  };\n  var handleDayPress = function handleDayPress(day) {\n    setFirstLoad(false);\n    setSelectedDate(day.dateString);\n    setSelectedTime(null);\n    setStartTime(null);\n    setEndTime(null);\n    setCurrentDate(new Date(day.dateString));\n    var userBuySchedules = userSlots.filter(function (schedule) {\n      return schedule.meetupDate === day.dateString;\n    });\n    setUserBuySchedules(userBuySchedules);\n    var sellerSellSchedules = sellerSlots.filter(function (schedule) {\n      return schedule.meetupDate === day.dateString;\n    });\n    setSellerSellSchedules(sellerSellSchedules);\n  };\n  var formatDate = function formatDate(dateString) {\n    var options = {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  var getTodayDate = function getTodayDate() {\n    var options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      timeZone: 'Asia/Singapore'\n    };\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var todayString = today.toLocaleString('en-SG', options);\n    var parts = todayString.split('/');\n    var todayDate;\n    if (parts.length === 3) {\n      var dd = parts[0].padStart(2, '0');\n      var mm = parts[1].padStart(2, '0');\n      var yyyy = parts[2];\n      todayDate = `${yyyy}-${mm}-${dd}`;\n    }\n    return todayDate;\n  };\n  var getMarkedDates = function getMarkedDates() {\n    var markedDates = {};\n    var seller = {\n      key: 'seller',\n      color: 'red'\n    };\n    var buyer = {\n      key: 'buyer',\n      color: 'green'\n    };\n    console.log('selectedDate: ', selectedDate);\n    markedDates[selectedDate] = {\n      selected: true,\n      selectedDotColor: 'blue'\n    };\n    userSlots.forEach(function (userSlot) {\n      var date = userSlot.meetupDate;\n      markedDates[date] = {\n        dots: []\n      };\n      markedDates[date].dots.push(buyer);\n      if (date === selectedDate) {\n        markedDates[date].selected = true;\n        markedDates[date].selectedDotColor = 'blue';\n      }\n    });\n    sellerSlots.forEach(function (availability) {\n      var date = availability.meetupDate;\n      if (!markedDates[date]) {\n        markedDates[date] = {\n          dots: []\n        };\n      } else if (!markedDates[date].dots) {\n        markedDates[date].dots = [];\n      }\n      markedDates[date].dots.push(seller);\n      if (date === selectedDate) {\n        markedDates[date].selected = true;\n        markedDates[date].selectedDotColor = 'blue';\n      }\n    });\n    return markedDates;\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollViewContent,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsx(View, {\n        style: styles.headerContainer,\n        children: _jsx(Text, {\n          style: styles.header,\n          children: \"Appointment History\"\n        })\n      }), _jsx(View, {\n        style: styles.calendarContainer,\n        children: _jsx(Calendar, {\n          onDayPress: handleDayPress,\n          maxDate: pastDate,\n          markingType: 'multi-dot',\n          style: {\n            borderWidth: 0.5,\n            borderColor: 'gray',\n            height: 360\n          },\n          theme: {\n            backgroundColor: '#ffffff',\n            calendarBackground: '#ffffff',\n            textSectionTitleColor: '#b6c1cd',\n            selectedDayBackgroundColor: '#00adf5',\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: '#00adf5',\n            dayTextColor: '#2d4150',\n            textDisabledColor: '#d9e1e8'\n          },\n          markedDates: getMarkedDates()\n        })\n      }), _jsxs(View, {\n        style: styles.dateCard,\n        children: [_jsx(Ionicons, {\n          name: \"calendar\",\n          size: 28,\n          color: \"#00adf5\"\n        }), _jsx(Text, {\n          style: styles.dateText,\n          children: formatDate(selectedDate)\n        })]\n      }), _jsxs(View, {\n        style: styles.bookingContainer,\n        children: [_jsxs(Text, {\n          style: styles.sectionHeader,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"telescope\",\n            size: 28,\n            color: \"#00adf5\"\n          }), ' ', \"To Buy - Upcoming To View\"]\n        }), userBuySchedules && userBuySchedules.length > 0 ? _jsx(FlatList, {\n          data: userBuySchedules,\n          keyExtractor: function keyExtractor(item) {\n            return item.scheduleId.toString();\n          },\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsx(AppointmentCard, {\n              schedule: item,\n              propertyId: item.propertyId,\n              onPress: function onPress() {\n                navigation.navigate('View Appointment Detail', {\n                  userId: item.sellerId,\n                  propertyId: item.propertyId,\n                  scheduleId: item.scheduleId\n                });\n              }\n            });\n          }\n        }) : _jsx(Text, {\n          style: styles.noAvailabilityText,\n          children: \"No bookings found.\"\n        })]\n      }), _jsxs(View, {\n        style: styles.bookingContainer,\n        children: [_jsxs(Text, {\n          style: styles.sectionHeader,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"table-eye\",\n            size: 28,\n            color: \"#00adf5\"\n          }), ' ', \"To Sell - Buyers To View Unit\"]\n        }), sellerSellSchedules && sellerSellSchedules.length > 0 ? _jsx(FlatList, {\n          data: sellerSellSchedules,\n          keyExtractor: function keyExtractor(item) {\n            return item.scheduleId.toString();\n          },\n          renderItem: function renderItem(_ref5) {\n            var item = _ref5.item;\n            return _jsx(AppointmentCard, {\n              schedule: item,\n              propertyId: item.propertyId,\n              onPress: function onPress() {\n                navigation.navigate('View Appointment Detail', {\n                  userId: item.userId,\n                  propertyId: item.propertyId,\n                  schedule: item\n                });\n              }\n            });\n          }\n        }) : _jsx(Text, {\n          style: styles.noAvailabilityText,\n          children: \"No bookings for units listed.\"\n        })]\n      }), _jsxs(View, {\n        style: styles.bookingContainer,\n        children: [_jsxs(View, {\n          style: styles.sectionHeaderContainer,\n          children: [_jsxs(Text, {\n            style: styles.sectionHeader,\n            children: [_jsx(MaterialCommunityIcons, {\n              name: \"calendar-search\",\n              size: 28,\n              color: \"#00adf5\"\n            }), ' ', \"View History\"]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.propertyTypePickerButton,\n            onPress: function onPress() {\n              return setDayPickerVisible(true);\n            },\n            children: [_jsx(Text, {\n              style: styles.propertyTypePickerText,\n              children: selectedTextDays\n            }), _jsx(Icon, {\n              name: \"caret-down\",\n              size: 20,\n              color: \"black\"\n            })]\n          })]\n        }), _jsx(Modal, {\n          transparent: true,\n          animationType: \"slide\",\n          visible: dayPickerVisible,\n          onRequestClose: function onRequestClose() {\n            return setDayPickerVisible(false);\n          },\n          children: _jsxs(View, {\n            style: styles.modalContainer,\n            children: [_jsx(Picker, {\n              selectedValue: selectedTimeRange,\n              onValueChange: function onValueChange(value) {\n                setSelectedTimeRange(value);\n                var selectedLabel = dayChoices.find(function (item) {\n                  return item.value === value;\n                });\n                if (selectedLabel) {\n                  setSelectedTextDays(selectedLabel.label);\n                }\n                console.log('selectedTimeRange: ', selectedTimeRange, \"selectedTextDays: \", selectedTextDays);\n              },\n              style: styles.picker,\n              children: dayChoices.map(function (type, index) {\n                return _jsx(Picker.Item, {\n                  label: type.label,\n                  value: type.value\n                }, index);\n              })\n            }), _jsx(View, {\n              style: styles.okButtonContainer,\n              children: _jsx(Button, {\n                title: \"OK\",\n                onPress: function onPress() {\n                  return setDayPickerVisible(false);\n                }\n              })\n            })]\n          })\n        }), combinedSchedules.length > 0 ? _jsx(_Fragment, {\n          children: combinedSchedules.map(function (item) {\n            return _jsx(AppointmentCard, {\n              schedule: item,\n              propertyId: item.propertyId,\n              onPress: function onPress() {\n                navigation.navigate('View Appointment Detail', {\n                  userId: item.userId,\n                  propertyId: item.propertyId,\n                  scheduleId: item.scheduleId\n                });\n              }\n            });\n          })\n        }) : _jsx(Text, {\n          style: styles.noAvailabilityText,\n          children: \"No bookings for units listed.\"\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16\n  },\n  scrollView: {\n    flex: 1\n  },\n  headerContainer: {\n    marginBottom: 20\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginTop: 5,\n    textAlign: 'center'\n  },\n  calendarContainer: {\n    borderRadius: 8,\n    marginBottom: 10\n  },\n  calendar: {\n    borderWidth: 0.5,\n    borderColor: 'gray',\n    borderRadius: 8,\n    marginBottom: 10,\n    backgroundColor: 'white'\n  },\n  dateCard: {\n    padding: 8,\n    borderRadius: 8,\n    marginVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 0.1\n  },\n  dateText: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginLeft: 10,\n    textAlign: 'center',\n    alignItems: 'center'\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  noAvailabilityText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  bookingContainer: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 0.2,\n    borderColor: 'gray',\n    marginBottom: 10\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20\n  },\n  picker: {\n    backgroundColor: 'white'\n  },\n  okButtonContainer: {\n    backgroundColor: 'white'\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '40%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  propertyTypePickerText: {\n    fontSize: 14\n  },\n  sectionHeaderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  }\n});\nvar calendarTheme = {\n  backgroundColor: '#ffffff',\n  calendarBackground: '#ffffff',\n  textSectionTitleColor: '#b6c1cd',\n  selectedDayBackgroundColor: '#00adf5',\n  selectedDayTextColor: '#ffffff',\n  todayTextColor: '#00adf5',\n  dayTextColor: '#2d4150',\n  textDisabledColor: '#d9e1e8'\n};\nexport default Appointments;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","FlatList","Modal","Button","Calendar","Ionicons","MaterialCommunityIcons","Icon","useNavigation","AuthContext","DateTimePickerModal","Picker","createSchedule","getViewingAvailabilityByDateAndPropertyId","getViewingAvailabilityByPropertyId","removeViewingAvailability","updateViewingAvailability","getScheduleByDateAndPropertyId","updateSchedule","removeSchedule","getScheduleByUserId","getScheduleBySellerId","set","AppointmentCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Appointments","_ref","route","navigation","_useContext","user","_useState","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","selectedSchedule","setSelectedSchedule","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","endTime","setEndTime","userId","_useState9","Date","_useState10","selectedDate","setSelectedDate","_useState11","_useState12","availability","setAvailability","_useState13","_useState14","isToBeUpdated","setIsToBeUpdated","_useState15","_useState16","currentDate","setCurrentDate","_useState17","setDate","getDate","_useState18","pastDate","setPastDate","_useState19","_useState20","viewingAvailabilityId","setViewingAvailabilityId","_useState21","_useState22","scheduleId","setScheduleId","_useState23","_useState24","firstLoad","setFirstLoad","_useState25","_useState26","timeSlots","setTimeSlots","_useState27","_useState28","takenTimeSlots","setTakenTimeSlots","_useState29","_useState30","refreshFlatList","setRefreshFlatList","_useState31","_useState32","userSlots","setUserSlots","_useState33","_useState34","sellerSlots","setSellerSlots","_useState35","_useState36","userBuySchedules","setUserBuySchedules","_useState37","_useState38","sellerSellSchedules","setSellerSellSchedules","_useState39","_useState40","selectedTimeRange","setSelectedTimeRange","_useState41","_useState42","selectedTextDays","setSelectedTextDays","_useState43","_useState44","dayPickerVisible","setDayPickerVisible","_useState45","_useState46","filteredBuyerSchedules","setFilteredBuyerSchedules","_useState47","_useState48","filteredSellerSchedules","setFilteredSellerSchedules","dayChoices","label","value","combinedSchedules","concat","_toConsumableArray","sort","a","b","dateA","meetupDate","dateB","timeA","meetupTime","timeB","fetchScheduleByUser","fetchScheduleBySeller","generateTimeSlots","console","log","_ref2","_asyncToGenerator","_yield$getScheduleByU","success","data","message","selectedTimeRangeAsNumber","parseInt","daysLater","setHours","filteredSchedules","filter","schedule","error","apply","arguments","_ref3","_yield$getScheduleByS","todayDate","getTodayDate","handleTimeSlotSelect","time","selectedDateTime","_time$split","split","_time$split2","timeWithoutAmPm","period","_timeWithoutAmPm$spli","map","Number","_timeWithoutAmPm$spli2","hours","minutes","adjustedHours","setMinutes","prevTimeSlots","slot","_objectSpread","userBooked","convertTimeTo12HourFormat","_time$split3","_time$split4","seconds","formattedHours","userBookedFlag","startHour","getHours","endHour","_loop","hour","i","ampm","isTimeSlotTaken","some","takenSlot","userBookedSlot","find","isSlotDisabled","push","id","toString","handleDayPress","day","dateString","formatDate","options","month","year","toLocaleDateString","undefined","timeZone","today","todayString","toLocaleString","parts","length","dd","padStart","mm","yyyy","getMarkedDates","markedDates","seller","key","color","buyer","selected","selectedDotColor","forEach","userSlot","date","dots","style","styles","container","children","scrollView","contentContainerStyle","scrollViewContent","keyboardShouldPersistTaps","headerContainer","header","calendarContainer","onDayPress","maxDate","markingType","borderWidth","borderColor","height","theme","backgroundColor","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dateCard","name","size","dateText","bookingContainer","sectionHeader","keyExtractor","item","renderItem","_ref4","propertyId","onPress","navigate","sellerId","noAvailabilityText","_ref5","sectionHeaderContainer","propertyTypePickerButton","propertyTypePickerText","transparent","animationType","visible","onRequestClose","modalContainer","selectedValue","onValueChange","selectedLabel","picker","type","index","Item","okButtonContainer","title","create","flex","padding","marginBottom","fontSize","fontWeight","marginTop","textAlign","borderRadius","calendar","marginVertical","flexDirection","alignItems","marginLeft","justifyContent","paddingBottom","paddingHorizontal","width","calendarTheme"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/sideNavigatorBar/Appointment/AppointmentsHistory.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  FlatList,\n  Modal,\n  Button,\n} from 'react-native';\nimport { Calendar } from 'react-native-calendars';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../../../AuthContext';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { Picker } from '@react-native-picker/picker';\nimport {\n  createSchedule,\n  getViewingAvailabilityByDateAndPropertyId,\n  getViewingAvailabilityByPropertyId,\n  removeViewingAvailability,\n  updateViewingAvailability,\n  getScheduleByDateAndPropertyId,\n  updateSchedule,\n  removeSchedule,\n  getScheduleByUserId,\n  getScheduleBySellerId,\n} from '../../../utils/scheduleApi';\nimport { set } from 'date-fns';\nimport AppointmentCard from '../../schedule/AppointmentCard';\n\nconst Appointments = ({ route }) => {\n  const navigation = useNavigation();\n  const { user } = useContext(AuthContext);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedSchedule, setSelectedSchedule] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const userId = user.user.userId;\n  // const sellerUserId = userDetails.userId;\n  // Define selected date state\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [availability, setAvailability] = useState([]);\n  const [isToBeUpdated, setIsToBeUpdated] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [pastDate, setPastDate] = useState(currentDate.setDate(currentDate.getDate() - 2));\n  const [viewingAvailabilityId, setViewingAvailabilityId] = useState(null);\n  const [scheduleId, setScheduleId] = useState(null);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [takenTimeSlots, setTakenTimeSlots] = useState([]);\n  const [refreshFlatList, setRefreshFlatList] = useState(false);\n  const [userSlots, setUserSlots] = useState([]);\n  const [sellerSlots, setSellerSlots] = useState([]);\n  const [userBuySchedules, setUserBuySchedules] = useState([]); // Schedules for \"To Buy\"\n  const [sellerSellSchedules, setSellerSellSchedules] = useState([]); // Schedules for \"To Sell\"\n  const [selectedTimeRange, setSelectedTimeRange] = useState('1'); // Default: Next 7 days\n  const [selectedTextDays, setSelectedTextDays] = useState('Yesterday');\n  const [dayPickerVisible, setDayPickerVisible] = useState(false);\n  const [filteredBuyerSchedules, setFilteredBuyerSchedules] = useState([]);\n  const [filteredSellerSchedules, setFilteredSellerSchedules] = useState([]);\n\n  const dayChoices = [\n    { label: 'Yesterday', value: '1' },\n    { label: 'Last 3 Days', value: '3' },\n    { label: 'Last 7 Days', value: '7' },\n    { label: 'Last 15 Days', value: '15' },\n    { label: 'Last 30 Days', value: '30' },\n  ]\n\n  const combinedSchedules = [...filteredBuyerSchedules, ...filteredSellerSchedules];\n  combinedSchedules.sort((a, b) => {\n    // Sort by meetup date first\n    const dateA = new Date(a.meetupDate);\n    const dateB = new Date(b.meetupDate);\n    if (dateA < dateB) return -1;\n    if (dateA > dateB) return 1;\n\n    // If meetup dates are the same, sort by time\n    const timeA = a.meetupTime;\n    const timeB = b.meetupTime;\n    if (timeA < timeB) return -1;\n    if (timeA > timeB) return 1;\n\n    return 0;\n  });\n\n  useEffect(() => {\n    // fetchViewingAvailabilityByDateAndPropertyId();\n    // fetchViewingAvailabilityByPropertyId();\n    // fetchScheduleData();\n    fetchScheduleByUser();\n    fetchScheduleBySeller();\n  }, [selectedDate]);\n\n  useEffect(() => {\n    fetchScheduleByUser();\n    fetchScheduleBySeller();\n  }, [selectedTimeRange]);\n\n\n  useEffect(() => {\n    if (firstLoad) {\n      setTimeSlots(generateTimeSlots());\n      console.log(\"timeslots: \", generateTimeSlots())\n    }\n  }, []);\n\n  const fetchScheduleByUser = async () => {\n    const { success, data, message } = await getScheduleByUserId(userId);\n  \n    if (success) {\n      setUserSlots(data);\n      const selectedTimeRangeAsNumber = parseInt(selectedTimeRange);\n      const currentDate = new Date();\n  \n      // Calculate the date range based on the selected time range\n      const daysLater = new Date(currentDate);\n      daysLater.setHours(0, 0, 0, 0);\n      daysLater.setDate(currentDate.getDate() - selectedTimeRangeAsNumber);\n      currentDate.setDate(currentDate.getDate() - 1);\n  \n      const filteredSchedules = data.filter(schedule => {\n        const meetupDate = new Date(schedule.meetupDate);\n        meetupDate.setHours(0, 0, 0, 0); // Set time to midnight for comparison\n        return meetupDate <= currentDate && meetupDate >= daysLater;\n      });\n  \n      setFilteredBuyerSchedules(filteredSchedules);\n    } else {\n      setUserSlots([]);\n      console.error('Error fetching schedule data for user:', message);\n    }\n  };\n  \n  const fetchScheduleBySeller = async () => {\n    const { success, data, message } = await getScheduleBySellerId(userId);\n  \n    if (success) {\n      setSellerSlots(data);\n      const selectedTimeRangeAsNumber = parseInt(selectedTimeRange);\n      const currentDate = new Date();\n      const todayDate = getTodayDate();\n  \n      // Calculate the date range based on the selected time range\n      const daysLater = new Date(currentDate);\n      daysLater.setHours(0, 0, 0, 0);\n      daysLater.setDate(currentDate.getDate() - selectedTimeRangeAsNumber);\n      currentDate.setDate(currentDate.getDate() - 1);\n  \n      const filteredSchedules = data.filter(schedule => {\n        const meetupDate = new Date(schedule.meetupDate);\n        meetupDate.setHours(0, 0, 0, 0); // Set time to midnight for comparison\n        return meetupDate <= currentDate && meetupDate >= daysLater;\n      });\n  \n      setFilteredSellerSchedules(filteredSchedules);\n    } else {\n      setSellerSlots([]);\n      console.error('Error fetching schedule data for user:', message);\n    }\n  };\n  \n\n  // Function to handle time slot selection\n  const handleTimeSlotSelect = (time, scheduleId) => {\n    // Combine the selected date with the parsed time to create a DateTime object\n    const selectedDateTime = new Date(selectedDate);\n    const [timeWithoutAmPm, period] = time.split(' '); // Split time and AM/PM\n    const [hours, minutes] = timeWithoutAmPm.split(':').map(Number);\n\n    // Calculate adjusted hours for PM\n    let adjustedHours = hours;\n    if (period === 'PM' && hours !== 12) {\n      adjustedHours += 12;\n    } else if (period === 'AM' && hours === 12) {\n      adjustedHours = 0; // Midnight (12:00 AM) is represented as 0 in 24-hour format\n    }\n\n    selectedDateTime.setHours(adjustedHours);\n    selectedDateTime.setMinutes(minutes);\n\n    setSelectedTime(time);\n    setSelectedSchedule(selectedDateTime);\n    setScheduleId(scheduleId);\n\n    // Update the timeSlots array with the new userBooked value for the selected time slot\n    setTimeSlots((prevTimeSlots) =>\n      prevTimeSlots.map((slot) =>\n        slot.time === time ? { ...slot, userBooked: true } : slot\n      )\n    );\n  };\n\n  function convertTimeTo12HourFormat(time) {\n    const [hours, minutes, seconds] = time.split(':');\n    let period = 'AM';\n    let formattedHours = parseInt(hours);\n\n    if (formattedHours >= 12) {\n      period = 'PM';\n      if (formattedHours > 12) {\n        formattedHours -= 12;\n      }\n    }\n\n    return `${formattedHours}:${minutes} ${period}`;\n  }\n\n  // Generate hourly time slots between start and end times\n  const generateTimeSlots = () => {\n    console.log('generateTimeSlots() selectedDate:', selectedDate)\n    console.log('generateTimeSlots() startTime: ', startTime)\n    console.log('generateTimeSlots() endTime: ', endTime)\n    const timeSlots = [];\n    let userBookedFlag = false;\n    if (startTime && endTime) {\n      const startHour = startTime.getHours();\n      const endHour = endTime.getHours();\n      for (let i = startHour; i <= endHour; i++) {\n        const hour = i % 12 || 12; // Convert to 12-hour format\n        const ampm = i < 12 ? 'AM' : 'PM';\n        const time = `${hour}:00 ${ampm}`;\n        const isTimeSlotTaken = takenTimeSlots.some(\n          (takenSlot) => convertTimeTo12HourFormat(takenSlot.meetupTime) === time\n        );\n        const userBookedSlot = takenTimeSlots.find(\n          (takenSlot) =>\n            takenSlot.userId === userId &&\n            convertTimeTo12HourFormat(takenSlot.meetupTime) === time\n        );\n\n        const scheduleId = userBookedSlot ? userBookedSlot.scheduleId : null;\n\n        const isSlotDisabled = !userBookedSlot && isTimeSlotTaken;\n        timeSlots.push({\n          id: i.toString(),\n          time,\n          isTimeSlotTaken,\n          userBooked: !!userBookedSlot,\n          isSlotDisabled,\n          scheduleId, // Store the scheduleId if the slot is taken by a user\n        });\n\n        if (!!userBookedSlot) {\n          userBookedFlag = true;\n        }\n      }\n      // setUpdateSchedule(userBookedFlag);\n    }\n    console.log('timeSlots: ', timeSlots, \"for: \", selectedDate)\n    if (firstLoad) {\n      // Display a message for the initial load\n      return [\n        {\n          id: 'initial-load',\n          time: 'Select a time slot',\n          isSlotDisabled: true,\n          userBooked: false,\n        },\n      ];\n    }\n\n    return timeSlots;\n  };\n\n\n  // Function to handle day press in the calendar\n  const handleDayPress = (day) => {\n    setFirstLoad(false);\n    setSelectedDate(day.dateString);\n    setSelectedTime(null); // Clear selected time when a new date is chosen\n    setStartTime(null);\n    setEndTime(null);\n    setCurrentDate(new Date(day.dateString)); // Update the current date\n\n    // Fetch and filter schedules for \"To Buy\"\n    const userBuySchedules = userSlots.filter((schedule) => {\n      // Filter schedules for \"To Buy\" based on date\n      return schedule.meetupDate === day.dateString;\n    });\n    setUserBuySchedules(userBuySchedules);\n\n    // Fetch and filter schedules for \"To Sell\"\n    const sellerSellSchedules = sellerSlots.filter((schedule) => {\n      // Filter schedules for \"To Sell\" based on date\n      return schedule.meetupDate === day.dateString;\n    });\n    setSellerSellSchedules(sellerSellSchedules);\n  };\n\n  const formatDate = (dateString) => {\n    const options = { day: '2-digit', month: 'long', year: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const getTodayDate = () => {\n    const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        timeZone: 'Asia/Singapore', // Specify the time zone for Singapore\n    };\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const todayString = today.toLocaleString('en-SG', options);\n    const parts = todayString.split('/');\n    let todayDate;\n    if (parts.length === 3) {\n        const dd = parts[0].padStart(2, '0');\n        const mm = parts[1].padStart(2, '0');\n        const yyyy = parts[2];\n        todayDate = `${yyyy}-${mm}-${dd}`;\n    }\n    return todayDate;\n}\n\n  const getMarkedDates = () => {\n    const markedDates = {};\n    const seller = { key: 'seller', color: 'red' };\n    const buyer = { key: 'buyer', color: 'green' };\n\n    console.log('selectedDate: ', selectedDate);\n    // if (userSlots.length === 0 || sellerSlots.length === 0) {\n    markedDates[selectedDate] = { selected: true, selectedDotColor: 'blue' };\n    // }\n\n    // Loop through the data and mark the dates\n    userSlots.forEach((userSlot) => {\n      const date = userSlot.meetupDate; // Get the date from the fetched data\n\n      // if (!markedDates[date]) {\n      markedDates[date] = { dots: [] };\n      // }\n      markedDates[date].dots.push(buyer);\n\n      if (date === selectedDate) {\n        markedDates[date].selected = true;\n        markedDates[date].selectedDotColor = 'blue';\n      }\n    });\n\n    sellerSlots.forEach((availability) => {\n      const date = availability.meetupDate; // Get the date from the fetched data\n      if (!markedDates[date]) {\n        markedDates[date] = { dots: [] }; // Create a new entry with an empty dots array\n      } else if (!markedDates[date].dots) {\n        markedDates[date].dots = []; // If dots array doesn't exist, create it\n      }\n\n      markedDates[date].dots.push(seller);\n\n      if (date === selectedDate) {\n        markedDates[date].selected = true;\n        markedDates[date].selectedDotColor = 'blue';\n      }\n    });\n\n\n    return markedDates;\n  };\n\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollViewContent}\n        keyboardShouldPersistTaps=\"handled\" // Add this prop\n      >\n        <View style={styles.headerContainer}>\n          <Text style={styles.header}>Appointment History</Text>\n        </View>\n        <View style={styles.calendarContainer}>\n          <Calendar\n            onDayPress={handleDayPress}\n            maxDate={pastDate}\n            markingType={'multi-dot'}\n            style={{\n              borderWidth: 0.5,\n              borderColor: 'gray',\n              height: 360,\n            }}\n            theme={{\n              backgroundColor: '#ffffff',\n              calendarBackground: '#ffffff',\n              textSectionTitleColor: '#b6c1cd',\n              selectedDayBackgroundColor: '#00adf5',\n              selectedDayTextColor: '#ffffff',\n              todayTextColor: '#00adf5',\n              dayTextColor: '#2d4150',\n              textDisabledColor: '#d9e1e8',\n            }}\n            markedDates={getMarkedDates()}\n          />\n        </View>\n\n        {/* Time Slots Matrix (Bottom Half) */}\n\n        <View style={styles.dateCard}>\n          <Ionicons name=\"calendar\" size={28} color=\"#00adf5\" />\n          <Text style={styles.dateText}>{formatDate(selectedDate)}</Text>\n        </View>\n\n        <View style={styles.bookingContainer}>\n          <Text style={styles.sectionHeader}>\n            <MaterialCommunityIcons\n              name=\"telescope\"\n              size={28}\n              color=\"#00adf5\"\n            />{' '}\n            To Buy - Upcoming To View\n          </Text>\n          {userBuySchedules && userBuySchedules.length > 0 ? (\n            <FlatList\n              data={userBuySchedules}\n              keyExtractor={(item) => item.scheduleId.toString()}\n              renderItem={({ item }) => (\n                <AppointmentCard\n                  schedule={item}\n                  propertyId={item.propertyId}\n                  onPress={() => {\n                    navigation.navigate('View Appointment Detail', {\n                      userId: item.sellerId,\n                      propertyId: item.propertyId,\n                      scheduleId: item.scheduleId,\n                    });\n                  }}\n                />\n              )}\n            />\n          ) : (\n            <Text style={styles.noAvailabilityText}>No bookings found.</Text>\n          )}\n        </View>\n\n        <View style={styles.bookingContainer}>\n          <Text style={styles.sectionHeader}>\n            <MaterialCommunityIcons\n              name=\"table-eye\"\n              size={28}\n              color=\"#00adf5\"\n            />{' '}\n            To Sell - Buyers To View Unit\n          </Text>\n          {sellerSellSchedules && sellerSellSchedules.length > 0 ? (\n            <FlatList\n              data={sellerSellSchedules}\n              keyExtractor={(item) => item.scheduleId.toString()}\n              renderItem={({ item }) => (\n                <AppointmentCard\n                  schedule={item}\n                  propertyId={item.propertyId}\n                  onPress={() => {\n                    navigation.navigate('View Appointment Detail', {\n                      userId: item.userId,\n                      propertyId: item.propertyId,\n                      schedule: item,\n                    });\n                  }}\n                />\n              )}\n            />\n          ) : (\n            <Text style={styles.noAvailabilityText}>\n              No bookings for units listed.\n            </Text>\n          )}\n        </View>\n\n        <View style={styles.bookingContainer}>\n          <View style={styles.sectionHeaderContainer}>\n            <Text style={styles.sectionHeader}>\n              <MaterialCommunityIcons\n                name=\"calendar-search\"\n                size={28}\n                color=\"#00adf5\"\n              />{' '}\n              View History\n            </Text>\n            {/* Picker */}\n            <TouchableOpacity\n              style={styles.propertyTypePickerButton}\n              onPress={() => setDayPickerVisible(true)}\n            >\n              <Text style={styles.propertyTypePickerText}>\n                {selectedTextDays}\n              </Text>\n              <Icon name=\"caret-down\" size={20} color=\"black\" />\n            </TouchableOpacity>\n            {/* Picker */}\n          </View>\n\n          <Modal\n            transparent={true}\n            animationType=\"slide\"\n            visible={dayPickerVisible}\n            onRequestClose={() => setDayPickerVisible(false)}\n          >\n            <View style={styles.modalContainer}>\n              <Picker\n                selectedValue={selectedTimeRange}\n                onValueChange={(value) => {\n                  setSelectedTimeRange(value);\n                  // Find the corresponding label and set it as selectedTextDays\n                  const selectedLabel = dayChoices.find((item) => item.value === value);\n                  if (selectedLabel) {\n                    setSelectedTextDays(selectedLabel.label);\n                  }\n                  console.log('selectedTimeRange: ', selectedTimeRange, \"selectedTextDays: \", selectedTextDays);\n                }}\n                style={styles.picker}\n              >\n                {dayChoices.map((type, index) => (\n                  <Picker.Item\n                    key={index}\n                    label={type.label}\n                    value={type.value}\n                  />\n                ))}\n              </Picker>\n\n              <View style={styles.okButtonContainer}>\n                <Button\n                  title=\"OK\"\n                  onPress={() => setDayPickerVisible(false)}\n                />\n              </View>\n            </View>\n          </Modal>\n          {/* Picker */}\n          {combinedSchedules.length > 0 ? (\n            <>\n              {combinedSchedules.map((item) => (\n                <AppointmentCard schedule={item} propertyId={item.propertyId} onPress={() => {\n                  navigation.navigate('View Appointment Detail', { userId: item.userId, propertyId: item.propertyId, scheduleId: item.scheduleId });\n                }} />\n              ))}\n              {/* {filteredSellerSchedules.map((item) => (\n\n                                <AppointmentCard schedule={item} propertyId={item.propertyId} onPress={() => {\n                                    navigation.navigate('View Appointment Detail', { userId: item.sellerId, propertyId: item.propertyId, schedule: item });\n                                }} />\n                            ))} */}\n            </>\n          ) : (\n            <Text style={styles.noAvailabilityText}>\n              No bookings for units listed.\n            </Text>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  headerContainer: {\n    marginBottom: 20,\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginTop: 5,\n    textAlign: 'center',\n  },\n  calendarContainer: {\n    borderRadius: 8,\n    marginBottom: 10,\n  },\n  calendar: {\n    borderWidth: 0.5,\n    borderColor: 'gray',\n    borderRadius: 8,\n    marginBottom: 10,\n    backgroundColor: 'white',\n  },\n  dateCard: {\n    // backgroundColor: '#f5f5f5',\n    padding: 8,\n    borderRadius: 8,\n    marginVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 0.1,\n  },\n  dateText: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginLeft: 10,\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  noAvailabilityText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 10,\n  },\n  bookingContainer: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 0.2,\n    borderColor: 'gray',\n    marginBottom: 10,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20, // Add padding to make the button visible\n  },\n  picker: {\n    backgroundColor: 'white',\n  },\n  okButtonContainer: {\n    backgroundColor: 'white',\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '40%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  propertyTypePickerText: {\n    fontSize: 14,\n  },\n  sectionHeaderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n\n});\n\nconst calendarTheme = {\n  backgroundColor: '#ffffff',\n  calendarBackground: '#ffffff',\n  textSectionTitleColor: '#b6c1cd',\n  selectedDayBackgroundColor: '#00adf5',\n  selectedDayTextColor: '#ffffff',\n  todayTextColor: '#00adf5',\n  dayTextColor: '#2d4150',\n  textDisabledColor: '#d9e1e8',\n};\n\nexport default Appointments;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}