{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getImageUriById } from \"../../utils/api\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TransactionCard = function TransactionCard(_ref) {\n  var transactions = _ref.transactions;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var cardSize = Dimensions.get('window').width;\n  var _useState = useState('blue'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentColor = _useState2[0],\n    setCurrentColor = _useState2[1];\n  var colors = ['red', 'green', 'blue', 'orange'];\n  var animationDuration = 1000;\n  useEffect(function () {\n    var colorChangeTimer = setInterval(function () {\n      var nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n      var nextColor = colors[nextColorIndex];\n      setCurrentColor(nextColor);\n    }, animationDuration);\n    return function () {\n      return clearInterval(colorChangeTimer);\n    };\n  }, [currentColor]);\n  return _jsx(TouchableOpacity, {\n    style: [styles.card, {\n      width: cardSize * 0.8,\n      height: cardSize * 0.8\n    }],\n    children: _jsxs(View, {\n      style: styles.propertyDetails,\n      children: [_jsx(Text, {\n        style: styles.propertyTitle,\n        children: transactions.status\n      }), _jsx(Text, {\n        style: styles.propertyPrice,\n        children: transactions.price\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    alignSelf: 'center',\n    marginVertical: 10,\n    borderRadius: 10,\n    borderWidth: 0.5,\n    borderColor: '#ddd',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 7,\n    marginLeft: 10\n  },\n  imageContainer: {\n    width: '100%',\n    height: '60%',\n    overflow: 'hidden'\n  },\n  propertyImage: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  propertyDetails: {\n    padding: 10,\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  propertyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  propertyPrice: {\n    fontSize: 16,\n    color: '#333'\n  },\n  propertyInfo: {\n    fontSize: 12,\n    color: '#555'\n  },\n  propertyListing: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  },\n  placeholderImage: {\n    borderRadius: 20\n  },\n  placeholderImageImage: {\n    width: '100%',\n    height: '80%',\n    marginBottom: 80,\n    borderRadius: 10\n  },\n  favoriteContainer: {},\n  favoriteCount: {\n    marginTop: 40,\n    fontSize: 16\n  },\n  favoriteButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'flex-end'\n  }\n});\nexport default TransactionCard;","map":{"version":3,"names":["React","useContext","useEffect","useState","Dimensions","StyleSheet","Text","TouchableOpacity","View","getImageUriById","AuthContext","jsx","_jsx","jsxs","_jsxs","TransactionCard","_ref","transactions","_useContext","user","cardSize","get","width","_useState","_useState2","_slicedToArray","currentColor","setCurrentColor","colors","animationDuration","colorChangeTimer","setInterval","nextColorIndex","indexOf","length","nextColor","clearInterval","style","styles","card","height","children","propertyDetails","propertyTitle","status","propertyPrice","price","create","backgroundColor","alignSelf","marginVertical","borderRadius","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","imageContainer","overflow","propertyImage","padding","flex","justifyContent","fontSize","fontWeight","color","propertyInfo","propertyListing","flexDirection","marginBottom","placeholderImage","placeholderImageImage","favoriteContainer","favoriteCount","marginTop","favoriteButton","alignItems"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/partnerApplication/TransactionCardSmall.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Dimensions, StyleSheet, Text, TouchableOpacity, View,} from 'react-native';\nimport {getImageUriById,} from '../../utils/api';\nimport {AuthContext} from '../../AuthContext';\n\nconst TransactionCard = ({transactions}) => {\n\n    const {user} = useContext(AuthContext);\n    const cardSize = Dimensions.get('window').width;\n\n    const [currentColor, setCurrentColor] = useState('blue'); // Initial color\n    const colors = ['red', 'green', 'blue', 'orange']; // Define your desired colors\n    const animationDuration = 1000; // Duration for each color change (in milliseconds)\n\n    useEffect(() => {\n        // Create a timer to change the color at regular intervals\n        const colorChangeTimer = setInterval(() => {\n            // Get the next color in the array\n            const nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n            const nextColor = colors[nextColorIndex];\n            setCurrentColor(nextColor);\n        }, animationDuration);\n\n        // Clear the timer when the component unmounts\n        return () => clearInterval(colorChangeTimer);\n    }, [currentColor]);\n\n    // Don't need image, don't need style, consistent animations.\n    return (\n        <TouchableOpacity\n            style={[styles.card, {width: cardSize * 0.8, height: cardSize * 0.8}]}\n        >\n            <View style={styles.propertyDetails}>\n                <Text style={styles.propertyTitle}>{transactions.status}</Text>\n                <Text style={styles.propertyPrice}>{transactions.price}</Text>\n            </View>\n        </TouchableOpacity>\n    );\n};\n\nconst styles= StyleSheet.create({\n    card: {\n        backgroundColor: '#fff',\n        alignSelf: 'center', // Center the card\n        marginVertical: 10, // A little margin top and bottom for spacing between cards\n        borderRadius: 10,\n        borderWidth: 0.5, // Light border\n        borderColor: '#ddd', // Light gray color\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 5,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 7,\n        marginLeft: 10,\n    },\n    imageContainer: {\n        width: '100%',\n        height: '60%',\n        overflow: 'hidden', // Hide overflow\n    },\n    propertyImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 10\n    },\n    propertyDetails: {\n        padding: 10,\n        flex: 1,\n        justifyContent: 'space-between',\n    },\n    propertyTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    propertyPrice: {\n        fontSize: 16,\n        color: '#333',\n    },\n    propertyInfo: {\n        fontSize: 12,\n        color: '#555',\n    },\n    propertyListing: {\n        flexDirection: 'row',\n        marginBottom: 20, // Adjust this value to control the spacing between cards\n        padding: 10,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n    },\n    placeholderImage: {\n        borderRadius: 20,\n\n    },\n    placeholderImageImage: {\n        width: '100%', // Adjust the width as needed to match the desired size\n        height: '80%', // Adjust the height as needed to match the desired size\n        marginBottom: 80,\n        borderRadius: 10,\n    },\n    favoriteContainer: {\n        // flexDirection: 'row',\n        // alignItems: 'left',\n        // marginTop: 8, // Adjust the spacing as needed\n    },\n    favoriteCount: {\n        marginTop: 40, // Adjust the spacing between icon and count as needed\n        fontSize: 16,\n    },\n    favoriteButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        alignSelf: 'flex-end', // Align to the right\n    },\n});\n\nexport default TransactionCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}