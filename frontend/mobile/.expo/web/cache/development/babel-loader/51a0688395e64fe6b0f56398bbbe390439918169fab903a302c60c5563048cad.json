{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PropertyCard from \"../propertyListings/PropertyCard\";\nimport PropertyCardRectangle from \"../propertyListings/PropertyCardRectangle\";\nimport { searchProperties } from \"../../utils/api\";\nimport { Ionicons } from '@expo/vector-icons';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchResults = function SearchResults(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var searchQuery = route.params.searchQuery;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchResults = _useState2[0],\n    setSearchResults = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    suggestions = _useState4[0],\n    setSuggestions = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchTimeout = _useState6[0],\n    setSearchTimeout = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    inputValue = _useState8[0],\n    setInputValue = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSquareLayout = _useState10[0],\n    setIsSquareLayout = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isMapVisible = _useState12[0],\n    setIsMapVisible = _useState12[1];\n  var initialRegion = {\n    latitude: 1.361588,\n    longitude: 103.805249,\n    latitudeDelta: 0.35,\n    longitudeDelta: 0.35\n  };\n  useEffect(function () {\n    fetchSearchResults();\n  }, []);\n  useEffect(function () {\n    fetchSuggestions(inputValue);\n  }, [inputValue]);\n  var fetchSearchResults = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$searchProperti = yield searchProperties(searchQuery),\n          success = _yield$searchProperti.success,\n          data = _yield$searchProperti.data;\n        if (success) {\n          setSearchResults(data);\n        } else {\n          console.error('Error fetching search results:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching search results:', error.message);\n      }\n    });\n    return function fetchSearchResults() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchSuggestions = function () {\n    var _ref3 = _asyncToGenerator(function* (query) {\n      try {\n        var _yield$searchProperti2 = yield searchProperties(query),\n          success = _yield$searchProperti2.success,\n          data = _yield$searchProperti2.data;\n        if (success) {\n          setSuggestions(data.slice(0, 10));\n        } else {\n          console.error('Error fetching search suggestions:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching search suggestions:', error.message);\n      }\n    });\n    return function fetchSuggestions(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSuggestionClick = function handleSuggestionClick(item) {\n    setInputValue(item.address);\n    setSuggestions([]);\n    fetchSearchResults();\n    navigation.navigate('Search Results', {\n      searchQuery: item.address\n    });\n  };\n  var handlePropertyPress = function handlePropertyPress(propertyListingId) {\n    navigation.navigate('Property Listing', {\n      propertyListingId: propertyListingId\n    });\n  };\n  var toggleCardLayout = function toggleCardLayout() {\n    setIsSquareLayout(function (prevIsSquareLayout) {\n      return !prevIsSquareLayout;\n    });\n  };\n  var toggleMapView = function toggleMapView() {\n    setIsMapVisible(function (prevIsMapVisible) {\n      return !prevIsMapVisible;\n    });\n  };\n  var handleSearch = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (searchQuery.trim() === '') {\n        return;\n      }\n      navigation.navigate('Search Results', {\n        searchQuery: searchQuery\n      });\n    });\n    return function handleSearch() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.headerContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Ionicons, {\n            name: \"arrow-back\",\n            size: 24,\n            color: \"black\"\n          })\n        }), _jsx(Text, {\n          style: styles.header,\n          children: \"Search Page\"\n        })]\n      }), _jsxs(View, {\n        style: styles.searchBar,\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter Postal Code/ District\",\n          style: styles.searchInput,\n          onChangeText: function onChangeText(text) {\n            setInputValue(text);\n            if (text.trim() === '') {\n              setSuggestions([]);\n            } else {\n              if (searchTimeout) {\n                clearTimeout(searchTimeout);\n              }\n              var timeout = setTimeout(function () {\n                fetchSuggestions(text);\n              }, 1);\n              setSearchTimeout(timeout);\n            }\n            onSubmitEditing = {\n              handleSearch: handleSearch\n            };\n          },\n          value: inputValue\n        }), _jsx(TouchableOpacity, {\n          style: styles.searchIconContainer,\n          onPress: fetchSearchResults,\n          children: _jsx(Image, {\n            source: require(\"../../assets/Top-Navbar-Icons/search-icon.png\"),\n            style: styles.searchIcon,\n            onSubmitEditing: handleSearch\n          })\n        })]\n      }), suggestions.length > 0 && inputValue.trim() !== '' && _jsx(View, {\n        style: styles.suggestionsContainer,\n        children: suggestions.map(function (item, index) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.suggestionItem, index === suggestions.length - 1 && styles.suggestionItemLast],\n            onPress: function onPress() {\n              return handleSuggestionClick(item);\n            },\n            children: _jsx(Text, {\n              style: styles.suggestionText,\n              children: item.address\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: styles.toggleButtonContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.toggleMapButton,\n          onPress: toggleMapView,\n          children: [_jsx(Ionicons, {\n            name: isMapVisible ? 'stop-outline' : 'map',\n            size: 20,\n            color: \"white\",\n            style: {\n              marginLeft: 5\n            }\n          }), _jsxs(Text, {\n            style: styles.toggleMapButtonText,\n            children: [isMapVisible ? 'Hide Map' : 'Show Map', ' ']\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.toggleButton,\n          onPress: toggleCardLayout,\n          children: _jsxs(Text, {\n            children: [_jsx(Ionicons, {\n              name: isSquareLayout ? 'list' : 'grid',\n              size: 24,\n              color: \"#333\"\n            }), _jsx(View, {\n              style: [marginBottom = 5],\n              children: _jsxs(Text, {\n                style: [styles.toggleLabel],\n                children: [' ', isSquareLayout ? 'List' : 'Grid']\n              })\n            })]\n          })\n        })]\n      }), isMapVisible && _jsx(MapView, {\n        style: styles.map,\n        initialRegion: initialRegion,\n        children: searchResults.map(function (property) {\n          return _jsx(Marker, {\n            coordinate: {\n              latitude: property.latitude,\n              longitude: property.longitude\n            },\n            onPress: function onPress() {\n              return handlePropertyPress(property.propertyListingId);\n            },\n            children: _jsx(Callout, {\n              children: _jsxs(View, {\n                style: styles.infoWindowContainer,\n                children: [_jsx(Text, {\n                  style: styles.infoWindowTitle,\n                  children: \"Address:\"\n                }), _jsx(Text, {\n                  style: styles.infoWindowText,\n                  children: property.address\n                })]\n              })\n            })\n          }, property.propertyId);\n        })\n      }), _jsxs(Text, {\n        style: styles.title,\n        children: [\"Search Results for \\\"\", searchQuery, \"\\\"\"]\n      }), searchResults.length === 0 ? _jsx(View, {\n        style: styles.noResultsContainer,\n        children: _jsx(Text, {\n          style: styles.noResultsText,\n          children: \"No search results found\"\n        })\n      }) : _jsx(FlatList, {\n        data: searchResults,\n        keyExtractor: function keyExtractor(item) {\n          var _item$propertyId;\n          return ((_item$propertyId = item.propertyId) != null ? _item$propertyId : 'defaultKey').toString();\n        },\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item;\n          return isSquareLayout ? _jsx(PropertyCard, {\n            property: item,\n            onPress: function onPress() {\n              return handlePropertyPress(item.propertyListingId);\n            }\n          }) : _jsx(PropertyCardRectangle, {\n            property: item,\n            onPress: function onPress() {\n              return handlePropertyPress(item.propertyListingId);\n            }\n          });\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    margin: 10,\n    alignContent: 'center'\n  },\n  searchBar: {\n    flexDirection: 'row',\n    margin: 10,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: '#fff',\n    borderWidth: 1,\n    borderColor: 'grey'\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16\n  },\n  searchIconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40\n  },\n  searchIcon: {\n    width: 20,\n    height: 20\n  },\n  suggestionsContainer: {\n    width: '95%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginTop: 110,\n    marginBottom: 10,\n    alignSelf: 'center',\n    elevation: 5,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    position: 'absolute',\n    zIndex: 1\n  },\n  suggestionItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd'\n  },\n  suggestionItemLast: {\n    borderBottomWidth: 0\n  },\n  suggestionText: {\n    fontSize: 14\n  },\n  noResultsContainer: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  noResultsText: {\n    fontSize: 16,\n    color: 'gray'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 120\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    marginTop: 20\n  },\n  backButton: {\n    position: 'absolute',\n    top: 1,\n    left: 16,\n    zIndex: 1\n  },\n  toggleButtonContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginHorizontal: 10,\n    marginBottom: 10\n  },\n  toggleMapButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#52b69a',\n    borderRadius: 10,\n    padding: 6,\n    marginRight: 10\n  },\n  toggleMapButtonText: {\n    color: 'white',\n    marginLeft: 5\n  },\n  map: {\n    height: 300\n  },\n  toggleMapButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#52b69a',\n    borderRadius: 10,\n    padding: 6,\n    marginRight: 10\n  },\n  toggleLabel: {\n    marginLeft: 0,\n    fontSize: 16,\n    color: '#333'\n  },\n  toggleButton: {\n    alignItems: 'flex-end',\n    marginBottom: 5,\n    marginRight: 5\n  },\n  infoWindowContainer: {\n    backgroundColor: 'white',\n    width: '90%',\n    padding: 10,\n    borderRadius: 8\n  },\n  infoWindowTitle: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginHorizontal: 10,\n    marginBottom: 4\n  },\n  infoWindowText: {\n    fontSize: 12,\n    width: '80%',\n    marginHorizontal: 10,\n    marginBottom: 2\n  }\n});\nexport default SearchResults;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","TouchableOpacity","StyleSheet","TextInput","Image","ScrollView","PropertyCard","PropertyCardRectangle","searchProperties","Ionicons","MapView","Marker","Callout","jsx","_jsx","jsxs","_jsxs","SearchResults","_ref","route","navigation","searchQuery","params","_useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","suggestions","setSuggestions","_useState5","_useState6","searchTimeout","setSearchTimeout","_useState7","_useState8","inputValue","setInputValue","_useState9","_useState10","isSquareLayout","setIsSquareLayout","_useState11","_useState12","isMapVisible","setIsMapVisible","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","fetchSearchResults","fetchSuggestions","_ref2","_asyncToGenerator","_yield$searchProperti","success","data","console","error","message","apply","arguments","_ref3","query","_yield$searchProperti2","slice","_x","handleSuggestionClick","item","address","navigate","handlePropertyPress","propertyListingId","toggleCardLayout","prevIsSquareLayout","toggleMapView","prevIsMapVisible","handleSearch","_ref4","trim","style","styles","container","children","headerContainer","backButton","onPress","goBack","name","size","color","header","searchBar","placeholder","searchInput","onChangeText","text","clearTimeout","timeout","setTimeout","onSubmitEditing","value","searchIconContainer","source","require","searchIcon","length","suggestionsContainer","map","index","suggestionItem","suggestionItemLast","suggestionText","toggleButtonContainer","toggleMapButton","marginLeft","toggleMapButtonText","toggleButton","marginBottom","toggleLabel","property","coordinate","infoWindowContainer","infoWindowTitle","infoWindowText","propertyId","title","noResultsContainer","noResultsText","keyExtractor","_item$propertyId","toString","renderItem","_ref5","create","flex","backgroundColor","fontSize","fontWeight","margin","alignContent","flexDirection","padding","borderRadius","borderWidth","borderColor","justifyContent","alignItems","width","height","marginTop","alignSelf","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","zIndex","borderBottomWidth","borderBottomColor","top","left","marginHorizontal","marginRight"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/propertyListings/SearchResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    FlatList,\n    TouchableOpacity,\n    StyleSheet,\n    TextInput,\n    Image,\n    ScrollView,\n} from 'react-native';\nimport PropertyCard from '../propertyListings/PropertyCard';\nimport PropertyCardRectangle from '../propertyListings/PropertyCardRectangle';\nimport { searchProperties } from '../../utils/api';\nimport { Ionicons } from '@expo/vector-icons';\nimport MapView, { Marker, Callout } from 'react-native-maps';\n\nconst SearchResults = ({ route, navigation }) => {\n    const { searchQuery } = route.params;\n    const [searchResults, setSearchResults] = useState([]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [searchTimeout, setSearchTimeout] = useState(null);\n    const [inputValue, setInputValue] = useState('');\n    const [isSquareLayout, setIsSquareLayout] = useState(true);\n    const [isMapVisible, setIsMapVisible] = useState(false); // State variable to track map visibility\n\n    const initialRegion = {\n        latitude: 1.361588, // Default to West Area Properties coordinates\n        longitude: 103.805249,\n        latitudeDelta: 0.35,\n        longitudeDelta: 0.35,\n    };\n\n    useEffect(() => {\n        // Fetch search results when the screen loads\n        fetchSearchResults();\n    }, []);\n\n    useEffect(() => {\n        // Fetch search suggestions when inputValue changes\n        fetchSuggestions(inputValue);\n    }, [inputValue]);\n\n    const fetchSearchResults = async () => {\n        try {\n            const { success, data } = await searchProperties(searchQuery);\n\n            if (success) {\n                setSearchResults(data);\n            } else {\n                console.error('Error fetching search results:', data.message);\n            }\n        } catch (error) {\n            console.error('Error fetching search results:', error.message);\n        }\n    };\n\n    const fetchSuggestions = async (query) => {\n        try {\n            const { success, data } = await searchProperties(query);\n\n            if (success) {\n                setSuggestions(data.slice(0, 10)); // Limit suggestions to 10 items\n            } else {\n                console.error('Error fetching search suggestions:', data.message);\n            }\n        } catch (error) {\n            console.error('Error fetching search suggestions:', error.message);\n        }\n    };\n\n    const handleSuggestionClick = (item) => {\n        setInputValue(item.address);\n        setSuggestions([]); // Clear suggestions\n        fetchSearchResults(); // Trigger search when the suggestion is clicked\n        navigation.navigate('Search Results', { searchQuery: item.address });\n    };\n\n    const handlePropertyPress = (propertyListingId) => {\n        // Navigate to the Property Listing screen with the given propertyListingId\n        navigation.navigate('Property Listing', { propertyListingId });\n    };\n\n    const toggleCardLayout = () => {\n        setIsSquareLayout((prevIsSquareLayout) => !prevIsSquareLayout);\n    };\n\n    const toggleMapView = () => {\n        setIsMapVisible((prevIsMapVisible) => !prevIsMapVisible);\n    };\n\n    const handleSearch = async () => {\n        if (searchQuery.trim() === '') {\n          return;\n        }\n    \n        navigation.navigate('Search Results', { searchQuery });\n      };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.container}>\n                <View style={styles.headerContainer}>\n                    <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                    </TouchableOpacity>\n                    <Text style={styles.header}>Search Page</Text>\n                </View>\n                <View style={styles.searchBar}>\n                    <TextInput\n                        placeholder=\"Enter Postal Code/ District\"\n                        style={styles.searchInput}\n                        onChangeText={(text) => {\n                            setInputValue(text);\n                            if (text.trim() === '') {\n                                setSuggestions([]);\n                            } else {\n                                if (searchTimeout) {\n                                    clearTimeout(searchTimeout);\n                                }\n                                const timeout = setTimeout(() => {\n                                    fetchSuggestions(text);\n                                }, 1);\n                                setSearchTimeout(timeout);\n                            }\n                            onSubmitEditing={handleSearch}\n                        }}\n                        value={inputValue} // Display the inputValue here\n                    />\n                    <TouchableOpacity style={styles.searchIconContainer} onPress={fetchSearchResults}>\n                        <Image\n                            source={require('../../assets/Top-Navbar-Icons/search-icon.png')}\n                            style={styles.searchIcon}\n                            onSubmitEditing={handleSearch}\n                        />\n                    </TouchableOpacity>\n                </View>\n\n                {/* Suggestions */}\n                {suggestions.length > 0 && inputValue.trim() !== '' && (\n                    <View style={styles.suggestionsContainer}>\n                        {suggestions.map((item, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={[\n                                    styles.suggestionItem,\n                                    index === suggestions.length - 1 && styles.suggestionItemLast,\n                                ]}\n                                onPress={() => handleSuggestionClick(item)}\n                            >\n                                <Text style={styles.suggestionText}>{item.address}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                )}\n\n                <View style={styles.toggleButtonContainer}>\n                    <TouchableOpacity style={styles.toggleMapButton} onPress={toggleMapView}>\n                        <Ionicons\n                            name={isMapVisible ? 'stop-outline' : 'map'} // Change icon based on map visibility\n                            size={20}\n                            color=\"white\"\n                            style={{ marginLeft: 5 }}\n                        />\n                        <Text style={styles.toggleMapButtonText}>\n                            {isMapVisible ? 'Hide Map' : 'Show Map'}{' '}\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style={styles.toggleButton} onPress={toggleCardLayout}>\n                        <Text>\n                            <Ionicons\n                                name={isSquareLayout ? 'list' : 'grid'}\n                                size={24}\n                                color=\"#333\"\n                            />\n                            <View style={[marginBottom = 5]}>\n                                <Text style={[styles.toggleLabel]}>\n                                    {' '}{isSquareLayout ? 'List' : 'Grid'}\n                                </Text>\n                            </View>\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n                {/* Conditionally render the MapView based on isMapVisible */}\n                {isMapVisible && (\n                    <MapView style={styles.map} initialRegion={initialRegion}>\n                        {searchResults.map((property) => (\n                            <Marker\n                                key={property.propertyId}\n                                coordinate={{\n                                    latitude: property.latitude,\n                                    longitude: property.longitude,\n                                }}\n                                onPress={() => handlePropertyPress(property.propertyListingId)}\n                            >\n                                <Callout>\n                                    <View style={styles.infoWindowContainer}>\n                                        <Text style={styles.infoWindowTitle}>Address:</Text>\n                                        <Text style={styles.infoWindowText}>{property.address}</Text>\n                                    </View>\n                                    {/* <Text>{property.address}</Text> */}\n                                </Callout>\n                            </Marker>\n                        ))}\n                    </MapView>\n                )}\n\n                <Text style={styles.title}>Search Results for \"{searchQuery}\"</Text>\n                {searchResults.length === 0 ? (\n                    <View style={styles.noResultsContainer}>\n                        <Text style={styles.noResultsText}>No search results found</Text>\n                    </View>\n                ) : (\n                    <FlatList\n                        data={searchResults}\n                        keyExtractor={(item) =>\n                            (item.propertyId ?? 'defaultKey').toString()\n                        }\n                        renderItem={({ item }) => {\n                            return isSquareLayout ? (\n                                <PropertyCard\n                                    property={item}\n                                    onPress={() => handlePropertyPress(item.propertyListingId)}\n                                />\n                            ) : (\n                                <PropertyCardRectangle\n                                    property={item}\n                                    onPress={() => handlePropertyPress(item.propertyListingId)}\n                                />\n                            );\n                        }}\n                    />\n                )}\n            </View>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#FFFFFF',\n    },\n    title: {\n        fontSize: 22,\n        fontWeight: 'bold',\n        margin: 10,\n        alignContent: 'center',\n    },\n    searchBar: {\n        flexDirection: 'row',\n        margin: 10,\n        padding: 10,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        borderWidth: 1,\n        borderColor: 'grey',\n    },\n    searchInput: {\n        flex: 1,\n        fontSize: 16,\n    },\n    searchIconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 40,\n    },\n    searchIcon: {\n        width: 20,\n        height: 20,\n    },\n    suggestionsContainer: {\n        width: '95%',\n        backgroundColor: 'white',\n        borderRadius: 10,\n        marginTop: 110,\n        marginBottom: 10,\n        alignSelf: 'center',\n        elevation: 5,\n        shadowColor: 'rgba(0, 0, 0, 0.2)',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.8,\n        shadowRadius: 2,\n        position: 'absolute', // Position suggestions above other content\n        zIndex: 1, // Ensure suggestions are on top\n    },\n    suggestionItem: {\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd',\n    },\n    suggestionItemLast: {\n        borderBottomWidth: 0,\n    },\n    suggestionText: {\n        fontSize: 14,\n    },\n    noResultsContainer: {\n        alignItems: 'center',\n        marginTop: 20,\n    },\n    noResultsText: {\n        fontSize: 16,\n        color: 'gray',\n    },\n    header: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginLeft: 120,\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        marginTop: 20,\n    },\n    backButton: {\n        position: 'absolute',\n        top: 1, // Adjust the top position as needed\n        left: 16, // Adjust the left position as needed\n        zIndex: 1, // Place it above the swiper\n    },\n    toggleButtonContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginHorizontal: 10,\n        marginBottom: 10,\n    },\n    toggleMapButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#52b69a',\n        borderRadius: 10,\n        padding: 6,\n        marginRight: 10,\n    },\n    toggleMapButtonText: {\n        color: 'white',\n        marginLeft: 5,\n    },\n    map: {\n        height: 300, // Adjust the map height as needed\n    },\n    toggleMapButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#52b69a',\n        borderRadius: 10,\n        padding: 6,\n        marginRight: 10,\n    },\n    toggleLabel: {\n        marginLeft: 0,\n        fontSize: 16,\n        color: '#333',\n    },\n    toggleButton: {\n        alignItems: 'flex-end',\n        marginBottom: 5,\n        marginRight: 5,\n    },\n    infoWindowContainer: {\n        backgroundColor: 'white',\n        width: '90%',\n        padding: 10,\n        borderRadius: 8,\n      },\n      infoWindowTitle: {\n        fontWeight: 'bold',\n        fontSize: 16,\n        marginHorizontal: 10,\n        marginBottom: 4,\n      },\n      infoWindowText: {\n        fontSize: 12,\n        width: '80%',\n        marginHorizontal: 10,\n        marginBottom: 2,\n      },\n});\n\nexport default SearchResults;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}