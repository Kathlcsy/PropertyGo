{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Swiper from 'react-native-swiper';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { editProperty, getPropertyListing, getImageUriById, removeImageById, updateImageById, createImageWithPropertyId } from \"../../utils/api\";\nimport DefaultImage from \"../../assets/No-Image-Available.webp\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../AuthContext\";\nimport base64 from 'react-native-base64';\nimport { getAreaAndRegion } from \"../../services/GetAreaAndRegion\";\nimport FullScreenImage from \"./FullScreenImage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditPropertyListing = function EditPropertyListing(_ref) {\n  var route = _ref.route;\n  var propertyListingId = route.params.propertyListingId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    imageIdArray = _useState4[0],\n    setImageIdArray = _useState4[1];\n  var navigation = useNavigation();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    propertyTypeVisible = _useState6[0],\n    setPropertyTypeVisible = _useState6[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    propertyListing = _useState8[0],\n    setPropertyListing = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isLoading = _useState10[0],\n    setIsLoading = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    fullScreenImage = _useState12[0],\n    setFullScreenImage = _useState12[1];\n  var _useState13 = useState({\n      title: '',\n      description: '',\n      price: '',\n      optionFee: '',\n      optionExerciseFee: '',\n      bed: '',\n      bathroom: '',\n      tenure: '',\n      size: '',\n      postalCode: '',\n      address: '',\n      propertyType: ''\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    propertyData = _useState14[0],\n    setPropertyData = _useState14[1];\n  var formatPrice = function formatPrice(price) {\n    return `$${price.replace(/\\D/g, '').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n  };\n  var _useState15 = useState(formatPrice(propertyData.price.toString())),\n    _useState16 = _slicedToArray(_useState15, 2),\n    formattedPrice = _useState16[0],\n    setFormattedPrice = _useState16[1];\n  var _useState17 = useState(formatPrice(propertyData.optionFee.toString())),\n    _useState18 = _slicedToArray(_useState17, 2),\n    formattedOptionPrice = _useState18[0],\n    setFormattedOptionPrice = _useState18[1];\n  var _useState19 = useState(formatPrice(propertyData.optionExerciseFee.toString())),\n    _useState20 = _slicedToArray(_useState19, 2),\n    formattedOptionExercisePrice = _useState20[0],\n    setFormattedOptionExercisePrice = _useState20[1];\n  var _useState21 = useState(propertyData.price.toString()),\n    _useState22 = _slicedToArray(_useState21, 2),\n    rawPrice = _useState22[0],\n    setRawPrice = _useState22[1];\n  var _useState23 = useState(propertyData.optionFee.toString()),\n    _useState24 = _slicedToArray(_useState23, 2),\n    rawOptionPrice = _useState24[0],\n    setOptionRawPrice = _useState24[1];\n  var _useState25 = useState(propertyData.optionExerciseFee.toString()),\n    _useState26 = _slicedToArray(_useState25, 2),\n    rawOptionExercisePrice = _useState26[0],\n    setOptionExerciseRawPrice = _useState26[1];\n  var handleOptionPriceChange = function handleOptionPriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionPrice(formatPrice(raw));\n    setOptionRawPrice(raw);\n  };\n  var handleOptionExercisePriceChange = function handleOptionExercisePriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionExercisePrice(formatPrice(raw));\n    setOptionExerciseRawPrice(raw);\n  };\n  var _useState27 = useState({}),\n    _useState28 = _slicedToArray(_useState27, 2),\n    property = _useState28[0],\n    setProperty = _useState28[1];\n  var propertyTypes = [{\n    label: 'Select Property Type',\n    value: ''\n  }, {\n    label: 'Resale',\n    value: 'Resale'\n  }, {\n    label: 'New Launch',\n    value: 'New Launch'\n  }];\n  var handlePriceChange = function handlePriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setRawPrice(raw);\n    setFormattedPrice(formatPrice(raw));\n  };\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log(propertyData);\n      if (images.length === 0) {\n        Alert.alert('No images selected', 'Please select at least one image.');\n        return;\n      }\n      console.log(' price:', propertyData.price);\n      console.log('Raw price:', rawPrice);\n      var price = rawPrice ? parseInt(rawPrice, 10) : 0;\n      var optionPrice = rawOptionPrice ? parseInt(rawOptionPrice, 10) : 0;\n      var optionExercisePrice = rawOptionExercisePrice ? parseInt(rawOptionExercisePrice, 10) : 0;\n      if (!rawPrice) {\n        price = propertyData.price;\n      } else if (!price || price <= 0) {\n        Alert.alert('Invalid Price', 'Price must be a numeric value.');\n        return;\n      }\n      if (!optionPrice) {\n        optionPrice = propertyData.optionFee;\n      } else if (!optionPrice || optionPrice <= 0) {\n        Alert.alert('Invalid Option Price', 'Option Price must be a numeric value.');\n        return;\n      }\n      if (!optionExercisePrice) {\n        optionExercisePrice = propertyData.optionExerciseFee;\n      } else if (!optionExercisePrice || optionExercisePrice <= 0) {\n        Alert.alert('Invalid Option Exercise Price', 'Option Exercise Price must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(propertyData.size)) {\n        Alert.alert('Invalid Size', 'Size must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(propertyData.bed)) {\n        Alert.alert('Invalid Bed', 'Bed must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(propertyData.bathroom)) {\n        Alert.alert('Invalid Bathroom', 'Bathroom must be a numeric value.');\n        return;\n      }\n      if (propertyData.propertyType === '') {\n        Alert.alert('Property Type Not Selected', 'Please select a property type.');\n        return;\n      }\n      if (propertyData.title.trim() === '' || propertyData.description.trim() === '' || propertyData.unitNumber.trim() === '' || propertyData.postalCode.trim() === '' || propertyData.address.trim() === '') {\n        Alert.alert('Missing Information', 'Please fill in all fields.');\n        return;\n      }\n      try {\n        var propertyTypeUpperCase = propertyData.propertyType.toUpperCase();\n        if (propertyTypeUpperCase === 'NEW LAUNCH') {\n          propertyTypeUpperCase = 'NEW_LAUNCH';\n        }\n        var _yield$editProperty = yield editProperty(propertyListingId, _objectSpread(_objectSpread({}, propertyData), {}, {\n            price: price,\n            optionFee: optionPrice,\n            optionExerciseFee: optionExercisePrice,\n            propertyType: propertyTypeUpperCase\n          })),\n          success = _yield$editProperty.success,\n          data = _yield$editProperty.data,\n          message = _yield$editProperty.message;\n        if (success) {\n          console.log('Property updated successfully:');\n          Alert.alert('Property Updated', 'The property listing has been updated successfully.');\n          navigation.navigate('Property Listing', {\n            propertyListingId: propertyListingId\n          });\n        } else {\n          Alert.alert('Error', `Failed to update property: ${message}`);\n        }\n      } catch (error) {\n        console.log('Error updating property:', error);\n        Alert.alert('Error', 'An error occurred while updating the property listing.');\n      }\n    });\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchAddressByPostalCode = function () {\n    var _ref3 = _asyncToGenerator(function* (postalCode) {\n      if (postalCode.length === 6) {\n        try {\n          var response = yield fetch(`https://developers.onemap.sg/commonapi/search?searchVal=${postalCode}&returnGeom=Y&getAddrDetails=Y`);\n          if (response.ok) {\n            var data = yield response.json();\n            if (data.found === 1) {\n              var address = data.results[0].ADDRESS;\n              var _yield$getAreaAndRegi = yield getAreaAndRegion(postalCode),\n                area = _yield$getAreaAndRegi.area,\n                region = _yield$getAreaAndRegi.region;\n              setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n                postalCode: postalCode,\n                address: address,\n                area: area,\n                region: region\n              }));\n            } else {\n              Alert.alert('Invalid Postal Code', 'No address found for the postal code.');\n              setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n                postalCode: '',\n                address: ''\n              }));\n            }\n          } else {\n            console.error('API request failed.');\n          }\n        } catch (error) {\n          console.error('Error fetching address:', error);\n        }\n      }\n    });\n    return function fetchAddressByPostalCode(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handlePostalCodeChange = function handlePostalCodeChange(text) {\n    if (/^\\d{0,6}$/.test(text)) {\n      setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n        postalCode: text\n      }));\n      if (text.length === 6) {\n        fetchAddressByPostalCode(text);\n      }\n    }\n  };\n  useEffect(function () {\n    fetchPropertyListing(propertyListingId);\n  }, [propertyListingId]);\n  useEffect(function () {\n    fetchImages(propertyListingId);\n  }, [propertyListingId, images]);\n  var fetchImages = function () {\n    var _ref4 = _asyncToGenerator(function* (propertyListingId) {\n      try {\n        var imageArray = yield fetchImageArray(propertyListingId);\n        setImageIdArray(imageArray);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    });\n    return function fetchImages(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var fetchPropertyListing = function () {\n    var _ref5 = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield fetch(getPropertyListing(id));\n        var data = yield response.json();\n        setPropertyListing(data);\n        setPropertyData({\n          title: data.title,\n          description: data.description,\n          price: data.price.toString(),\n          optionFee: data.optionFee.toString(),\n          optionExerciseFee: data.optionExerciseFee.toString(),\n          tenure: data.tenure.toString(),\n          bed: data.bed.toString(),\n          bathroom: data.bathroom.toString(),\n          size: data.size.toString(),\n          postalCode: data.postalCode.toString() || '',\n          address: data.address,\n          unitNumber: data.unitNumber || '',\n          propertyType: transformPropertyType(data.propertyType)\n        });\n        setFormattedPrice(formatPrice(data.price.toString()));\n        setFormattedOptionPrice(formatPrice(data.optionFee.toString()));\n        setFormattedOptionExercisePrice(formatPrice(data.optionExerciseFee.toString()));\n        setImages(data.images.map(function (imageUri) {\n          return {\n            uri: imageUri\n          };\n        }));\n        var imageArray = data.images.map(function (imageId) {\n          return {\n            imageId: imageId,\n            uri: getImageUriById(imageId)\n          };\n        });\n        setImageIdArray(imageArray);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching property listing:', error);\n        setIsLoading(false);\n      }\n    });\n    return function fetchPropertyListing(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var transformPropertyType = function transformPropertyType(type) {\n    if (type === 'NEW_LAUNCH') {\n      return 'New Launch';\n    } else {\n      return 'Resale';\n    }\n    return type;\n  };\n  var handleSaveChanges = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var response = yield editProperty(propertyListingId, propertyData, []);\n        if (response.success) {\n          navigation.navigate('Property Listing', {\n            propertyListingId: propertyListingId\n          });\n        } else {\n          console.error('Error updating property:', response.message);\n        }\n      } catch (error) {\n        console.error('Error updating property:', error);\n      }\n    });\n    return function handleSaveChanges() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleChoosePhoto = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        console.warn('Permission to access photos was denied');\n        return;\n      }\n      if (images.length >= 10) {\n        Alert.alert('Maximum Photos Reached', 'You cannot select more than 10 photos.');\n        return;\n      }\n      var options = {\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 1\n      };\n      var response = yield ImagePicker.launchImageLibraryAsync(options);\n      if (!response.cancelled) {\n        try {\n          var _yield$createImageWit = yield createImageWithPropertyId(propertyListingId, response),\n            success = _yield$createImageWit.success,\n            data = _yield$createImageWit.data,\n            message = _yield$createImageWit.message;\n          if (success) {\n            var updatedImages = [].concat(_toConsumableArray(images), [{\n              uri: data.imageId\n            }]);\n            setImages(updatedImages);\n            Alert.alert('Image Uploaded', 'The image has been successfully uploaded.');\n          } else {\n            console.error('Error uploading image:', message);\n          }\n        } catch (error) {\n          console.error('Error uploading image:', error);\n        }\n      }\n    });\n    return function handleChoosePhoto() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleUpdateImage = function () {\n    var _ref8 = _asyncToGenerator(function* (index, imageId) {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        console.warn('Permission to access photos was denied');\n        return;\n      }\n      var options = {\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 1\n      };\n      var response = yield ImagePicker.launchImageLibraryAsync(options);\n      if (!response.cancelled) {\n        var updatedImage = {\n          uri: response.uri,\n          type: 'image/jpeg',\n          name: 'propertyImage.jpg'\n        };\n        try {\n          var _yield$updateImageByI = yield updateImageById(imageId, updatedImage),\n            success = _yield$updateImageByI.success,\n            data = _yield$updateImageByI.data,\n            message = _yield$updateImageByI.message;\n          if (success) {\n            Alert.alert('Image Updated', 'The image has been successfully updated.');\n            var updatedImages = yield fetchLatestImages(propertyListingId);\n            setImages(updatedImages);\n          } else {\n            console.error('Error updating image:', message);\n          }\n        } catch (error) {\n          console.error('Error updating image:', error);\n        }\n      }\n    });\n    return function handleUpdateImage(_x4, _x5) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var fetchLatestImages = function () {\n    var _ref9 = _asyncToGenerator(function* (propertyListingId) {\n      try {\n        var response = yield fetch(getPropertyListing(propertyListingId));\n        var data = yield response.json();\n        return data.images.map(function (imageUri) {\n          return {\n            uri: imageUri\n          };\n        });\n      } catch (error) {\n        console.error('Error fetching latest images:', error);\n        return [];\n      }\n    });\n    return function fetchLatestImages(_x6) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var viewImage = function viewImage(index) {\n    console.log(\"View Image: \", images[index].uri);\n    var imageUri = getImageUriById(images[index].uri);\n    setFullScreenImage(`${imageUri}?timestamp=${new Date().getTime()}`);\n  };\n  var handleImagePress = function () {\n    var _ref10 = _asyncToGenerator(function* (index) {\n      var imageId = imageIdArray[index].imageId;\n      Alert.alert('Image Options', 'Choose an action for this image:', [{\n        text: 'View Image',\n        onPress: function onPress() {\n          return viewImage(index);\n        }\n      }, {\n        text: 'Update',\n        onPress: function onPress() {\n          return handleUpdateImage(index, imageId);\n        }\n      }, {\n        text: 'Remove',\n        onPress: function onPress() {\n          return handleRemoveImage(index, imageId);\n        },\n        style: 'destructive'\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }], {\n        cancelable: true\n      });\n    });\n    return function handleImagePress(_x7) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var handleRemoveImage = function () {\n    var _ref11 = _asyncToGenerator(function* (index, imageId) {\n      try {\n        var _yield$removeImageByI = yield removeImageById(imageId),\n          success = _yield$removeImageByI.success,\n          message = _yield$removeImageByI.message;\n        if (success) {\n          var updatedImages = _toConsumableArray(images);\n          updatedImages.splice(index, 1);\n          setImages(updatedImages);\n          Alert.alert('Image Removed', 'The image has been successfully removed.');\n        } else {\n          console.error('Error removing image:', message);\n        }\n      } catch (error) {\n        console.error('Error removing image:', error);\n      }\n    });\n    return function handleRemoveImage(_x8, _x9) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      style: styles.loadingIndicator\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollViewContent,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsxs(View, {\n        style: styles.headerContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Ionicons, {\n            name: \"arrow-back\",\n            size: 24,\n            color: \"black\"\n          })\n        }), _jsx(Text, {\n          style: styles.header,\n          children: \"Edit Property Listing\"\n        })]\n      }), _jsx(View, {\n        style: styles.imageRow,\n        children: _jsxs(ScrollView, {\n          horizontal: true,\n          children: [_jsx(View, {\n            children: _jsx(TouchableOpacity, {\n              onPress: handleChoosePhoto,\n              style: styles.imagePicker,\n              children: _jsx(Icon, {\n                name: \"camera\",\n                size: 40,\n                color: \"#aaa\"\n              })\n            })\n          }), images.map(function (image, index) {\n            var imageUri = getImageUriById(image.uri);\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleImagePress(index);\n              },\n              style: styles.imageContainer,\n              children: imageUri ? _jsx(Image, {\n                source: {\n                  uri: `${imageUri}?timestamp=${new Date().getTime()}`\n                },\n                style: styles.image\n              }) : _jsx(Image, {\n                source: DefaultImage,\n                style: styles.image\n              })\n            }, index);\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Title\"\n        }), _jsx(TextInput, {\n          placeholder: \"Listing Title\",\n          placeholderTextColor: \"gray\",\n          value: propertyData.title,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              title: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Price\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Price\",\n          placeholderTextColor: \"gray\",\n          keyboardType: \"numeric\",\n          value: formattedPrice,\n          onChangeText: handlePriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Option Fee\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Option Fee Price\",\n          placeholderTextColor: \"gray\",\n          value: formattedOptionPrice,\n          keyboardType: \"numeric\",\n          onChangeText: handleOptionPriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Option Exercise Fee\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Option Exercise Fee Price\",\n          placeholderTextColor: \"gray\",\n          value: formattedOptionExercisePrice,\n          keyboardType: \"numeric\",\n          onChangeText: handleOptionExercisePriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Size (sqm)\"\n        }), _jsx(TextInput, {\n          placeholder: \"Size (sqm)\",\n          placeholderTextColor: \"gray\",\n          keyboardType: \"numeric\",\n          value: propertyData.size,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              size: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Bedrooms\"\n        }), _jsx(TextInput, {\n          placeholder: \"Number of Bedrooms\",\n          placeholderTextColor: \"gray\",\n          keyboardType: \"numeric\",\n          value: propertyData.bed,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              bed: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Bathrooms\"\n        }), _jsx(TextInput, {\n          placeholder: \"Number of Bathrooms\",\n          placeholderTextColor: \"gray\",\n          keyboardType: \"numeric\",\n          value: propertyData.bathroom,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              bathroom: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Postal Code\"\n        }), _jsx(TextInput, {\n          placeholder: \"Postal Code\",\n          placeholderTextColor: \"gray\",\n          maxLength: 6,\n          keyboardType: \"numeric\",\n          value: propertyData.postalCode,\n          onChangeText: handlePostalCodeChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Address\"\n        }), _jsx(TextInput, {\n          placeholder: \"Address\",\n          placeholderTextColor: \"gray\",\n          value: propertyData.address,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              address: text\n            }));\n          },\n          style: [styles.input, styles.mediumTypeInput],\n          multiline: true,\n          numberOfLines: 2\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Tenure\"\n        }), _jsx(TextInput, {\n          placeholder: \"Tenure (e.g. 99 years)\",\n          placeholderTextColor: \"gray\",\n          maxLength: 3,\n          keyboardType: \"numeric\",\n          value: propertyData.tenure,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              tenure: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Unit Number\"\n        }), _jsx(TextInput, {\n          placeholder: \"Unit Number (e.g. #17-360)\",\n          placeholderTextColor: \"gray\",\n          value: propertyData.unitNumber,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              unitNumber: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Description\"\n        }), _jsx(TextInput, {\n          placeholder: \"Description of Listing\",\n          placeholderTextColor: \"gray\",\n          value: propertyData.description,\n          onChangeText: function onChangeText(text) {\n            return setPropertyData(_objectSpread(_objectSpread({}, propertyData), {}, {\n              description: text\n            }));\n          },\n          style: [styles.input, styles.largeTextInput],\n          multiline: true,\n          numberOfLines: 4\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Property Type\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.propertyTypePickerButton,\n          onPress: function onPress() {\n            return setPropertyTypeVisible(true);\n          },\n          children: [_jsx(Text, {\n            style: styles.propertyTypePickerText,\n            children: propertyData.propertyType ? propertyData.propertyType.charAt(0).toUpperCase() + propertyData.propertyType.slice(1) : 'Select Property Type'\n          }), _jsx(Icon, {\n            name: \"caret-down\",\n            size: 20,\n            color: \"black\"\n          })]\n        })]\n      }), _jsx(Modal, {\n        transparent: true,\n        animationType: \"slide\",\n        visible: propertyTypeVisible,\n        onRequestClose: function onRequestClose() {\n          return setPropertyTypeVisible(false);\n        },\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsx(Picker, {\n            selectedValue: propertyData.propertyType,\n            onValueChange: function onValueChange(value) {\n              return setPropertyData(_objectSpread(_objectSpread({}, property), {}, {\n                propertyType: value\n              }));\n            },\n            style: styles.picker,\n            children: propertyTypes.map(function (type, index) {\n              return _jsx(Picker.Item, {\n                label: type.label,\n                value: type.value\n              }, index);\n            })\n          }), _jsx(View, {\n            style: styles.okButtonContainer,\n            children: _jsx(Button, {\n              title: \"OK\",\n              onPress: function onPress() {\n                return setPropertyTypeVisible(false);\n              }\n            })\n          })]\n        })\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.saveChangesButton,\n      onPress: handleSubmit,\n      children: [_jsx(Ionicons, {\n        name: \"save-outline\",\n        size: 18,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.saveChangesButtonText,\n        children: \"Update\"\n      })]\n    }), _jsx(FullScreenImage, {\n      imageUrl: fullScreenImage,\n      onClose: function onClose() {\n        return setFullScreenImage(null);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 10\n  },\n  inputContainer: {\n    marginBottom: 10\n  },\n  label: {\n    marginBottom: 5,\n    fontWeight: 'bold'\n  },\n  input: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8,\n    height: 40,\n    borderRadius: 5\n  },\n  largeTextInput: {\n    height: 120\n  },\n  mediumTypeInput: {\n    height: 60\n  },\n  imageRow: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    paddingVertical: 10\n  },\n  imagePicker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n    width: 100,\n    height: 100,\n    marginRight: 10\n  },\n  imageContainer: {\n    position: 'relative',\n    marginRight: 10\n  },\n  image: {\n    width: 100,\n    height: 100\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  propertyTypePickerText: {\n    fontSize: 14\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20\n  },\n  picker: {\n    backgroundColor: 'white'\n  },\n  okButtonContainer: {\n    backgroundColor: 'white'\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginLeft: 70\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 40\n  },\n  scrollViewContent: {\n    paddingBottom: 100\n  }\n});\nexport default EditPropertyListing;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","TextInput","Button","StyleSheet","ScrollView","Image","TouchableOpacity","Alert","Modal","ActivityIndicator","Swiper","Picker","ImagePicker","MapView","Marker","Callout","Ionicons","Icon","editProperty","getPropertyListing","getImageUriById","removeImageById","updateImageById","createImageWithPropertyId","DefaultImage","useNavigation","AuthContext","base64","getAreaAndRegion","FullScreenImage","jsx","_jsx","jsxs","_jsxs","EditPropertyListing","_ref","route","propertyListingId","params","_useState","_useState2","_slicedToArray","images","setImages","_useState3","_useState4","imageIdArray","setImageIdArray","navigation","_useState5","_useState6","propertyTypeVisible","setPropertyTypeVisible","_useContext","user","_useState7","_useState8","propertyListing","setPropertyListing","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","fullScreenImage","setFullScreenImage","_useState13","title","description","price","optionFee","optionExerciseFee","bed","bathroom","tenure","size","postalCode","address","propertyType","_useState14","propertyData","setPropertyData","formatPrice","replace","_useState15","toString","_useState16","formattedPrice","setFormattedPrice","_useState17","_useState18","formattedOptionPrice","setFormattedOptionPrice","_useState19","_useState20","formattedOptionExercisePrice","setFormattedOptionExercisePrice","_useState21","_useState22","rawPrice","setRawPrice","_useState23","_useState24","rawOptionPrice","setOptionRawPrice","_useState25","_useState26","rawOptionExercisePrice","setOptionExerciseRawPrice","handleOptionPriceChange","text","raw","handleOptionExercisePriceChange","_useState27","_useState28","property","setProperty","propertyTypes","label","value","handlePriceChange","handleSubmit","_ref2","_asyncToGenerator","console","log","length","alert","parseInt","optionPrice","optionExercisePrice","test","trim","unitNumber","propertyTypeUpperCase","toUpperCase","_yield$editProperty","_objectSpread","success","data","message","navigate","error","apply","arguments","fetchAddressByPostalCode","_ref3","response","fetch","ok","json","found","results","ADDRESS","_yield$getAreaAndRegi","area","region","_x","handlePostalCodeChange","fetchPropertyListing","fetchImages","_ref4","imageArray","fetchImageArray","_x2","_ref5","id","transformPropertyType","map","imageUri","uri","imageId","_x3","type","handleSaveChanges","_ref6","handleChoosePhoto","_ref7","permissionResult","requestMediaLibraryPermissionsAsync","granted","warn","options","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","launchImageLibraryAsync","cancelled","_yield$createImageWit","updatedImages","concat","_toConsumableArray","handleUpdateImage","_ref8","index","updatedImage","name","_yield$updateImageByI","fetchLatestImages","_x4","_x5","_ref9","_x6","viewImage","Date","getTime","handleImagePress","_ref10","onPress","handleRemoveImage","style","cancelable","_x7","_ref11","_yield$removeImageByI","splice","_x8","_x9","styles","loadingIndicator","container","children","scrollView","contentContainerStyle","scrollViewContent","keyboardShouldPersistTaps","headerContainer","backButton","goBack","color","header","imageRow","horizontal","imagePicker","image","imageContainer","source","inputContainer","placeholder","placeholderTextColor","onChangeText","input","keyboardType","maxLength","mediumTypeInput","multiline","numberOfLines","largeTextInput","propertyTypePickerButton","propertyTypePickerText","charAt","slice","transparent","animationType","visible","onRequestClose","modalContainer","selectedValue","onValueChange","picker","Item","okButtonContainer","saveChangesButton","saveChangesButtonText","imageUrl","onClose","create","flex","padding","marginBottom","fontWeight","borderColor","borderWidth","height","borderRadius","flexDirection","paddingVertical","alignItems","justifyContent","backgroundColor","width","marginRight","position","paddingHorizontal","fontSize","paddingBottom","marginTop","marginLeft"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/propertyListings/EditPropertyListing.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  StyleSheet,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {\n  editProperty, getPropertyListing, getImageUriById,\n  removeImageById, updateImageById, createImageWithPropertyId\n} from '../../utils/api';\nimport DefaultImage from '../../assets/No-Image-Available.webp';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../../AuthContext';\nimport base64 from 'react-native-base64';\nimport { getAreaAndRegion } from '../../services/GetAreaAndRegion';\nimport FullScreenImage from './FullScreenImage';\n\nconst EditPropertyListing = ({ route }) => {\n  const { propertyListingId } = route.params;\n  const [images, setImages] = useState([]);\n  const [imageIdArray, setImageIdArray] = useState([]);\n  const navigation = useNavigation();\n  const [propertyTypeVisible, setPropertyTypeVisible] = useState(false);\n  const { user } = useContext(AuthContext);\n  const [propertyListing, setPropertyListing] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n\n  const [propertyData, setPropertyData] = useState({\n    title: '',\n    description: '',\n    price: '',\n    optionFee: '',\n    optionExerciseFee: '',\n    bed: '',\n    bathroom: '',\n    tenure: '',\n    size: '',\n    postalCode: '',\n    address: '',\n    propertyType: '', // You should also initialize propertyType here if it's part of propertyData\n  });\n\n  // Function to format the price with dollar sign and commas\n  const formatPrice = (price) => {\n    return `$${price.replace(/\\D/g, '').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n  };\n  \n\n  // Initialize formattedPrice and rawPrice with the initial price from propertyData\n  const [formattedPrice, setFormattedPrice] = useState(\n    formatPrice(propertyData.price.toString())\n  );\n  const [formattedOptionPrice, setFormattedOptionPrice] = useState(formatPrice(propertyData.optionFee.toString()));\n  const [formattedOptionExercisePrice, setFormattedOptionExercisePrice] = useState(formatPrice(propertyData.optionExerciseFee.toString()));\n  const [rawPrice, setRawPrice] = useState(propertyData.price.toString());\n  const [rawOptionPrice, setOptionRawPrice] = useState(propertyData.optionFee.toString());\n  const [rawOptionExercisePrice, setOptionExerciseRawPrice] = useState(propertyData.optionExerciseFee.toString());\n\n  const handleOptionPriceChange = (text) => {\n    const raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionPrice(formatPrice(raw));\n    setOptionRawPrice(raw);\n  };\n\n  const handleOptionExercisePriceChange = (text) => {\n    const raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionExercisePrice(formatPrice(raw));\n    setOptionExerciseRawPrice(raw);\n  };\n\n  const [property, setProperty] = useState({\n  });\n\n  const propertyTypes = [\n    { label: 'Select Property Type', value: '' },\n    { label: 'Resale', value: 'Resale' },\n    { label: 'New Launch', value: 'New Launch' },\n  ]\n\n  // Function to remove dollar sign and commas and save raw price\n  const handlePriceChange = (text) => {\n    // Remove dollar sign and commas\n    const raw = text.replace(/[^0-9]/g, '');\n\n    // Update rawPrice here\n    setRawPrice(raw);\n\n    // Format and update formattedPrice\n    setFormattedPrice(formatPrice(raw));\n  };\n\n\n\n  const handleSubmit = async () => {\n    // Validation checks\n    console.log(propertyData)\n    if (images.length === 0) {\n      Alert.alert('No images selected', 'Please select at least one image.');\n      return;\n    }\n\n    // Parse the formatted price to remove dollar sign and commas\n    console.log(' price:', propertyData.price);\n    console.log('Raw price:', rawPrice);\n    let price = rawPrice ? parseInt(rawPrice, 10) : 0;\n    let optionPrice = rawOptionPrice ? parseInt(rawOptionPrice, 10) : 0;\n    let optionExercisePrice = rawOptionExercisePrice ? parseInt(rawOptionExercisePrice, 10) : 0;\n\n    if (!rawPrice) {\n      price = propertyData.price;\n    } else if (!price|| price <= 0) {\n      Alert.alert('Invalid Price', 'Price must be a numeric value.');\n      return;\n    } \n\n    if (!optionPrice) {\n      optionPrice = propertyData.optionFee;\n    } else if (!optionPrice|| optionPrice <= 0) {\n      Alert.alert('Invalid Option Price', 'Option Price must be a numeric value.');\n      return;\n    } \n\n    if (!optionExercisePrice) {\n      optionExercisePrice = propertyData.optionExerciseFee;\n    } else if (!optionExercisePrice|| optionExercisePrice <= 0) {\n      Alert.alert('Invalid Option Exercise Price', 'Option Exercise Price must be a numeric value.');\n      return;\n    } \n\n    if (!/^\\d+$/.test(propertyData.size)) {\n      Alert.alert('Invalid Size', 'Size must be a numeric value.');\n      return;\n    }\n\n    if (!/^\\d+$/.test(propertyData.bed)) {\n      Alert.alert('Invalid Bed', 'Bed must be a numeric value.');\n      return;\n    }\n\n    if (!/^\\d+$/.test(propertyData.bathroom)) {\n      Alert.alert('Invalid Bathroom', 'Bathroom must be a numeric value.');\n      return;\n    }\n\n    if (propertyData.propertyType === '') {\n      Alert.alert('Property Type Not Selected', 'Please select a property type.');\n      return;\n    }\n\n    if (\n      propertyData.title.trim() === '' ||\n      propertyData.description.trim() === '' ||\n      propertyData.unitNumber.trim() === '' ||\n      propertyData.postalCode.trim() === '' ||\n      propertyData.address.trim() === ''\n    ) {\n      Alert.alert('Missing Information', 'Please fill in all fields.');\n      return;\n    }\n\n    // Check if propertyData.offeredPrice is defined before replacing characters\n    // const offeredPrice = propertyData.offeredPrice ? propertyData.offeredPrice.replace(/\\$/g, '') : '';\n\n    // Other checks and API call\n    try {\n\n      let propertyTypeUpperCase = propertyData.propertyType.toUpperCase();\n      if (propertyTypeUpperCase === 'NEW LAUNCH') {\n        propertyTypeUpperCase = 'NEW_LAUNCH';\n      }\n\n      const { success, data, message } = await editProperty(\n        propertyListingId, // Pass the propertyListingId\n        {\n          ...propertyData,\n          price: price,\n          optionFee: optionPrice,\n          optionExerciseFee: optionExercisePrice,\n          propertyType: propertyTypeUpperCase,\n        }\n      );\n\n      if (success) {\n        console.log('Property updated successfully:');\n        Alert.alert(\n          'Property Updated',\n          'The property listing has been updated successfully.'\n        );\n        navigation.navigate('Property Listing', { propertyListingId });\n      } else {\n        Alert.alert('Error', `Failed to update property: ${message}`);\n      }\n    } catch (error) {\n      console.log('Error updating property:', error);\n      Alert.alert(\n        'Error',\n        'An error occurred while updating the property listing.'\n      );\n    }\n  };\n\n\n\n\n  // Function to fetch address based on postal code\n  const fetchAddressByPostalCode = async (postalCode) => {\n    if (postalCode.length === 6) {\n      try {\n        const response = await fetch(\n          `https://developers.onemap.sg/commonapi/search?searchVal=${postalCode}&returnGeom=Y&getAddrDetails=Y`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          if (data.found === 1) {\n            const address = data.results[0].ADDRESS;\n            const { area, region } = await getAreaAndRegion(postalCode);\n\n            // Update the postalCode field in the property state\n            setPropertyData({\n              ...propertyData,\n              postalCode, // Update postalCode with the new value\n              address,\n              area,\n              region,\n            });\n          } else {\n            Alert.alert('Invalid Postal Code', 'No address found for the postal code.');\n            setPropertyData({ ...propertyData, postalCode: '', address: '' }); // Clear postalCode and address\n          }\n        } else {\n          console.error('API request failed.');\n        }\n      } catch (error) {\n        console.error('Error fetching address:', error);\n      }\n    }\n  };\n\n  // Event listener for postal code input\n  const handlePostalCodeChange = (text) => {\n    // Restrict input to a maximum of 6 digits\n    if (/^\\d{0,6}$/.test(text)) {\n      // Update the postalCode field in the property state\n      setPropertyData({\n        ...propertyData,\n        postalCode: text, // Update postalCode with the new value\n      });\n\n      // Call the function to fetch the address\n      if (text.length === 6) {\n        fetchAddressByPostalCode(text);\n      }\n    }\n  };\n\n\n  useEffect(() => {\n    // Fetch property listing details using propertyListingId from your API\n    fetchPropertyListing(propertyListingId);\n  }, [propertyListingId]);\n\n  useEffect(() => {\n    // Fetch images based on propertyListingId\n    fetchImages(propertyListingId);\n  }, [propertyListingId, images]); // You can keep images here if you want to refresh the images when it changes\n\n  const fetchImages = async (propertyListingId) => {\n    try {\n      // Fetch images based on propertyListingId and update the images state\n      const imageArray = await fetchImageArray(propertyListingId);\n      setImageIdArray(imageArray);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  };\n\n  const fetchPropertyListing = async (id) => {\n    try {\n      // Make an API call to fetch property listing details by id\n      const response = await fetch(getPropertyListing(id));\n      const data = await response.json();\n      setPropertyListing(data); // Update state with the fetched data\n\n      // Update the property data fields with fetched data\n      setPropertyData({\n        title: data.title,\n        description: data.description,\n        price: data.price.toString(),\n        optionFee: data.optionFee.toString(),\n        optionExerciseFee: data.optionExerciseFee.toString(),\n        tenure: data.tenure.toString(),\n        bed: data.bed.toString(),\n        bathroom: data.bathroom.toString(),\n        size: data.size.toString(),\n        postalCode: data.postalCode.toString() || '', // Update postalCode (or provide a default value)\n        address: data.address,\n        unitNumber: data.unitNumber || '', // Update unitNumber (or provide a default value)\n        propertyType: transformPropertyType(data.propertyType), // Transform propertyType label\n      });\n\n      // Update formattedPrice with the fetched price\n      setFormattedPrice(formatPrice(data.price.toString()));\n      setFormattedOptionPrice(formatPrice(data.optionFee.toString()));\n      setFormattedOptionExercisePrice(formatPrice(data.optionExerciseFee.toString()));\n\n      // Set the 'images' state with the fetched image URIs\n      setImages(data.images.map((imageUri) => ({ uri: imageUri })));\n      const imageArray = data.images.map((imageId) => ({ imageId, uri: getImageUriById(imageId) }));\n      setImageIdArray(imageArray);\n\n      // Set isLoading to false here\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching property listing:', error);\n      setIsLoading(false); // Ensure that isLoading is set to false even on error\n    }\n  };\n\n\n  // Function to transform property type label\n  const transformPropertyType = (type) => {\n    if (type === 'NEW_LAUNCH') {\n      return 'New Launch';\n    } else {\n      return 'Resale'\n    }\n    // Handle other property type cases here if needed\n    return type; // Return the type unchanged if not matched\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      const response = await editProperty(propertyListingId, propertyData, []);\n      if (response.success) {\n        // Property updated successfully, navigate back to the property listing screen\n        navigation.navigate('Property Listing', { propertyListingId });\n      } else {\n        console.error('Error updating property:', response.message);\n        // Handle the error appropriately, e.g., show an error message to the user\n      }\n    } catch (error) {\n      console.error('Error updating property:', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (permissionResult.granted === false) {\n      console.warn('Permission to access photos was denied');\n      return;\n    }\n\n    if (images.length >= 10) {\n      Alert.alert('Maximum Photos Reached', 'You cannot select more than 10 photos.');\n      return;\n    }\n\n    const options = {\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      quality: 1,\n    };\n\n    let response = await ImagePicker.launchImageLibraryAsync(options);\n\n    if (!response.cancelled) {\n      // Upload the selected image to the backend\n      try {\n        const { success, data, message } = await createImageWithPropertyId(\n          propertyListingId, // Pass the propertyListingId\n          response // Pass the whole response object\n        );\n\n        if (success) {\n          // Add the newly uploaded image to the state\n          const updatedImages = [...images, { uri: data.imageId }];\n          setImages(updatedImages);\n\n          // Show an alert for successful upload\n          Alert.alert('Image Uploaded', 'The image has been successfully uploaded.');\n        } else {\n          console.error('Error uploading image:', message);\n          // Handle the error appropriately, e.g., show an error message to the user\n        }\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        // Handle the error appropriately, e.g., show an error message to the user\n      }\n    }\n  };\n\n\n\n  const handleUpdateImage = async (index, imageId) => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (permissionResult.granted === false) {\n      console.warn('Permission to access photos was denied');\n      return;\n    }\n\n    const options = {\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      quality: 1,\n    };\n\n    let response = await ImagePicker.launchImageLibraryAsync(options);\n\n    if (!response.cancelled) {\n      // Create the updated image object\n      const updatedImage = {\n        uri: response.uri, // Use the uri field to specify the URI\n        type: 'image/jpeg', // Modify the type according to your needs\n        name: 'propertyImage.jpg',\n      };\n\n      // Call the updateImageById function with the imageId and updatedImage\n      try {\n        const { success, data, message } = await updateImageById(imageId, updatedImage);\n\n        if (success) {\n          // Show an alert for successful upload\n          Alert.alert('Image Updated', 'The image has been successfully updated.');\n\n          // Fetch the latest images from the API\n          const updatedImages = await fetchLatestImages(propertyListingId);\n\n          // Update the images state with the latest images\n          setImages(updatedImages); // This should trigger a re-render\n        } else {\n          console.error('Error updating image:', message);\n          // Handle the error appropriately, e.g., show an error message to the user\n        }\n      } catch (error) {\n        console.error('Error updating image:', error);\n        // Handle the error appropriately, e.g., show an error message to the user\n      }\n    }\n  };\n\n  // Function to fetch the latest images from the API\n  const fetchLatestImages = async (propertyListingId) => {\n    try {\n      // Make an API call to fetch the latest property listing details\n      const response = await fetch(getPropertyListing(propertyListingId));\n      const data = await response.json();\n\n      // Return the latest images from the fetched data\n      return data.images.map((imageUri) => ({ uri: imageUri }));\n    } catch (error) {\n      console.error('Error fetching latest images:', error);\n      return [];\n    }\n  };\n\n  const viewImage = (index) => {\n    console.log(\"View Image: \", images[index].uri)\n    const imageUri = getImageUriById(images[index].uri);\n    setFullScreenImage(`${imageUri}?timestamp=${new Date().getTime()}`)\n  }\n\n  const handleImagePress = async (index) => {\n    // Display an alert with options to update or remove the image\n    const imageId = imageIdArray[index].imageId;\n    // console.log('imageId here ', imageId)\n    Alert.alert(\n      'Image Options',\n      'Choose an action for this image:',\n      [\n        {\n          text: 'View Image',\n          onPress: () => viewImage(index),\n        },\n        {\n          text: 'Update',\n          onPress: () => handleUpdateImage(index, imageId),\n        },\n        {\n          text: 'Remove',\n          onPress: () => handleRemoveImage(index, imageId),\n          style: 'destructive',\n        },\n        {\n          text: 'Cancel',\n          style: 'cancel',\n        },\n      ],\n      { cancelable: true }\n    );\n  };\n\n  const handleRemoveImage = async (index, imageId) => {\n    try {\n      const { success, message } = await removeImageById(\n        imageId\n      );\n\n      if (success) {\n        // Remove the image at the specified index from the 'images' state\n        const updatedImages = [...images];\n        updatedImages.splice(index, 1);\n        setImages(updatedImages);\n        Alert.alert('Image Removed', 'The image has been successfully removed.');\n      } else {\n        console.error('Error removing image:', message);\n        // Handle the error appropriately, e.g., show an error message to the user\n      }\n    } catch (error) {\n      console.error('Error removing image:', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  };\n\n\n  if (isLoading) {\n    return <ActivityIndicator style={styles.loadingIndicator} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollViewContent}\n        keyboardShouldPersistTaps=\"handled\" // Add this prop\n      >\n        <View style={styles.headerContainer}>\n          {/* Back button */}\n          <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n            <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <Text style={styles.header}>Edit Property Listing</Text>\n        </View>\n        <View style={styles.imageRow}>\n          <ScrollView horizontal={true}>\n            {/* Add a View to hold the Add Image button */}\n            <View>\n              <TouchableOpacity onPress={handleChoosePhoto} style={styles.imagePicker}>\n                <Icon name=\"camera\" size={40} color=\"#aaa\" />\n              </TouchableOpacity>\n            </View>\n\n            {/* Map over the images */}\n            {images.map((image, index) => {\n              const imageUri = getImageUriById(image.uri);\n              // console.log('imageUri:', imageUri);\n              return (\n                <TouchableOpacity\n                  key={index}\n                  onPress={() => handleImagePress(index)}\n                  style={styles.imageContainer}\n                >\n                  {imageUri ? (\n                    <Image source={{ uri: `${imageUri}?timestamp=${new Date().getTime()}` }} style={styles.image} />\n\n                  ) : (\n                    <Image source={DefaultImage} style={styles.image} /> // Use a default image here\n                  )}\n                </TouchableOpacity>\n              );\n            })}\n\n\n          </ScrollView>\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Title</Text>\n          <TextInput\n            placeholder=\"Listing Title\"\n            placeholderTextColor=\"gray\"\n            value={propertyData.title}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, title: text }) // Fix the object reference to propertyData\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Price</Text>\n          <TextInput\n            placeholder=\"$ Price\"\n            placeholderTextColor=\"gray\"\n            keyboardType=\"numeric\"\n            value={formattedPrice}\n            onChangeText={handlePriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Option Fee</Text>\n          <TextInput\n            placeholder=\"$ Option Fee Price\"\n            placeholderTextColor=\"gray\"\n            value={formattedOptionPrice}\n            keyboardType=\"numeric\"\n            onChangeText={handleOptionPriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Option Exercise Fee</Text>\n          <TextInput\n            placeholder=\"$ Option Exercise Fee Price\"\n            placeholderTextColor=\"gray\"\n            value={formattedOptionExercisePrice}\n            keyboardType=\"numeric\"\n            onChangeText={handleOptionExercisePriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Size (sqm)</Text>\n          <TextInput\n            placeholder=\"Size (sqm)\"\n            placeholderTextColor=\"gray\"\n            keyboardType=\"numeric\"\n            value={propertyData.size}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, size: text }) // Fix the object reference to propertyData\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Bedrooms</Text>\n          <TextInput\n            placeholder=\"Number of Bedrooms\"\n            placeholderTextColor=\"gray\"\n            keyboardType=\"numeric\"\n            value={propertyData.bed}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, bed: text }) // Fix the object reference to propertyData\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Bathrooms</Text>\n          <TextInput\n           placeholder=\"Number of Bathrooms\"\n           placeholderTextColor=\"gray\"\n           keyboardType=\"numeric\"\n            value={propertyData.bathroom}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, bathroom: text }) // Fix the object reference to propertyData\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Postal Code</Text>\n          <TextInput\n            placeholder=\"Postal Code\"\n            placeholderTextColor=\"gray\"\n            maxLength={6}\n            keyboardType=\"numeric\"\n            value={propertyData.postalCode} // Display the postalCode from propertyData\n            onChangeText={handlePostalCodeChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Address</Text>\n          <TextInput\n            placeholder=\"Address\"\n            placeholderTextColor=\"gray\"\n            value={propertyData.address}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, address: text }) // Fix the object reference to propertyData\n            }\n            style={[styles.input, styles.mediumTypeInput]}\n            multiline={true}\n            numberOfLines={2}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Tenure</Text>\n          <TextInput\n            placeholder=\"Tenure (e.g. 99 years)\"\n            placeholderTextColor=\"gray\"\n            maxLength={3} // Restrict input to 6 characters\n            keyboardType=\"numeric\" // Show numeric keyboard\n            value={propertyData.tenure}\n            onChangeText={(text) => setPropertyData({ ...propertyData, tenure: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Unit Number</Text>\n          <TextInput\n            placeholder=\"Unit Number (e.g. #17-360)\"\n            placeholderTextColor=\"gray\"\n            value={propertyData.unitNumber}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, unitNumber: text }) // Fix the object reference to propertyData\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Description</Text>\n          <TextInput\n            placeholder=\"Description of Listing\"\n            placeholderTextColor=\"gray\"\n            value={propertyData.description}\n            onChangeText={(text) =>\n              setPropertyData({ ...propertyData, description: text }) // Fix the object reference to propertyData\n            }\n            style={[styles.input, styles.largeTextInput]}\n            multiline={true}\n            numberOfLines={4}\n          />\n        </View>\n\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Property Type</Text>\n          <TouchableOpacity\n            style={styles.propertyTypePickerButton}\n            onPress={() => setPropertyTypeVisible(true)}\n          >\n            <Text style={styles.propertyTypePickerText}>\n              {propertyData.propertyType\n                ? propertyData.propertyType.charAt(0).toUpperCase() +\n                propertyData.propertyType.slice(1)\n                : 'Select Property Type'}\n            </Text>\n            <Icon name=\"caret-down\" size={20} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n\n        <Modal\n          transparent={true}\n          animationType=\"slide\"\n          visible={propertyTypeVisible}\n          onRequestClose={() => setPropertyTypeVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <Picker\n              selectedValue={propertyData.propertyType}\n              onValueChange={(value) =>\n                setPropertyData({ ...property, propertyType: value })\n              }\n              style={styles.picker}\n            >\n              {propertyTypes.map((type, index) => (\n                <Picker.Item\n                  key={index}\n                  label={type.label}\n                  value={type.value}\n                />\n              ))}\n            </Picker>\n            <View style={styles.okButtonContainer}>\n              <Button\n                title=\"OK\"\n                onPress={() => setPropertyTypeVisible(false)}\n              />\n            </View>\n          </View>\n        </Modal>\n      </ScrollView>\n\n      <TouchableOpacity style={styles.saveChangesButton} onPress={handleSubmit}>\n        <Ionicons name=\"save-outline\" size={18} color=\"white\" />\n        <Text style={styles.saveChangesButtonText}>Update</Text>\n      </TouchableOpacity>\n\n      <FullScreenImage\n        imageUrl={fullScreenImage}\n        onClose={() => setFullScreenImage(null)} // Close the full-screen image view\n      />\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 10, // Adjust this margin to avoid overlap with the navigation bar\n  },\n  inputContainer: {\n    marginBottom: 10,\n  },\n  label: {\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8,\n    height: 40,\n    borderRadius: 5,\n  },\n  largeTextInput: {\n    height: 120,\n  },\n  mediumTypeInput: {\n    height: 60,\n  },\n  imageRow: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    paddingVertical: 10,\n  },\n  imagePicker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n    width: 100,\n    height: 100,\n    marginRight: 10,\n  },\n  imageContainer: {\n    position: 'relative',\n    marginRight: 10,\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  propertyTypePickerText: {\n    fontSize: 14,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20, // Add padding to make the button visible\n  },\n  picker: {\n    backgroundColor: 'white',\n  },\n  okButtonContainer: {\n    backgroundColor: 'white',\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center', // Center horizontally\n    flexDirection: 'row',\n    justifyContent: 'center', // Center vertically\n    width: '60%',\n    marginLeft: 70,\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 40,\n  },\n  scrollViewContent: {\n    paddingBottom: 100, // Adjust this value as needed to ensure the input field is visible\n  },\n});\n\nexport default EditPropertyListing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}