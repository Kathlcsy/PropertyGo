{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign, Foundation, MaterialIcons } from \"@expo/vector-icons\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { AuthContext } from \"../AuthContext\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { BASE_URL, fetchFolders, fetchTransactions } from \"../utils/documentApi\";\nimport { fetchPartnerApplication } from \"../utils/partnerApplicationApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var DocumentSelector = function DocumentSelector(_ref) {\n  var documentFetch = _ref.documentFetch,\n    folderState = _ref.folderState,\n    isTransaction = _ref.isTransaction;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    descriptions = _useState4[0],\n    setDescriptions = _useState4[1];\n  var _useState5 = useState(200),\n    _useState6 = _slicedToArray(_useState5, 2),\n    length = _useState6[0],\n    setLength = _useState6[1];\n  var _useState7 = useState(folderState),\n    _useState8 = _slicedToArray(_useState7, 2),\n    folders = _useState8[0],\n    setFolders = _useState8[1];\n  var _useState9 = useState({}),\n    _useState10 = _slicedToArray(_useState9, 2),\n    folderSelection = _useState10[0],\n    setFoldersSelection = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    transactions = _useState12[0],\n    setTransactions = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    documentTransactions = _useState14[0],\n    setDocumentTransactions = _useState14[1];\n  var _useState15 = useState(1),\n    _useState16 = _slicedToArray(_useState15, 2),\n    defaultTransactionId = _useState16[0],\n    setDefaultTransactionId = _useState16[1];\n  var _useState17 = useState(1),\n    _useState18 = _slicedToArray(_useState17, 2),\n    defaultFolderId = _useState18[0],\n    setDefaultFolderId = _useState18[1];\n  var _useState19 = useState(),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedFolder = _useState20[0],\n    setSelectedFolder = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    partnerApp = _useState22[0],\n    setPartnerApp = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isOpen1 = _useState24[0],\n    setIsOpen1 = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    isOpen2 = _useState26[0],\n    setIsOpen2 = _useState26[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var USER_ID = user.user.userId;\n  useEffect(function () {\n    fetchFoldersFromServer().then(function (r) {\n      return console.log(\"Fetch folders completed.\");\n    });\n  }, []);\n  useEffect(function () {\n    console.log(folders);\n    setFolders(folders);\n  }, [folders]);\n  useEffect(function () {\n    fetchTransactionsFromServer().then(function (r) {\n      return console.log(\"Fetch transactions completed.\");\n    });\n  }, []);\n  useEffect(function () {\n    console.log(transactions);\n    setTransactions(transactions);\n  }, [transactions]);\n  useEffect(function () {\n    fetchPartnerAppFromServer().then(function (r) {\n      return console.log(\"Fetch partner application successful.\");\n    });\n  }, []);\n  useEffect(function () {\n    console.log(partnerApp);\n    setPartnerApp(partnerApp);\n  }, [partnerApp]);\n  var fetchFoldersFromServer = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _folders = yield fetchFolders(USER_ID);\n        console.log(\"Fetched Folders: \", _folders);\n        setFolders(_folders);\n        setDefaultFolderId(_folders[0].folderId);\n        setSelectedFolder(_folders[0].folderId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchFoldersFromServer() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchTransactionsFromServer = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _transactions = yield fetchTransactions(USER_ID);\n        console.log(\"Fetched Transactions: \", _transactions);\n        setTransactions(_transactions);\n        setDefaultTransactionId(_transactions[0].transactionId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchTransactionsFromServer() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchPartnerAppFromServer = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var _partnerApp = yield fetchPartnerApplication(USER_ID);\n        console.log(\"Fetched Partner Applications: \", _partnerApp);\n        setPartnerApp(_partnerApp);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchPartnerAppFromServer() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var selectDocuments = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: \"application/pdf\"\n        });\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets;\n          setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n        }\n      } catch (error) {\n        console.log(\"Error selecting documents:\", error);\n      }\n    });\n    return function selectDocuments() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var removeDocument = function removeDocument(document) {\n    var newSelectedDocuments = selectedDocuments.filter(function (doc) {\n      return doc.name !== document.name;\n    });\n    setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n  };\n  var handleUpload = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var fileuri = document.uri;\n          var filetype = \"application/pdf\";\n          var filename = document.name;\n          var transactionId = documentTransactions[document.name] !== undefined ? documentTransactions[document.name] : defaultTransactionId;\n          var folderId = folderSelection[document.name] !== undefined ? folderSelection[document.name] : defaultFolderId;\n          if (Platform.OS === \"web\") {\n            var base64Data = fileuri.split(\",\")[1];\n            var base64String = window.atob(base64Data);\n            var bytes = new Uint8Array(base64String.length);\n            for (var i = 0; i < base64String.length; i++) {\n              bytes[i] = base64String.charCodeAt(i);\n            }\n            var fileBlob = new Blob([bytes], {\n              type: filetype\n            });\n            fileData.append(\"documents\", fileBlob, filename);\n          } else {\n            fileData.append(\"documents\", {\n              uri: fileuri,\n              name: filename,\n              type: filetype\n            });\n            console.log(\"fileUri: \", fileuri);\n          }\n          fileData.append(\"description\", descriptions);\n          if (isTransaction) {\n            fileData.append(\"transactionId\", transactionId);\n          } else {\n            fileData.append(\"partnerApplicationId\", partnerApp.partnerApp[0].partnerApplicationId);\n          }\n          fileData.append(\"folderId\", folderId);\n          fileData.append(\"userId\", USER_ID);\n        });\n        console.log(fileData);\n        var response = yield fetch(`${BASE_URL}/user/documents/upload`, {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n          yield documentFetch();\n        } else {\n          console.log(\"File upload failed\");\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function handleUpload() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var renderDocumentItem = function renderDocumentItem(_ref7) {\n    var item = _ref7.item;\n    return _jsxs(View, {\n      style: styles.documentItem,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), isTransaction && _jsxs(View, {\n        style: {\n          zIndex: 5001\n        },\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Transaction ID: \"\n        }), _jsx(DropDownPicker, {\n          listMode: \"MODAL\",\n          open: isOpen1,\n          setOpen: setIsOpen1,\n          value: documentTransactions[item.name] || defaultTransactionId,\n          setValue: function setValue(callback) {\n            var newValue = callback(documentTransactions[item.name]);\n            setDocumentTransactions(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, item.name, newValue));\n            });\n          },\n          items: transactions.map(function (transaction) {\n            return {\n              label: transaction.transactionId,\n              value: transaction.transactionId\n            };\n          }),\n          defaultValue: documentTransactions[item.name],\n          onChangeItem: function onChangeItem(item) {\n            return setDocumentTransactions(_objectSpread(_objectSpread({}, documentTransactions), {}, _defineProperty({}, item.name, item.value)));\n          },\n          containerStyle: {\n            height: 50\n          },\n          style: {\n            paddingHorizontal: 10,\n            paddingVertical: 5\n          },\n          dropDownStyle: {\n            marginTop: 2,\n            zIndex: 5000\n          },\n          labelStyle: {\n            fontSize: 12,\n            textAlign: 'left',\n            color: '#000'\n          }\n        })]\n      }), _jsx(Text, {\n        children: \" \\xA0 \\xA0 \"\n      }), _jsxs(View, {\n        style: {\n          zIndex: 5000\n        },\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Folder for Document: \"\n        }), _jsx(DropDownPicker, {\n          listMode: \"MODAL\",\n          open: isOpen2,\n          setOpen: setIsOpen2,\n          value: folderSelection[item.name] || defaultFolderId,\n          setValue: function setValue(callback) {\n            var newValue = callback(folderSelection[item.name]);\n            setFoldersSelection(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, item.name, newValue));\n            });\n          },\n          items: folderState.map(function (folder) {\n            return {\n              label: folder.title,\n              value: folder.folderId\n            };\n          }),\n          defaultValue: folderSelection[item.name],\n          onChangeItem: function onChangeItem(item) {\n            return setFoldersSelection(_objectSpread(_objectSpread({}, folderSelection), {}, _defineProperty({}, item.name, item.value)));\n          },\n          containerStyle: {\n            height: 40\n          },\n          style: {\n            paddingHorizontal: 10,\n            paddingVertical: 5\n          },\n          dropDownStyle: {\n            marginTop: 2,\n            zIndex: 5000\n          },\n          labelStyle: {\n            fontSize: 12,\n            textAlign: 'left',\n            color: '#000'\n          }\n        })]\n      }), _jsx(Text, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }), _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return removeDocument(item);\n          },\n          children: [_jsx(Text, {\n            children: \" Remove Document \"\n          }), _jsx(Text, {\n            children: \"\\xA0\"\n          }), _jsx(Foundation, {\n            name: \"page-remove\",\n            size: 24,\n            color: \"black\"\n          })]\n        })\n      })]\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      paddingHorizontal: 10,\n      backgroundColor: '#fff'\n    },\n    children: _jsx(FlatList, {\n      ListHeaderComponent: _jsx(_Fragment, {\n        children: _jsx(Text, {\n          style: styles.detailText,\n          children: \"List of Selected Documents:\"\n        })\n      }),\n      ListFooterComponent: _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.descriptionContainer,\n          children: [_jsx(Text, {\n            style: styles.detailText,\n            children: \"Write your description for the files selected:\"\n          }), _jsx(TextInput, {\n            style: styles.descriptionInput,\n            placeholder: \"Add a description\",\n            value: descriptions,\n            maxLength: 200,\n            onChangeText: function onChangeText(text) {\n              setDescriptions(text);\n              setLength(200 - text.length);\n            }\n          }), _jsxs(Text, {\n            children: [\" Remaining: \", length]\n          })]\n        }), _jsxs(View, {\n          style: styles.iconContainer,\n          children: [_jsx(TouchableOpacity, {\n            onPress: selectDocuments,\n            children: _jsx(AntDesign, {\n              name: \"addfile\",\n              size: 24,\n              color: \"black\"\n            })\n          }), _jsx(Text, {\n            children: \" \\xA0\\xA0\\xA0 \"\n          }), _jsx(TouchableOpacity, {\n            onPress: handleUpload,\n            disabled: selectedDocuments.length === 0,\n            children: _jsx(AntDesign, {\n              name: selectedDocuments.length === 0 ? \"cloudoff\" : \"clouduploado\",\n              size: 24,\n              color: selectedDocuments.length === 0 ? \"grey\" : \"black\"\n            })\n          })]\n        })]\n      }),\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsxs(View, {\n          style: styles.emptyListContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"description\",\n            size: 40,\n            color: \"lightgray\"\n          }), _jsx(Text, {\n            style: styles.emptyListText,\n            children: \"Your selected documents would appear here.\"\n          })]\n        });\n      },\n      data: selectedDocuments,\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id ? item.id.toString() : index.toString();\n      },\n      renderItem: renderDocumentItem\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  headerText: {\n    fontSize: 10,\n    marginBottom: \"2%\",\n    textAlign: \"center\"\n  },\n  iconContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    flexDirection: \"row\",\n    borderColor: '#000',\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 5\n  },\n  descriptionContainer: {\n    marginVertical: '4%'\n  },\n  descriptionInput: {\n    height: 30,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginVertical: `2%`,\n    padding: `2%`\n  },\n  detailText: {\n    fontSize: 12,\n    marginBottom: \"2%\",\n    fontWeight: \"bold\"\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 5,\n    padding: \"3%\",\n    paddingTop: \"3.5%\",\n    flex: 1\n  },\n  documentItem: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"1.5%\",\n    marginBottom: \"1%\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 10,\n    width: \"100%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  },\n  documentText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#333'\n  },\n  descriptionText: {\n    fontSize: 14,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\"\n  },\n  button: {\n    backgroundColor: '#D3D3D3',\n    padding: 10,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    marginVertical: 5,\n    flexDirection: \"row\"\n  },\n  cancelButton: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600'\n  },\n  emptyListContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  emptyListText: {\n    fontSize: 18,\n    color: 'gray',\n    textAlign: 'center',\n    marginTop: 10\n  },\n  undefined: undefined\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","FlatList","Platform","SafeAreaView","StyleSheet","Text","TextInput","TouchableOpacity","View","AntDesign","Foundation","MaterialIcons","DocumentPicker","AuthContext","DropDownPicker","BASE_URL","fetchFolders","fetchTransactions","fetchPartnerApplication","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DocumentSelector","_ref","documentFetch","folderState","isTransaction","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","_useState3","_useState4","descriptions","setDescriptions","_useState5","_useState6","length","setLength","_useState7","_useState8","folders","setFolders","_useState9","_useState10","folderSelection","setFoldersSelection","_useState11","_useState12","transactions","setTransactions","_useState13","_useState14","documentTransactions","setDocumentTransactions","_useState15","_useState16","defaultTransactionId","setDefaultTransactionId","_useState17","_useState18","defaultFolderId","setDefaultFolderId","_useState19","_useState20","selectedFolder","setSelectedFolder","_useState21","_useState22","partnerApp","setPartnerApp","_useState23","_useState24","isOpen1","setIsOpen1","_useState25","_useState26","isOpen2","setIsOpen2","_useContext","user","USER_ID","userId","fetchFoldersFromServer","then","r","console","log","fetchTransactionsFromServer","fetchPartnerAppFromServer","_ref2","_asyncToGenerator","folderId","error","apply","arguments","_ref3","transactionId","_ref4","selectDocuments","_ref5","results","getDocumentAsync","multiple","type","canceled","newSelectedDocuments","assets","_toConsumableArray","removeDocument","document","filter","doc","name","handleUpload","_ref6","fileData","FormData","forEach","fileuri","uri","filetype","filename","undefined","OS","base64Data","split","base64String","window","atob","bytes","Uint8Array","i","charCodeAt","fileBlob","Blob","append","partnerApplicationId","response","fetch","method","body","ok","data","json","renderDocumentItem","_ref7","item","style","styles","documentItem","children","documentText","zIndex","descriptionText","listMode","open","setOpen","value","setValue","callback","newValue","prev","_objectSpread","_defineProperty","items","map","transaction","label","defaultValue","onChangeItem","containerStyle","height","paddingHorizontal","paddingVertical","dropDownStyle","marginTop","labelStyle","fontSize","textAlign","color","folder","title","button","onPress","size","backgroundColor","ListHeaderComponent","detailText","ListFooterComponent","descriptionContainer","descriptionInput","placeholder","maxLength","onChangeText","text","iconContainer","disabled","ListEmptyComponent","emptyListContainer","emptyListText","keyExtractor","index","id","toString","renderItem","create","headerText","marginBottom","alignItems","justifyContent","flexDirection","borderColor","borderWidth","borderRadius","padding","marginVertical","fontWeight","documentListContainer","paddingTop","flex","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontStyle","cancelButton","buttonText"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/components/DocumentSelector.js"],"sourcesContent":["// Since the Document Selector is a common component, I am going to abstract it.\nimport React, {useContext, useEffect, useState} from 'react';\nimport {FlatList, Platform, SafeAreaView, StyleSheet, Text, TextInput, TouchableOpacity, View} from \"react-native\";\nimport {AntDesign, Foundation, MaterialIcons} from \"@expo/vector-icons\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport {AuthContext} from \"../AuthContext\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport {BASE_URL, fetchFolders, fetchTransactions} from \"../utils/documentApi\";\nimport {fetchPartnerApplication} from \"../utils/partnerApplicationApi\";\n\nexport const DocumentSelector = ({documentFetch, folderState, isTransaction}) => {\n    const [selectedDocuments, setSelectedDocuments] = useState([]); // Documents to upload\n    const [descriptions, setDescriptions] = useState(\"\"); // Description text\n    const [length, setLength] = useState(200); // Description text length\n    const [folders, setFolders] = useState(folderState); // Add state for folders list\n    const [folderSelection, setFoldersSelection] = useState({}); // Add state for folder selection -> map document to folder\n    const [transactions, setTransactions] = useState([]); // Add state for transactions list\n    const [documentTransactions, setDocumentTransactions] = useState({}); // Document transactions\n    const [defaultTransactionId, setDefaultTransactionId] = useState(1); // Default transaction id\n    const [defaultFolderId, setDefaultFolderId] = useState(1); // Default folder id\n    const [selectedFolder, setSelectedFolder] = useState(); // Add state for selected folder\n    const [partnerApp, setPartnerApp] = useState([]);\n    const [isOpen1, setIsOpen1] = useState(false);\n    const [isOpen2, setIsOpen2] = useState(false);\n\n    const {user} = useContext(AuthContext);\n    const USER_ID = user.user.userId;\n\n\n    // Call fetchFolders on initial mount\n    useEffect(() => {\n        fetchFoldersFromServer().then(r => console.log(\"Fetch folders completed.\"));\n    }, []);\n\n    useEffect(() => {\n        console.log(folders);\n        setFolders(folders);\n    }, [folders]);\n\n    // Fetch transactions on mount\n    // Currently dummy user set to 1.\n    useEffect(() => {\n        fetchTransactionsFromServer().then(r => console.log(\"Fetch transactions completed.\"));\n    }, [])\n\n    useEffect(() => {\n        console.log(transactions);\n        setTransactions(transactions);\n    }, [transactions]);\n\n    useEffect(() => {\n        fetchPartnerAppFromServer().then(r => console.log(\"Fetch partner application successful.\"))\n    }, []);\n\n    useEffect(() => {\n        console.log(partnerApp);\n        setPartnerApp(partnerApp)\n    }, [partnerApp]);\n\n    const fetchFoldersFromServer = async () => {\n        try {\n            const folders = await fetchFolders(USER_ID)\n            console.log(\"Fetched Folders: \", folders)\n            setFolders(folders);\n            setDefaultFolderId(folders[0].folderId);\n            setSelectedFolder(folders[0].folderId);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const fetchTransactionsFromServer = async () => {\n        try {\n            const transactions = await fetchTransactions(USER_ID)\n            console.log(\"Fetched Transactions: \", transactions)\n            setTransactions(transactions);\n            setDefaultTransactionId(transactions[0].transactionId);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const fetchPartnerAppFromServer = async () => {\n        try {\n            const partnerApp = await fetchPartnerApplication(USER_ID)\n            console.log(\"Fetched Partner Applications: \", partnerApp)\n            setPartnerApp(partnerApp);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    // This is supposed to show all the documents that you selected.\n    const selectDocuments = async () => {\n        try {\n            const results = await DocumentPicker.getDocumentAsync({\n                multiple: true,\n                type: \"application/pdf\",\n            });\n            if (results.canceled === false) {\n                const newSelectedDocuments = results.assets;\n                setSelectedDocuments([...newSelectedDocuments]);\n            }\n        } catch (error) {\n            console.log(\"Error selecting documents:\", error);\n        }\n    };\n\n    // This is supposed to remove a documents from the selected documents list.\n    const removeDocument = (document) => {\n        const newSelectedDocuments = selectedDocuments.filter(\n            (doc) => doc.name !== document.name\n        );\n        setSelectedDocuments([...newSelectedDocuments]);\n    };\n\n    // This then uploads the documents you selected.\n    // Web: Data stored in URI need to convert to Blob.\n    // Mobile: Data stored not in URI can send directly.\n    // TODO: Need to disable the upload function if the selectedDocument is 0.\n    const handleUpload = async () => {\n        try {\n            const fileData = new FormData();\n            selectedDocuments.forEach((document) => {\n                const fileuri = document.uri;\n                const filetype = \"application/pdf\";\n                const filename = document.name;\n                const transactionId =\n                    documentTransactions[document.name] !== undefined\n                        ? documentTransactions[document.name]\n                        : defaultTransactionId;\n                const folderId =\n                    folderSelection[document.name] !== undefined\n                        ? folderSelection[document.name]\n                        : defaultFolderId;\n\n                if (Platform.OS === \"web\") {\n                    // Extract the base64-encoded data from the URI\n                    const base64Data = fileuri.split(\",\")[1];\n                    // Decode the base64 string into a Uint8Array\n                    const base64String = window.atob(base64Data);\n                    const bytes = new Uint8Array(base64String.length);\n                    for (let i = 0; i < base64String.length; i++) {\n                        bytes[i] = base64String.charCodeAt(i);\n                    }\n                    // Create a Blob object from the decoded data\n                    const fileBlob = new Blob([bytes], {type: filetype});\n                    fileData.append(\"documents\", fileBlob, filename);\n                } else {\n                    fileData.append(\"documents\", {\n                        uri: fileuri,\n                        name: filename,\n                        type: filetype\n                    });\n                    console.log(\"fileUri: \", fileuri)\n                }\n                fileData.append(\"description\", descriptions);\n                if (isTransaction) {\n                    fileData.append(\"transactionId\", transactionId);\n                } else {\n                    fileData.append(\"partnerApplicationId\", partnerApp.partnerApp[0].partnerApplicationId)\n                }\n                fileData.append(\"folderId\", folderId);\n                fileData.append(\"userId\", USER_ID);\n            });\n\n            console.log(fileData)\n\n            // Send the data to the API\n            const response = await fetch(`${BASE_URL}/user/documents/upload`, {\n                method: \"post\",\n                body: fileData,\n            });\n\n            // Check the response status and log the result\n            if (response.ok) {\n                const data = await response.json();\n                console.log(\"Upload response:\", data);\n                await documentFetch();\n            } else {\n                console.log(\"File upload failed\");\n            }\n        } catch (error) {\n            console.log(\"Error upload:\", error);\n        }\n    };\n\n    // This is for the Select Documents\n    // Honestly this needs to change depending on what is the current status.\n    // Conditional changes depending on whether it is partner app or not -> If it is an Application, then don't show.\n    // There needs to be a validator here.....\n    const renderDocumentItem = ({item}) => (\n        <View style={styles.documentItem}>\n            <Text style={styles.documentText}>{item.name}</Text>\n\n            {isTransaction && <View style={{zIndex: 5001}}>\n                <Text style={styles.descriptionText}>Transaction ID: </Text>\n                <DropDownPicker\n                    listMode={\"MODAL\"}\n                    open={isOpen1}\n                    setOpen={setIsOpen1}\n                    value={documentTransactions[item.name] || defaultTransactionId}\n                    setValue={(callback) => {\n                        const newValue = callback(documentTransactions[item.name]);\n                        setDocumentTransactions(prev => ({...prev, [item.name]: newValue}));\n                    }}\n                    items={transactions.map(transaction => ({\n                        label: transaction.transactionId,\n                        value: transaction.transactionId\n                    }))}\n                    defaultValue={documentTransactions[item.name]}\n                    onChangeItem={(item) => setDocumentTransactions({...documentTransactions, [item.name]: item.value})}\n                    containerStyle={{height: 50}} // Adjust the height as needed\n                    style={{paddingHorizontal: 10, paddingVertical: 5,}} // Adjust padding as needed\n                    dropDownStyle={{marginTop: 2, zIndex: 5000}} // Adjust margin, if needed\n                    labelStyle={{fontSize: 12, textAlign: 'left', color: '#000'}} // Adjust label font size and color\n                />\n            </View>}\n            <Text> &nbsp; &nbsp; </Text>\n            <View style={{zIndex: 5000}}>\n                <Text style={styles.descriptionText}>Folder for Document: </Text>\n                <DropDownPicker\n                    listMode={\"MODAL\"}\n                    open={isOpen2}\n                    setOpen={setIsOpen2}\n                    value={folderSelection[item.name] || defaultFolderId}\n                    setValue={(callback) => {\n                        const newValue = callback(folderSelection[item.name]);\n                        setFoldersSelection(prev => ({...prev, [item.name]: newValue}));\n                    }}\n                    items={folderState.map(folder => ({label: folder.title, value: folder.folderId}))}\n                    defaultValue={folderSelection[item.name]}\n                    onChangeItem={(item) => setFoldersSelection({...folderSelection, [item.name]: item.value})}\n                    containerStyle={{height: 40}} // Adjust the height as needed\n                    style={{paddingHorizontal: 10, paddingVertical: 5}} // Adjust padding as needed\n                    dropDownStyle={{marginTop: 2, zIndex: 5000}} // Adjust margin, if needed\n                    labelStyle={{fontSize: 12, textAlign: 'left', color: '#000'}} // Adjust label font size and color\n                />\n            </View>\n            <Text>&nbsp;&nbsp;&nbsp;</Text>\n            <View>\n                <TouchableOpacity style={styles.button} onPress={() => removeDocument(item)}>\n                    <Text> Remove Document </Text>\n                    <Text>&nbsp;</Text>\n                    <Foundation name=\"page-remove\" size={24} color=\"black\"/>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    return (\n        <SafeAreaView style={{paddingHorizontal: 10, backgroundColor: '#fff' }}>\n            <FlatList\n                ListHeaderComponent={\n                    <>\n                        <Text style={styles.detailText}>List of Selected Documents:</Text>\n                    </>\n                }\n                ListFooterComponent={\n                    <>\n                        <View style={styles.descriptionContainer}>\n                            <Text style={styles.detailText}>\n                                Write your description for the files selected:\n                            </Text>\n                            <TextInput\n                                style={styles.descriptionInput}\n                                placeholder=\"Add a description\"\n                                value={descriptions}\n                                maxLength={200} // max length of the text\n                                onChangeText={(text) => {\n                                    setDescriptions(text);\n                                    setLength(200 - text.length);\n                                }}\n                            />\n                            <Text> Remaining: {length}</Text>\n                        </View>\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={selectDocuments}>\n                                <AntDesign name=\"addfile\" size={24} color=\"black\"/>\n                            </TouchableOpacity>\n                            <Text> &nbsp;&nbsp;&nbsp; </Text>\n                            <TouchableOpacity onPress={handleUpload} disabled={selectedDocuments.length === 0}>\n                                <AntDesign\n                                    name={selectedDocuments.length === 0 ? \"cloudoff\" : \"clouduploado\"}\n                                    size={24}\n                                    color={selectedDocuments.length === 0 ? \"grey\" : \"black\"}\n                                />\n                            </TouchableOpacity>\n\n                        </View>\n                    </>\n                }\n                ListEmptyComponent={() => (\n                    <View style={styles.emptyListContainer}>\n                        <MaterialIcons name=\"description\" size={40} color=\"lightgray\"/>\n                        <Text style={styles.emptyListText}>\n                            Your selected documents would appear here.\n                        </Text>\n                    </View>\n                )}\n                data={selectedDocuments}\n                keyExtractor={(item, index) =>\n                    item.id ? item.id.toString() : index.toString()\n                }\n                renderItem={renderDocumentItem}\n            />\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n\n    headerText: {\n        fontSize: 10,\n        marginBottom: \"2%\",\n        textAlign: \"center\",\n    },\n\n\n    iconContainer: {\n        alignItems: 'flex-start',\n        justifyContent: 'space-evenly',\n        flexDirection: \"row\",\n        borderColor: '#000',\n        borderWidth: 1,\n        borderRadius: 15,\n        padding: 5,\n    },\n\n    descriptionContainer: {\n        marginVertical: '4%',\n    },\n\n    descriptionInput: {\n        height: 30, // Changed from `1%` to a fixed value\n        borderColor: \"gray\",\n        borderWidth: 1,\n        borderRadius: 5, // Changed from `2%` to a fixed value\n        marginVertical: `2%`,\n        padding: `2%`,\n    },\n\n\n    detailText: {\n        fontSize: 12,\n        marginBottom: \"2%\",\n        fontWeight: \"bold\",\n    },\n\n    documentListContainer: {\n        borderWidth: 1,\n        borderColor: \"#ddd\",\n        borderRadius: 5, // Changed from `2%` to a fixed value\n        padding: \"3%\",\n        paddingTop: \"3.5%\",\n        flex: 1,\n    },\n\n    documentItem: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"1.5%\", // Reduced padding for a more compact look\n        marginBottom: \"1%\", // Reduced margin for a more compact look\n        backgroundColor: \"#FFFFFF\", // Lighter background color for iOS theme\n        borderRadius: 10, // Moderate border radius for a card-like appearance\n        width: \"100%\",\n        shadowColor: \"#000\", // Shadow for a card-like appearance\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.22,\n        shadowRadius: 2.22,\n    },\n\n    documentText: {\n        fontSize: 16, // A size that is readable and maintains hierarchy\n        fontWeight: '500', // Semi-bold to make the text stand out\n        color: '#333', // A shade of black to keep text readable and clean\n    },\n\n    descriptionText: {\n        fontSize: 14, // Changed from `3.5%` to a fixed value\n        fontStyle: \"italic\",\n        fontWeight: \"bold\",\n    },\n\n\n    button: {\n        backgroundColor: '#D3D3D3', // A pleasant blue tone for the primary button\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 5, // A little vertical margin for aesthetic spacing\n        flexDirection: \"row\"\n    },\n    cancelButton: {\n        backgroundColor: '#ccc', // A neutral gray for the cancel button\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 5, // A little vertical margin for aesthetic spacing\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '600', // Semi-bold text\n    },\n\n\n    emptyListContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 18,\n        color: 'gray',\n        textAlign: 'center',\n        marginTop: 10,\n    }, undefined\n\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}