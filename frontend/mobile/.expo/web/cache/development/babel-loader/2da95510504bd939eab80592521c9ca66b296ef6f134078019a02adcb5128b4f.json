{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropertyCard from \"./PropertyCardSmall\";\nimport { getPropertiesByRegion } from \"../../utils/api\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RegionPropertyList = function RegionPropertyList(_ref) {\n  var region = _ref.region,\n    onPropertyPress = _ref.onPropertyPress,\n    handleTitlePress = _ref.handleTitlePress;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    properties = _useState2[0],\n    setProperties = _useState2[1];\n  useEffect(function () {\n    loadPropertiesByRegion(region);\n  }, [region]);\n  useFocusEffect(React.useCallback(function () {\n    loadPropertiesByRegion(region);\n  }, [region]));\n  var loadPropertiesByRegion = function () {\n    var _ref2 = _asyncToGenerator(function* (region) {\n      try {\n        var _yield$getPropertiesB = yield getPropertiesByRegion(region),\n          success = _yield$getPropertiesB.success,\n          data = _yield$getPropertiesB.data;\n        if (success) {\n          var top10Properties = data.sort(function (a, b) {\n            return b.favoriteCount - a.favoriteCount;\n          }).slice(0, 10);\n          setProperties(top10Properties);\n        } else {\n          console.error(`Error loading properties in ${region}:`, data.message);\n        }\n      } catch (error) {\n        console.error(`Error loading properties in ${region}:`, error.message);\n      }\n    });\n    return function loadPropertiesByRegion(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleTitlePress(`${region} Area Properties`, properties);\n      },\n      children: _jsxs(Text, {\n        style: styles.sectionTitle,\n        children: [region, \" Area Properties\"]\n      })\n    }), _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      children: properties.map(function (property) {\n        return _jsx(PropertyCard, {\n          property: property,\n          onPress: function onPress() {\n            return onPropertyPress(property.propertyListingId);\n          }\n        }, property.propertyId);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nexport default RegionPropertyList;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","ScrollView","TouchableOpacity","PropertyCard","getPropertiesByRegion","useFocusEffect","jsxs","_jsxs","jsx","_jsx","RegionPropertyList","_ref","region","onPropertyPress","handleTitlePress","_useState","_useState2","_slicedToArray","properties","setProperties","loadPropertiesByRegion","useCallback","_ref2","_asyncToGenerator","_yield$getPropertiesB","success","data","top10Properties","sort","a","b","favoriteCount","slice","console","error","message","_x","apply","arguments","style","styles","container","children","onPress","sectionTitle","horizontal","showsHorizontalScrollIndicator","map","property","propertyListingId","propertyId","create","padding","fontSize","fontWeight","marginBottom"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/propertyListings/RegionPropertyList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport PropertyCard from './PropertyCardSmall'; // Import your PropertyCard component\nimport { getPropertiesByRegion } from '../../utils/api';\nimport { useFocusEffect } from '@react-navigation/native'; // Import useFocusEffect\n\nconst RegionPropertyList = ({ region, onPropertyPress, handleTitlePress }) => {\n  const [properties, setProperties] = useState([]);\n\n  useEffect(() => {\n    loadPropertiesByRegion(region);\n  }, [region]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      loadPropertiesByRegion(region);\n    }, [region])\n  );\n\n  const loadPropertiesByRegion = async (region) => {\n    try {\n      const { success, data } = await getPropertiesByRegion(region);\n\n      if (success) {\n        const top10Properties = data\n        .sort((a, b) => b.favoriteCount - a.favoriteCount)\n        .slice(0, 10);\n        setProperties(top10Properties);\n      } else {\n        console.error(`Error loading properties in ${region}:`, data.message);\n      }\n    } catch (error) {\n      console.error(`Error loading properties in ${region}:`, error.message);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={() => handleTitlePress(`${region} Area Properties`, properties)}>\n        <Text style={styles.sectionTitle}>{region} Area Properties</Text>\n      </TouchableOpacity>\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n        {properties.map((property) => (\n          <PropertyCard key={property.propertyId} property={property} onPress={() => onPropertyPress(property.propertyListingId)} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n});\n\nexport default RegionPropertyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}