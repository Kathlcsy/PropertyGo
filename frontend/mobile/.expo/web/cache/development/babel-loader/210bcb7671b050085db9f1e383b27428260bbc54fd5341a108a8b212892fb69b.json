{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TokenCard = function TokenCard(_ref) {\n  var tokenData = _ref.tokenData,\n    onPressBuy = _ref.onPressBuy;\n  var tokenName = tokenData.tokenName,\n    tokenPrice = tokenData.tokenPrice,\n    tokenAmount = tokenData.tokenAmount;\n  return _jsx(Card, {\n    style: [styles.card, styles.whiteBackground],\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.leftSide,\n        children: [_jsx(Text, {\n          style: styles.tokenName,\n          children: tokenName\n        }), _jsx(Text, {\n          style: styles.tokenDetails,\n          children: `SGD ${tokenPrice.toFixed(2)}/Token`\n        }), _jsx(Text, {\n          style: [styles.tokenDetails, styles.tokenAmountColor],\n          children: `SGD ${tokenAmount.toFixed(2)}`\n        })]\n      }), _jsx(View, {\n        style: styles.rightSide,\n        children: _jsx(TouchableOpacity, {\n          onPress: onPressBuy,\n          children: _jsx(Button, {\n            mode: \"contained\",\n            style: styles.buyButton,\n            labelStyle: styles.buttonLabel,\n            children: \"Buy\"\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    margin: 8,\n    borderRadius: 8,\n    elevation: 4\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16\n  },\n  leftSide: {\n    flex: 1\n  },\n  tokenName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  tokenDetails: {\n    fontSize: 14,\n    color: 'black'\n  },\n  tokenAmountColor: {\n    color: 'green'\n  },\n  rightSide: {},\n  buyButton: {\n    flex: 1,\n    padding: 1,\n    backgroundColor: '#FFD700',\n    alignItems: 'center',\n    borderWidth: 0.5,\n    borderColor: 'grey',\n    borderRadius: 5,\n    margin: 2\n  },\n  buttonLabel: {\n    color: 'black'\n  },\n  whiteBackground: {\n    backgroundColor: 'white'\n  }\n});\nexport default TokenCard;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Card","Button","jsx","_jsx","jsxs","_jsxs","TokenCard","_ref","tokenData","onPressBuy","tokenName","tokenPrice","tokenAmount","style","styles","card","whiteBackground","children","container","leftSide","tokenDetails","toFixed","tokenAmountColor","rightSide","onPress","mode","buyButton","labelStyle","buttonLabel","create","margin","borderRadius","elevation","flexDirection","justifyContent","alignItems","padding","flex","fontSize","fontWeight","color","backgroundColor","borderWidth","borderColor"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/token/TokenCard.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Card, Button } from 'react-native-paper';\n\nconst TokenCard = ({ tokenData, onPressBuy }) => {\n  const { tokenName, tokenPrice, tokenAmount } = tokenData;\n\n  return (\n    <Card style={[styles.card, styles.whiteBackground]}>\n      <View style={styles.container}>\n        <View style={styles.leftSide}>\n          <Text style={styles.tokenName}>{tokenName}</Text>\n          <Text style={styles.tokenDetails}>{`SGD ${tokenPrice.toFixed(2)}/Token`}</Text>\n          <Text style={[styles.tokenDetails, styles.tokenAmountColor]}>{`SGD ${tokenAmount.toFixed(2)}`}</Text>\n        </View>\n        <View style={styles.rightSide}>\n          <TouchableOpacity onPress={onPressBuy}>\n            <Button mode=\"contained\" style={styles.buyButton} labelStyle={styles.buttonLabel}>\n              Buy\n            </Button>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 8,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  leftSide: {\n    flex: 1,\n  },\n  tokenName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  tokenDetails: {\n    fontSize: 14,\n    color: 'black',\n  },\n  tokenAmountColor: {\n    color: 'green',\n  },\n  rightSide: {},\n  buyButton: {\n    flex: 1,\n    padding: 1,\n    backgroundColor: '#FFD700', // Yellow color\n    alignItems: 'center',\n    borderWidth: 0.5,        // Add border\n    borderColor: 'grey',   // Border color\n    borderRadius: 5,      // Make it rounded\n    margin: 2,  // Margin for spacing between buttons\n  },\n  buttonLabel: {\n    color: 'black',\n  },\n  whiteBackground: { // Add this style for white background\n    backgroundColor: 'white',\n  },\n});\n\nexport default TokenCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}