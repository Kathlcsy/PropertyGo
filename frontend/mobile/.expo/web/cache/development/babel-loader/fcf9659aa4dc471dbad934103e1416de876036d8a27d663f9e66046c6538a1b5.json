{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { BASE_URL } from \"./documentApi\";\nexport var fetchAllTransactions = function () {\n  var _ref = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchAllTransactions(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchTopTransactions = function () {\n  var _ref2 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/top/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchTopTransactions(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var fetchTopTransactionsWithUsers = function () {\n  var _ref3 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/omega_top/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchTopTransactionsWithUsers(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var fetchTopTransactionsWithUsersStatus = function () {\n  var _ref4 = _asyncToGenerator(function* (USER_ID, STATUS) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/omega_top/${STATUS}/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchTopTransactionsWithUsersStatus(_x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var fetchMonthlyTransactions = function () {\n  var _ref5 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/sixmonths/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchMonthlyTransactions(_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var fetchBuyerIdTransactions = function () {\n  var _ref6 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/buyerid/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchBuyerIdTransactions(_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var fetchTransactionCountryCount = function () {\n  var _ref7 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var res = yield fetch(`${BASE_URL}/user/transactions/countrycount/${USER_ID}`);\n      var results = yield res.json();\n      return results;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchTransactionCountryCount(_x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var createTransaction = function () {\n  var _ref8 = _asyncToGenerator(function* (transactionData) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/transactions/createTransaction`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(transactionData)\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        var errorData = yield response.json();\n        return {\n          success: false,\n          message: errorData.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  });\n  return function createTransaction(_x9) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var fetchUserTransactions = function () {\n  var _ref9 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/transactions/byUserId/${USER_ID}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        console.log(\"response: \", response);\n        var data = yield response.json();\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        var errorData = yield response.json();\n        return {\n          success: false,\n          message: errorData.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  });\n  return function fetchUserTransactions(_x10) {\n    return _ref9.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["BASE_URL","fetchAllTransactions","_ref","_asyncToGenerator","USER_ID","res","fetch","results","json","error","console","_x","apply","arguments","fetchTopTransactions","_ref2","_x2","fetchTopTransactionsWithUsers","_ref3","_x3","fetchTopTransactionsWithUsersStatus","_ref4","STATUS","_x4","_x5","fetchMonthlyTransactions","_ref5","_x6","fetchBuyerIdTransactions","_ref6","_x7","fetchTransactionCountryCount","_ref7","_x8","createTransaction","_ref8","transactionData","response","method","headers","body","JSON","stringify","ok","data","success","errorData","message","_x9","fetchUserTransactions","_ref9","log","_x10"],"sources":["/Users/limzhongzhi/WebstormProjects/PropertyGo/frontend/mobile/utils/transactionApi.js"],"sourcesContent":["import {BASE_URL} from \"./documentApi\";\n\nexport const fetchAllTransactions = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\nexport const fetchTopTransactions = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/top/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchTopTransactionsWithUsers = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/omega_top/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchTopTransactionsWithUsersStatus = async(USER_ID, STATUS) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/omega_top/${STATUS}/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\nexport const fetchMonthlyTransactions = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/sixmonths/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchBuyerIdTransactions = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/buyerid/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchTransactionCountryCount = async(USER_ID) => {\n    try {\n        const res = await fetch(`${BASE_URL}/user/transactions/countrycount/${USER_ID}`)\n        const results = await res.json();\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const createTransaction = async (transactionData) => {\n    // console.log(\"transactionData: \", transactionData)\n    try {\n      const response = await fetch(`${BASE_URL}/user/transactions/createTransaction`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(transactionData),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        return { success: true, data };\n      } else {\n        const errorData = await response.json();\n        return { success: false, message: errorData.message };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n\n\n  export const fetchUserTransactions = async (USER_ID) => {\n    try {\n        const response = await fetch(`${BASE_URL}/user/transactions/byUserId/${USER_ID}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n  \n      if (response.ok) {\n        console.log(\"response: \", response)\n        const data = await response.json();\n        return { success: true, data };\n      } else {\n        const errorData = await response.json();\n        return { success: false, message: errorData.message };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}