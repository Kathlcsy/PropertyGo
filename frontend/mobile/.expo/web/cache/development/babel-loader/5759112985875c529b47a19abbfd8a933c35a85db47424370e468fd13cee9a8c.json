{
  "ast": null,
  "code": "import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { signUpUser } from \"../../utils/api\";\nimport { useNavigation } from '@react-navigation/native';\nimport { loginUser } from \"../../utils/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nvar SignUpScreen = function SignUpScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    email = _useState10[0],\n    setEmail = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedCountry = _useState12[0],\n    setSelectedCountry = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    dateOfBirth = _useState14[0],\n    setDateOfBirth = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isDatePickerVisible = _useState16[0],\n    setDatePickerVisibility = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isCountryPickerVisible = _useState18[0],\n    setCountryPickerVisibility = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showPassword = _useState20[0],\n    setShowPassword = _useState20[1];\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var handleSignUp = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!userName || !password || !confirmPassword || !email || !selectedCountry || !dateOfBirth) {\n        Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n        return;\n      }\n      if (!emailPattern.test(email)) {\n        Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Sign Up Failed', 'Passwords do not match');\n        return;\n      }\n      var today = new Date();\n      var dob = new Date(dateOfBirth);\n      var age = today.getFullYear() - dob.getFullYear();\n      if (today.getMonth() < dob.getMonth() || today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate()) {\n        age--;\n      }\n      if (age < 21) {\n        Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n        return;\n      }\n      try {\n        var userData = {\n          userName: userName,\n          password: password,\n          name: name,\n          email: email,\n          countryOfOrigin: selectedCountry.toUpperCase(),\n          dateOfBirth: dateOfBirth.toISOString().split('T')[0],\n          isActive: true,\n          rating: null,\n          experience: null,\n          projectsCompleted: null,\n          companyName: null,\n          startTime: null,\n          endTime: null,\n          contractorSpecialization: null,\n          userType: 'BUYER'\n        };\n        var signUpResult = yield signUpUser(userData);\n        if (signUpResult.success) {\n          handleLogin();\n          Alert.alert('Sign Up Successful', 'Signup successful');\n          navigation.navigate('Side Navigator');\n        } else if (signUpResult.message) {\n          if (signUpResult.message.includes('Username')) {\n            Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n          } else if (signUpResult.message.includes('Email')) {\n            Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n          } else {\n            Alert.alert('Sign Up Failed', signUpResult.message);\n          }\n        } else {\n          if (signUpResult.error.includes('Username')) {\n            Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n          } else if (signUpResult.error.includes('Email')) {\n            Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n          }\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        Alert.alert('Sign Up Failed', 'Signup failed');\n      }\n    });\n    return function handleSignUp() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$loginUser = yield loginUser(userName, password),\n        success = _yield$loginUser.success,\n        data = _yield$loginUser.data,\n        message = _yield$loginUser.message;\n      if (success) {\n        login(data);\n        console.log('Login successful');\n      } else {\n        console.log(message);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(Image, {\n        source: require(\"../../assets/PropertyGo-HighRes-Logo.png\"),\n        style: styles.headerImage\n      }), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Sign Up\"\n      })]\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Full Name:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Full Name\",\n          placeholderTextColor: \"black\",\n          value: name,\n          onChangeText: setName\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"User Name:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"User Name\",\n          placeholderTextColor: \"black\",\n          value: userName,\n          onChangeText: setUserName\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Password:\"\n        }), _jsxs(View, {\n          style: styles.passwordInputContainer,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Password\",\n            placeholderTextColor: \"black\",\n            value: password,\n            onChangeText: setPassword,\n            secureTextEntry: !showPassword\n          }), _jsx(TouchableOpacity, {\n            style: styles.passwordIcon,\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            },\n            children: _jsx(Icon, {\n              name: showPassword ? 'eye' : 'eye-slash',\n              size: 20,\n              color: \"black\"\n            })\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Confirm Password:\"\n        }), _jsx(View, {\n          style: styles.passwordInputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Confirm Password\",\n            placeholderTextColor: \"black\",\n            value: confirmPassword,\n            onChangeText: setConfirmPassword,\n            secureTextEntry: !showPassword\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          placeholderTextColor: \"black\",\n          value: email,\n          onChangeText: setEmail,\n          keyboardType: \"email-address\"\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Date of Birth:\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.datePickerButton,\n          onPress: function onPress() {\n            return setDatePickerVisibility(true);\n          },\n          children: _jsx(Text, {\n            style: styles.pickerText,\n            children: dateOfBirth ? dateOfBirth.toDateString() : 'Date of Birth'\n          })\n        }), _jsx(Modal, {\n          transparent: true,\n          animationType: \"slide\",\n          visible: isDatePickerVisible,\n          onRequestClose: function onRequestClose() {\n            return setDatePickerVisibility(false);\n          },\n          children: _jsx(View, {\n            style: styles.modalView,\n            children: _jsx(DateTimePicker, {\n              isVisible: isDatePickerVisible,\n              mode: \"date\",\n              onConfirm: function onConfirm(date) {\n                setDateOfBirth(date);\n                setDatePickerVisibility(false);\n              },\n              onCancel: function onCancel() {\n                return setDatePickerVisibility(false);\n              }\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Country:\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.countryPickerButton,\n          onPress: function onPress() {\n            return setCountryPickerVisibility(true);\n          },\n          children: _jsx(Text, {\n            style: styles.pickerText,\n            children: selectedCountry || 'Select Country'\n          })\n        }), _jsx(Modal, {\n          transparent: true,\n          animationType: \"slide\",\n          visible: isCountryPickerVisible,\n          onRequestClose: function onRequestClose() {\n            return setCountryPickerVisibility(false);\n          },\n          children: _jsx(View, {\n            style: styles.modalView,\n            children: _jsx(Picker, {\n              selectedValue: selectedCountry,\n              onValueChange: function onValueChange(itemValue) {\n                setSelectedCountry(itemValue);\n                setCountryPickerVisibility(false);\n              },\n              children: countries.map(function (country) {\n                return _jsx(Picker.Item, {\n                  label: country.label,\n                  value: country.value\n                }, country.value);\n              })\n            })\n          })\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.signUpButton,\n      onPress: handleSignUp,\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(Icon, {\n          name: \"user-plus\",\n          size: 24,\n          color: \"white\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.signUpButtonText,\n          children: \"Sign Up\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#FFFFFF'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  headerImage: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  formContainer: {\n    width: '100%'\n  },\n  inputRow: {\n    marginBottom: 10,\n    width: '100%'\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10,\n    fontSize: 14\n  },\n  passwordInputContainer: {\n    position: 'relative'\n  },\n  passwordIcon: {\n    position: 'absolute',\n    right: 10,\n    top: '45%',\n    transform: [{\n      translateY: -12\n    }]\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  countryPickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  pickerText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  signUpButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: '#1E90FF',\n    marginVertical: 10,\n    width: '60%'\n  },\n  signUpButtonText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    marginLeft: 10\n  }\n});\nexport default SignUpScreen;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "useContext",
      "StyleSheet",
      "View",
      "TextInput",
      "Text",
      "TouchableOpacity",
      "Modal",
      "ScrollView",
      "Alert",
      "Image",
      "Picker",
      "DateTimePicker",
      "Icon",
      "AuthContext",
      "signUpUser",
      "useNavigation",
      "loginUser",
      "jsx",
      "_jsx",
      "jsxs",
      "_jsxs",
      "countries",
      "label",
      "value",
      "SignUpScreen",
      "navigation",
      "_useState",
      "_useState2",
      "_slicedToArray",
      "userName",
      "setUserName",
      "_useState3",
      "_useState4",
      "name",
      "setName",
      "_useState5",
      "_useState6",
      "password",
      "setPassword",
      "_useState7",
      "_useState8",
      "confirmPassword",
      "setConfirmPassword",
      "_useState9",
      "_useState10",
      "email",
      "setEmail",
      "_useState11",
      "_useState12",
      "selectedCountry",
      "setSelectedCountry",
      "_useState13",
      "_useState14",
      "dateOfBirth",
      "setDateOfBirth",
      "_useState15",
      "_useState16",
      "isDatePickerVisible",
      "setDatePickerVisibility",
      "_useState17",
      "_useState18",
      "isCountryPickerVisible",
      "setCountryPickerVisibility",
      "_useState19",
      "_useState20",
      "showPassword",
      "setShowPassword",
      "_useContext",
      "login",
      "handleSignUp",
      "_ref",
      "_asyncToGenerator",
      "emailPattern",
      "alert",
      "test",
      "today",
      "Date",
      "dob",
      "age",
      "getFullYear",
      "getMonth",
      "getDate",
      "userData",
      "countryOfOrigin",
      "toUpperCase",
      "toISOString",
      "split",
      "isActive",
      "rating",
      "experience",
      "projectsCompleted",
      "companyName",
      "startTime",
      "endTime",
      "contractorSpecialization",
      "userType",
      "signUpResult",
      "success",
      "handleLogin",
      "navigate",
      "message",
      "includes",
      "error",
      "console",
      "apply",
      "arguments",
      "_ref2",
      "_yield$loginUser",
      "data",
      "log",
      "contentContainerStyle",
      "styles",
      "container",
      "children",
      "style",
      "headerContainer",
      "source",
      "require",
      "headerImage",
      "headerText",
      "formContainer",
      "inputRow",
      "input",
      "placeholder",
      "placeholderTextColor",
      "onChangeText",
      "passwordInputContainer",
      "secureTextEntry",
      "passwordIcon",
      "onPress",
      "size",
      "color",
      "keyboardType",
      "datePickerButton",
      "pickerText",
      "toDateString",
      "transparent",
      "animationType",
      "visible",
      "onRequestClose",
      "modalView",
      "isVisible",
      "mode",
      "onConfirm",
      "date",
      "onCancel",
      "countryPickerButton",
      "selectedValue",
      "onValueChange",
      "itemValue",
      "map",
      "country",
      "Item",
      "signUpButton",
      "buttonContent",
      "icon",
      "signUpButtonText",
      "create",
      "flexGrow",
      "alignItems",
      "padding",
      "backgroundColor",
      "flexDirection",
      "width",
      "height",
      "marginRight",
      "marginTop",
      "marginBottom",
      "fontSize",
      "fontWeight",
      "borderColor",
      "borderWidth",
      "borderRadius",
      "paddingHorizontal",
      "position",
      "right",
      "top",
      "transform",
      "translateY",
      "paddingLeft",
      "justifyContent",
      "flex",
      "marginVertical",
      "marginLeft"
    ],
    "sources": [
      "/workspaces/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"
    ],
    "sourcesContent": [
      "import React, { useState, useContext } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  Modal,\n  ScrollView,\n  Alert,\n  Image,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { AuthContext } from '../../AuthContext';\nimport { signUpUser } from '../../utils/api';\nimport { useNavigation } from '@react-navigation/native';\nimport { loginUser } from '../../utils/api';\n\nconst countries = [\n  { label: 'Select Country', value: '' },\n  { label: 'Singapore', value: 'Singapore' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Malaysia', value: 'Malaysia' },\n];\n\nconst SignUpScreen = () => {\n  const navigation = useNavigation();\n  const [userName, setUserName] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(null);\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [isCountryPickerVisible, setCountryPickerVisibility] = useState(false);\n  const [showPassword, setShowPassword] = useState(false); // Added showPassword state\n  const { login } = useContext(AuthContext);\n\n  const handleSignUp = async () => {\n    // Add email validation\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (\n      !userName ||\n      !password ||\n      !confirmPassword ||\n      !email ||\n      !selectedCountry ||\n      !dateOfBirth\n    ) {\n      Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n      return;\n    }\n\n    if (!emailPattern.test(email)) {\n      Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      Alert.alert('Sign Up Failed', 'Passwords do not match');\n      return;\n    }\n\n    const today = new Date();\n    const dob = new Date(dateOfBirth);\n    let age = today.getFullYear() - dob.getFullYear();\n\n    if (\n      today.getMonth() < dob.getMonth() ||\n      (today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate())\n    ) {\n      age--;\n    }\n\n    if (age < 21) {\n      Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n      return;\n    }\n\n    try {\n      const userData = {\n        userName,\n        password,\n        name,\n        email,\n        countryOfOrigin: selectedCountry.toUpperCase(),\n        dateOfBirth: dateOfBirth.toISOString().split('T')[0],\n        isActive: true,\n        rating: null,\n        experience: null,\n        projectsCompleted: null,\n        companyName: null,\n        startTime: null,\n        endTime: null,\n        contractorSpecialization: null,\n        userType: 'BUYER',\n      };\n\n      const signUpResult = await signUpUser(userData);\n\n      if (signUpResult.success) {\n        handleLogin();\n        Alert.alert('Sign Up Successful', 'Signup successful');\n        navigation.navigate('Side Navigator');\n      } else if (signUpResult.message) {\n        if (signUpResult.message.includes('Username')) {\n          Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n        } else if (signUpResult.message.includes('Email')) {\n          Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n        } else {\n          Alert.alert('Sign Up Failed', signUpResult.message);\n        }\n      } else {\n        if (signUpResult.error.includes('Username')) {\n          Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n        } else if (signUpResult.error.includes('Email')) {\n          Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      Alert.alert('Sign Up Failed', 'Signup failed');\n    }\n  };\n\n  const handleLogin = async () => {\n    const { success, data, message } = await loginUser(userName, password);\n\n    if (success) {\n      login(data); // Use the login function from AuthContext to set the user\n      console.log('Login successful');\n    } else {\n      console.log(message);\n    }\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View style={styles.headerContainer}>\n        <Image\n          source={require('../../assets/PropertyGo-HighRes-Logo.png')}\n          style={styles.headerImage}\n        />\n        <Text style={styles.headerText}>Sign Up</Text>\n      </View>\n      <View style={styles.formContainer}>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Full Name:</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Full Name\"\n            placeholderTextColor=\"black\"\n            value={name}\n            onChangeText={setName}\n          />\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>User Name:</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"User Name\"\n            placeholderTextColor=\"black\"\n            value={userName}\n            onChangeText={setUserName}\n          />\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Password:</Text>\n          <View style={styles.passwordInputContainer}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Password\"\n              placeholderTextColor=\"black\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry={!showPassword} // Toggle secureTextEntry based on showPassword\n            />\n            <TouchableOpacity\n              style={styles.passwordIcon}\n              onPress={() => setShowPassword(!showPassword)} // Toggle showPassword state\n            >\n              <Icon\n                name={showPassword ? 'eye' : 'eye-slash'}\n                size={20}\n                color=\"black\"\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Confirm Password:</Text>\n          <View style={styles.passwordInputContainer}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Confirm Password\"\n              placeholderTextColor=\"black\"\n              value={confirmPassword}\n              onChangeText={setConfirmPassword}\n              secureTextEntry={!showPassword} // Toggle secureTextEntry based on showPassword\n            />\n          </View>\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Email:</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Email\"\n            placeholderTextColor=\"black\"\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n          />\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Date of Birth:</Text>\n          <TouchableOpacity\n            style={styles.datePickerButton}\n            onPress={() => setDatePickerVisibility(true)}\n          >\n            <Text style={styles.pickerText}>\n              {dateOfBirth ? dateOfBirth.toDateString() : 'Date of Birth'}\n            </Text>\n          </TouchableOpacity>\n          <Modal\n            transparent={true}\n            animationType=\"slide\"\n            visible={isDatePickerVisible}\n            onRequestClose={() => setDatePickerVisibility(false)}\n          >\n            <View style={styles.modalView}>\n              <DateTimePicker\n                isVisible={isDatePickerVisible}\n                mode=\"date\"\n                onConfirm={(date) => {\n                  setDateOfBirth(date);\n                  setDatePickerVisibility(false);\n                }}\n                onCancel={() => setDatePickerVisibility(false)}\n              />\n            </View>\n          </Modal>\n        </View>\n        <View style={styles.inputRow}>\n          <Text style={styles.label}>Country:</Text>\n          <TouchableOpacity\n            style={styles.countryPickerButton}\n            onPress={() => setCountryPickerVisibility(true)}\n          >\n            <Text style={styles.pickerText}>\n              {selectedCountry || 'Select Country'}\n            </Text>\n          </TouchableOpacity>\n          <Modal\n            transparent={true}\n            animationType=\"slide\"\n            visible={isCountryPickerVisible}\n            onRequestClose={() => setCountryPickerVisibility(false)}\n          >\n            <View style={styles.modalView}>\n              <Picker\n                selectedValue={selectedCountry}\n                onValueChange={(itemValue) => {\n                  setSelectedCountry(itemValue);\n                  setCountryPickerVisibility(false);\n                }}\n              >\n                {countries.map((country) => (\n                  <Picker.Item\n                    key={country.value}\n                    label={country.label}\n                    value={country.value}\n                  />\n                ))}\n              </Picker>\n            </View>\n          </Modal>\n        </View>\n      </View>\n      <TouchableOpacity style={styles.signUpButton} onPress={handleSignUp}>\n        <View style={styles.buttonContent}>\n          <Icon name=\"user-plus\" size={24} color=\"white\" style={styles.icon} />\n          <Text style={styles.signUpButtonText}>Sign Up</Text>\n        </View>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#FFFFFF',\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerImage: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  formContainer: {\n    width: '100%',\n  },\n  inputRow: {\n    marginBottom: 10,\n    width: '100%',\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10,\n    fontSize: 14, // Match the font size\n  },\n  passwordInputContainer: {\n    position: 'relative',\n  },\n  passwordIcon: {\n    position: 'absolute',\n    right: 10,\n    top: '45%',\n    transform: [{ translateY: -12 }],\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5, // Add border radius\n  },\n  countryPickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5, // Add border radius\n  },\n  pickerText: {\n    fontSize: 14,\n    color: 'black',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white',\n  },\n  signUpButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: '#1E90FF',\n    marginVertical: 10,\n    width: '60%',\n  },\n  signUpButtonText: {\n    fontSize: 18,\n    color: 'white',\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginLeft: 10,\n  },\n});\n\nexport default SignUpScreen;\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}