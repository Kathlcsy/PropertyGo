{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { openBrowserAsync } from \"expo-web-browser\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FileSaver;\nif (__DEV__ && Platform.OS === \"web\") {\n  FileSaver = require(\"file-saver\").default;\n}\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar responsiveWidth = width * 0.8;\nvar BASE_URL = \"http://172.20.10.2:3000\";\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    descriptions = _useState4[0],\n    setDescriptions = _useState4[1];\n  var _useState5 = useState(200),\n    _useState6 = _slicedToArray(_useState5, 2),\n    length = _useState6[0],\n    setLength = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    prevDocuments = _useState8[0],\n    setPrevDocuments = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    searchQuery = _useState10[0],\n    setSearchQuery = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedFolder = _useState12[0],\n    setSelectedFolder = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    folders = _useState14[0],\n    setFolders = _useState14[1];\n  var _useState15 = useState({}),\n    _useState16 = _slicedToArray(_useState15, 2),\n    folderSelection = _useState16[0],\n    setFoldersSelection = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    newFolderModalOpen = _useState18[0],\n    setNewFolderModalOpen = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newFolderName = _useState20[0],\n    setNewFolderName = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    transactions = _useState22[0],\n    setTransactions = _useState22[1];\n  var _useState23 = useState({}),\n    _useState24 = _slicedToArray(_useState23, 2),\n    documentTransactions = _useState24[0],\n    setDocumentTransactions = _useState24[1];\n  var _useState25 = useState(1),\n    _useState26 = _slicedToArray(_useState25, 2),\n    defaultTransactionId = _useState26[0],\n    setDefaultTransactionId = _useState26[1];\n  var _useState27 = useState(1),\n    _useState28 = _slicedToArray(_useState27, 2),\n    defaultFolderId = _useState28[0],\n    setDefaultFolderId = _useState28[1];\n  var _useState29 = useState(prevDocuments),\n    _useState30 = _slicedToArray(_useState29, 2),\n    filteredDocs = _useState30[0],\n    setFilteredDocs = _useState30[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var USER_ID = user.user.userId;\n  var fetchDocuments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${BASE_URL}/user/documents/list/metadata/${USER_ID}}`);\n        var documents = yield response.json();\n        setPrevDocuments(documents);\n        setFilteredDocs(documents);\n        setSelectedFolder(defaultFolderId);\n        console.log(user);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchDocuments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchFolders = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${BASE_URL}/user/folders/${USER_ID}}`);\n        var results = yield response.json();\n        var _folders = results.folders;\n        console.log(_folders);\n        setFolders(_folders);\n        setDefaultFolderId(_folders[0].folderId);\n        setSelectedFolder(_folders[0].folderId);\n        console.log(defaultFolderId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchFolders() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchTransactions = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${BASE_URL}/user/transactions/${USER_ID}`);\n        var results = yield response.json();\n        var _transactions = results.transactions;\n        setTransactions(_transactions);\n        setDefaultTransactionId(_transactions[0].transactionId);\n        console.log(defaultTransactionId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchTransactions() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var downloadPDF = function () {\n    var _ref5 = _asyncToGenerator(function* (document) {\n      if (Platform.OS === \"web\") {\n        var response = yield fetch(`${BASE_URL}/user/documents/${document.documentId}/data`);\n        var result = yield response.json();\n        var doc = result.document;\n        console.log(doc);\n        var byteArray = new Uint8Array(result.document.data);\n        var blob = new Blob([byteArray], {\n          type: \"application/pdf\"\n        });\n        console.log(blob);\n        var url = URL.createObjectURL(blob);\n        openBrowserAsync(url);\n        FileSaver.saveAs(blob, document.name);\n        URL.revokeObjectURL(url);\n      } else {\n        var _yield$FileSystem$wri = yield FileSystem.writeAsStringAsync(FileSystem.documentDirectory + document.name, document.data, {\n            encoding: FileSystem.EncodingType.Base64\n          }),\n          _uri = _yield$FileSystem$wri.uri;\n      }\n      if (uri) {\n        alert(\"Downloaded to \" + uri);\n      } else {\n        alert(\"Failed to download PDF\");\n      }\n    });\n    return function downloadPDF(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDocuments();\n  }, []);\n  useEffect(function () {\n    fetchFolders();\n  }, []);\n  useEffect(function () {\n    fetchTransactions();\n  }, []);\n  useEffect(function () {\n    var docs = prevDocuments.filter(function (doc) {\n      console.log(\"prevDocuments:\", prevDocuments);\n      console.log(\"selectedFolder:\", selectedFolder);\n      console.log(\"searchQuery:\", searchQuery);\n      var matchesFolder = selectedFolder ? doc.folderId.toString() === selectedFolder.toString() : true;\n      var matchesSearch = doc.title.toLowerCase().includes((searchQuery || \"\").toLowerCase());\n      return matchesFolder && matchesSearch;\n    });\n    setFilteredDocs(docs);\n  }, [searchQuery, selectedFolder]);\n  useEffect(function () {\n    console.log(transactions);\n    setTransactions(transactions);\n  }, [transactions]);\n  useEffect(function () {\n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments]);\n  useEffect(function () {\n    console.log(folders);\n    setFolders(folders);\n  }, [folders]);\n  useEffect(function () {\n    console.log(filteredDocs);\n    setFilteredDocs(filteredDocs);\n  }, [filteredDocs]);\n  var createNewFolder = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var title = newFolderName;\n      try {\n        var response = yield fetch(`${BASE_URL}/user/folders/create/${USER_ID}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            folderTitle: title\n          })\n        });\n        if (response.ok) {\n          console.log(\"Folder created successfully\");\n        } else {\n          throw \"Error creating folder\";\n        }\n        setNewFolderModalOpen(false);\n        fetchFolders();\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function createNewFolder() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var selectDocuments = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: \"application/pdf\"\n        });\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets;\n          setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n        }\n      } catch (error) {\n        console.log(\"Error selecting documents:\", error);\n      }\n    });\n    return function selectDocuments() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var removeDocument = function removeDocument(document) {\n    var newSelectedDocuments = selectedDocuments.filter(function (doc) {\n      return doc.name !== document.name;\n    });\n    setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n  };\n  var removeDocumentFromServer = function () {\n    var _ref8 = _asyncToGenerator(function* (document) {\n      try {\n        var url = `${BASE_URL}/user/documents/${document.documentId}`;\n        var response = yield fetch(url, {\n          method: \"DELETE\"\n        });\n        if (response.ok) {\n          console.log(\"Document deleted successfully\");\n          fetchDocuments();\n        } else {\n          throw \"Error deleting document\";\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function removeDocumentFromServer(_x2) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var downloadDocumentFromServer = function downloadDocumentFromServer(document) {\n    downloadPDF(document);\n  };\n  var getFolderTitle = function getFolderTitle(folderId) {\n    var foundFolder = folders.find(function (folder) {\n      return folder.folderId === folderId;\n    });\n    return foundFolder ? foundFolder.title : \"\";\n  };\n  var handleUpload = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var fileuri = document.uri;\n          var filetype = \"application/pdf\";\n          var filename = document.name;\n          var transactionId = documentTransactions[document.name] !== undefined ? documentTransactions[document.name] : defaultTransactionId;\n          var folderId = folderSelection[document.name] !== undefined ? folderSelection[document.name] : defaultFolderId;\n          console.log(documentTransactions);\n          console.log(folderSelection);\n          var file = {\n            uri: fileuri,\n            type: filetype,\n            name: filename\n          };\n          var base64Data = file.uri.split(\",\")[1];\n          var base64String = window.atob(base64Data);\n          var bytes = new Uint8Array(base64String.length);\n          for (var i = 0; i < base64String.length; i++) {\n            bytes[i] = base64String.charCodeAt(i);\n          }\n          var fileBlob = new Blob([bytes], {\n            type: file.type\n          });\n          fileData.append(\"documents\", fileBlob, filename);\n          fileData.append(\"description\", descriptions);\n          fileData.append(\"transactionId\", transactionId);\n          fileData.append(\"folderId\", folderId);\n          fileData.append(\"userId\", USER_ID);\n          var obj = Object.fromEntries(fileData.entries());\n          console.log(obj);\n        });\n        var response = yield fetch(`${BASE_URL}/user/documents/upload`, {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n          fetchDocuments();\n        } else {\n          throw new Error(\"File upload failed\");\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function handleUpload() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var renderDocumentItem = function renderDocumentItem(_ref10) {\n    var item = _ref10.item;\n    return _jsxs(ScrollView, {\n      contentContainerStyle: styles.documentItem,\n      horizontal: true,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Remove\",\n          onPress: function onPress() {\n            return removeDocument(item);\n          }\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Transaction ID: \"\n        }), _jsx(Picker, {\n          selectedValue: documentTransactions[item.name],\n          onValueChange: function onValueChange(transaction) {\n            setDocumentTransactions(_objectSpread(_objectSpread({}, documentTransactions), {}, _defineProperty({}, item.name, transaction)));\n          },\n          children: transactions.map(function (transaction) {\n            return _jsx(Picker.Item, {\n              label: transaction.transactionId,\n              value: transaction.transactionId\n            }, transaction.transactionId);\n          })\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Folder for Document: \"\n        }), _jsx(Picker, {\n          selectedValue: folderSelection[item.name],\n          onValueChange: function onValueChange(folder) {\n            setFoldersSelection(_objectSpread(_objectSpread({}, folderSelection), {}, _defineProperty({}, item.name, folder)));\n          },\n          children: folders.map(function (folder) {\n            return _jsx(Picker.Item, {\n              label: folder.title,\n              value: folder.folderId\n            }, folder.folderId);\n          })\n        })]\n      })]\n    });\n  };\n  var renderDocumentListItem = function renderDocumentListItem(_ref11) {\n    var item = _ref11.item;\n    return _jsxs(ScrollView, {\n      contentContainerStyle: styles.documentItem,\n      horizontal: true,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.title\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Description: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: item.description\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Transaction ID: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: item.transactionId\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Folder: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: getFolderTitle(item.folderId)\n        })]\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Remove\",\n          onPress: function onPress() {\n            return removeDocumentFromServer(item);\n          }\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Download\",\n          onPress: function onPress() {\n            return downloadDocumentFromServer(item);\n          }\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of selected Documents:\"\n      }), _jsx(FlatList, {\n        ListEmptyComponent: function ListEmptyComponent() {\n          return _jsxs(Text, {\n            style: styles.emptyListText,\n            children: [\" \", \"Your selected documents would appear here.\"]\n          });\n        },\n        data: selectedDocuments,\n        keyExtractor: function keyExtractor(item, index) {\n          return item.id ? item.id.toString() : index.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    }), _jsxs(View, {\n      style: styles.descriptionContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"Write your description for the files selected:\"\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Add a description\",\n        value: descriptions,\n        maxLength: 200,\n        onChangeText: function onChangeText(text) {\n          setDescriptions(text);\n          setLength(200 - text.length);\n        }\n      }), _jsxs(Text, {\n        children: [\" Remaining: \", length]\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Select Documents\",\n        onPress: selectDocuments\n      }), _jsx(Text, {\n        children: \" \\xA0\\xA0\\xA0 \"\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Upload Documents\",\n        onPress: handleUpload\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        style: {\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginVertical: 10\n        }\n      }), _jsx(Text, {\n        style: styles.detailText,\n        children: \"Previously Uploaded Documents: \"\n      }), _jsxs(View, {\n        style: styles.documentListContainer,\n        children: [_jsx(TextInput, {\n          style: styles.searchBar,\n          placeholder: \"Search documents...\",\n          value: searchQuery,\n          onChangeText: setSearchQuery\n        }), _jsx(Text, {\n          children: \" Select your Folder Below: \"\n        }), _jsx(Picker, {\n          selectedValue: selectedFolder,\n          onValueChange: setSelectedFolder,\n          children: folders.map(function (folder) {\n            return _jsx(Picker.Item, {\n              label: folder.title,\n              value: folder.folderId\n            }, folder.folderId);\n          })\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Button, {\n          title: \"Create New Folder\",\n          onPress: function onPress() {\n            return setNewFolderModalOpen(true);\n          }\n        }), newFolderModalOpen && _jsx(Modal, {\n          animationType: \"fade\",\n          transparent: true,\n          visible: newFolderModalOpen,\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(TextInput, {\n                placeholder: \"New folder name\",\n                value: newFolderName,\n                onChangeText: setNewFolderName,\n                style: styles.searchBar\n              }), _jsx(Text, {\n                children: \"\\xA0\"\n              }), _jsx(Button, {\n                title: \"Create Folder\",\n                onPress: createNewFolder\n              }), _jsx(Text, {\n                children: \"\\xA0\"\n              }), _jsx(Button, {\n                title: \"Cancel\",\n                onPress: function onPress() {\n                  return setNewFolderModalOpen(false);\n                }\n              })]\n            })\n          })\n        }), _jsx(FlatList, {\n          data: filteredDocs,\n          renderItem: renderDocumentListItem,\n          ListEmptyComponent: function ListEmptyComponent() {\n            return _jsxs(Text, {\n              style: styles.emptyListText,\n              children: [\" \", \"Your previous documents would appear here.\"]\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item.id ? item.id.toString() : index.toString();\n          }\n        })]\n      })]\n    }), _jsxs(Text, {\n      style: styles.graytext,\n      children: [\"Welcome, \", user.user.name, \", you are the #\", USER_ID, \" user!\"]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: responsiveWidth * 0.02,\n    backgroundColor: \"#fff\",\n    overflow: \"scroll\"\n  },\n  headerText: {\n    fontSize: responsiveWidth * 0.06,\n    marginBottom: responsiveWidth * 0.02,\n    textAlign: \"center\"\n  },\n  searchBar: {\n    height: responsiveWidth * 0.1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: responsiveWidth * 0.02,\n    paddingHorizontal: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: responsiveWidth * 0.04\n  },\n  descriptionContainer: {\n    marginVertical: responsiveWidth * 0.04\n  },\n  descriptionInput: {\n    height: responsiveWidth * 0.1,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.02\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: responsiveWidth * 0.04,\n    borderRadius: responsiveWidth * 0.02\n  },\n  detailText: {\n    fontSize: responsiveWidth * 0.04,\n    marginBottom: responsiveWidth * 0.02,\n    fontWeight: \"bold\"\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.03,\n    paddingTop: responsiveWidth * 0.035\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: responsiveWidth * 0.03,\n    marginBottom: responsiveWidth * 0.02,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: responsiveWidth * 0.02,\n    width: \"100%\"\n  },\n  documentText: {\n    fontSize: responsiveWidth * 0.035,\n    color: \"#333\"\n  },\n  descriptionText: {\n    fontSize: responsiveWidth * 0.035,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\"\n  },\n  descriptiontContainer: {\n    alignContent: \"top-left\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: responsiveWidth * 0.025,\n    padding: responsiveWidth * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  picker: {\n    fontSize: responsiveWidth * 0.03,\n    paddingVertical: responsiveWidth * 0.03,\n    paddingHorizontal: responsiveWidth * 0.025,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: responsiveWidth * 0.01,\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  graytext: {\n    fontSize: responsiveWidth * 0.02,\n    color: \"#808080\"\n  }\n});\nexport default UploadScreen;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "useEffect",
      "useContext",
      "StyleSheet",
      "View",
      "Text",
      "Button",
      "FlatList",
      "TextInput",
      "Platform",
      "Modal",
      "ScrollView",
      "Dimensions",
      "Picker",
      "DocumentPicker",
      "FileSystem",
      "openBrowserAsync",
      "AuthContext",
      "jsx",
      "_jsx",
      "jsxs",
      "_jsxs",
      "FileSaver",
      "__DEV__",
      "OS",
      "require",
      "default",
      "_Dimensions$get",
      "get",
      "width",
      "height",
      "responsiveWidth",
      "BASE_URL",
      "UploadScreen",
      "_ref",
      "navigation",
      "_useState",
      "_useState2",
      "_slicedToArray",
      "selectedDocuments",
      "setSelectedDocuments",
      "_useState3",
      "_useState4",
      "descriptions",
      "setDescriptions",
      "_useState5",
      "_useState6",
      "length",
      "setLength",
      "_useState7",
      "_useState8",
      "prevDocuments",
      "setPrevDocuments",
      "_useState9",
      "_useState10",
      "searchQuery",
      "setSearchQuery",
      "_useState11",
      "_useState12",
      "selectedFolder",
      "setSelectedFolder",
      "_useState13",
      "_useState14",
      "folders",
      "setFolders",
      "_useState15",
      "_useState16",
      "folderSelection",
      "setFoldersSelection",
      "_useState17",
      "_useState18",
      "newFolderModalOpen",
      "setNewFolderModalOpen",
      "_useState19",
      "_useState20",
      "newFolderName",
      "setNewFolderName",
      "_useState21",
      "_useState22",
      "transactions",
      "setTransactions",
      "_useState23",
      "_useState24",
      "documentTransactions",
      "setDocumentTransactions",
      "_useState25",
      "_useState26",
      "defaultTransactionId",
      "setDefaultTransactionId",
      "_useState27",
      "_useState28",
      "defaultFolderId",
      "setDefaultFolderId",
      "_useState29",
      "_useState30",
      "filteredDocs",
      "setFilteredDocs",
      "_useContext",
      "user",
      "USER_ID",
      "userId",
      "fetchDocuments",
      "_ref2",
      "_asyncToGenerator",
      "response",
      "fetch",
      "documents",
      "json",
      "console",
      "log",
      "error",
      "apply",
      "arguments",
      "fetchFolders",
      "_ref3",
      "results",
      "folderId",
      "fetchTransactions",
      "_ref4",
      "transactionId",
      "downloadPDF",
      "_ref5",
      "document",
      "documentId",
      "result",
      "doc",
      "byteArray",
      "Uint8Array",
      "data",
      "blob",
      "Blob",
      "type",
      "url",
      "URL",
      "createObjectURL",
      "saveAs",
      "name",
      "revokeObjectURL",
      "_yield$FileSystem$wri",
      "writeAsStringAsync",
      "documentDirectory",
      "encoding",
      "EncodingType",
      "Base64",
      "uri",
      "alert",
      "_x",
      "docs",
      "filter",
      "matchesFolder",
      "toString",
      "matchesSearch",
      "title",
      "toLowerCase",
      "includes",
      "createNewFolder",
      "_ref6",
      "method",
      "headers",
      "body",
      "JSON",
      "stringify",
      "folderTitle",
      "ok",
      "selectDocuments",
      "_ref7",
      "getDocumentAsync",
      "multiple",
      "canceled",
      "newSelectedDocuments",
      "assets",
      "_toConsumableArray",
      "removeDocument",
      "removeDocumentFromServer",
      "_ref8",
      "_x2",
      "downloadDocumentFromServer",
      "getFolderTitle",
      "foundFolder",
      "find",
      "folder",
      "handleUpload",
      "_ref9",
      "fileData",
      "FormData",
      "forEach",
      "fileuri",
      "filetype",
      "filename",
      "undefined",
      "file",
      "base64Data",
      "split",
      "base64String",
      "window",
      "atob",
      "bytes",
      "i",
      "charCodeAt",
      "fileBlob",
      "append",
      "obj",
      "Object",
      "fromEntries",
      "entries",
      "Error",
      "renderDocumentItem",
      "_ref10",
      "item",
      "contentContainerStyle",
      "styles",
      "documentItem",
      "horizontal",
      "children",
      "style",
      "documentText",
      "downloadButton",
      "onPress",
      "descriptionText",
      "selectedValue",
      "onValueChange",
      "transaction",
      "_objectSpread",
      "_defineProperty",
      "map",
      "Item",
      "label",
      "value",
      "renderDocumentListItem",
      "_ref11",
      "description",
      "container",
      "headerText",
      "documentListContainer",
      "detailText",
      "ListEmptyComponent",
      "emptyListText",
      "keyExtractor",
      "index",
      "id",
      "renderItem",
      "descriptionContainer",
      "descriptionInput",
      "placeholder",
      "maxLength",
      "onChangeText",
      "text",
      "buttonContainer",
      "borderBottomColor",
      "borderBottomWidth",
      "marginVertical",
      "searchBar",
      "animationType",
      "transparent",
      "visible",
      "centeredView",
      "modalView",
      "graytext",
      "create",
      "flex",
      "padding",
      "backgroundColor",
      "overflow",
      "fontSize",
      "marginBottom",
      "textAlign",
      "borderWidth",
      "borderColor",
      "borderRadius",
      "paddingHorizontal",
      "flexDirection",
      "alignItems",
      "color",
      "fontWeight",
      "paddingTop",
      "justifyContent",
      "fontStyle",
      "descriptiontContainer",
      "alignContent",
      "shadowColor",
      "shadowOffset",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "picker",
      "paddingVertical"
    ],
    "sources": [
      "/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/sideNavigatorBar/Documents.js"
    ],
    "sourcesContent": [
      "import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  FlatList,\n  TextInput,\n  Platform,\n  Modal,\n  ScrollView,\n  Dimensions,\n} from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { openBrowserAsync } from \"expo-web-browser\";\nimport { AuthContext } from \"../../AuthContext\";\n\n//Conditional FileSaver import.\nlet FileSaver;\nif (__DEV__ && Platform.OS === \"web\") {\n  FileSaver = require(\"file-saver\").default;\n}\n\n// I know my code is fuuuuuuucked up lol, I am going to be splitting them into smaller components soon so each parts has its own component.\n// This is some omega-level one JS file app XDDDDDDD\n\n/* CONSTANTS FOR THE WHOLE PAGE */\n// This may need to be responsive if we want auto-UI scaling per window size, but this only applies to Web.\nconst { width, height } = Dimensions.get(\"window\");\nconst responsiveWidth = width * 0.8;\nconst BASE_URL = \"http://172.20.10.2:3000\";\n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]); // Documents to upload\n  const [descriptions, setDescriptions] = useState(\"\"); // Description text\n  const [length, setLength] = useState(200); // Description text length\n  const [prevDocuments, setPrevDocuments] = useState([]); // This is suppose to be the list of documents that you have uploaded previously.\n  const [searchQuery, setSearchQuery] = useState(\"\"); // This is for the search bar.\n  const [selectedFolder, setSelectedFolder] = useState(); // Add state for selected folder\n  const [folders, setFolders] = useState([]); // Add state for folders list\n  const [folderSelection, setFoldersSelection] = useState({}); // Add state for folder selection -> map document to folder\n  const [newFolderModalOpen, setNewFolderModalOpen] = useState(false); // Modal boolean for folder creation\n  const [newFolderName, setNewFolderName] = useState(\"\"); // New folder name\n  const [transactions, setTransactions] = useState([]); // Add state for transactions list\n  const [documentTransactions, setDocumentTransactions] = useState({}); // Document transactions\n  const [defaultTransactionId, setDefaultTransactionId] = useState(1); // Default transaction id\n  const [defaultFolderId, setDefaultFolderId] = useState(1); // Default folder id\n  const [filteredDocs, setFilteredDocs] = useState(prevDocuments); // Filtered documents\n  const { user } = useContext(AuthContext);\n  const USER_ID = user.user.userId;\n\n  // General issue here seems to be that the Data Array is too big\n  // It is in one omega array? I think we need to split it up into smaller arrays.\n  const fetchDocuments = async () => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/user/documents/list/metadata/${USER_ID}}`\n      );\n      const documents = await response.json();\n      setPrevDocuments(documents);\n      setFilteredDocs(documents);\n      setSelectedFolder(defaultFolderId); //\n      console.log(user);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Fetch list of folders from API\n  const fetchFolders = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/user/folders/${USER_ID}}`);\n      const results = await response.json();\n      const folders = results.folders;\n      console.log(folders);\n      setFolders(folders);\n      setDefaultFolderId(folders[0].folderId);\n      setSelectedFolder(folders[0].folderId);\n      console.log(defaultFolderId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/user/transactions/${USER_ID}`);\n      const results = await response.json();\n      const transactions = results.transactions;\n      setTransactions(transactions);\n      setDefaultTransactionId(transactions[0].transactionId);\n      console.log(defaultTransactionId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const downloadPDF = async (document) => {\n    if (Platform.OS === \"web\") {\n      // Web download logic\n      // Web: convert buffer to blob\n      const response = await fetch(\n        `${BASE_URL}/user/documents/${document.documentId}/data`\n      );\n      const result = await response.json();\n      const doc = result.document;\n      console.log(doc);\n      // Some how the blob is double writing.\n      // Supposing that document.data.data is in base64 format\n      // Assuming document.data takes the form {type: 'Buffer', data: Array}\n      const byteArray = new Uint8Array(result.document.data);\n      // Create a blob from the typed array\n      const blob = new Blob([byteArray], { type: \"application/pdf\" });\n      console.log(blob);\n      const url = URL.createObjectURL(blob);\n      // Use FileSaver to download\n      openBrowserAsync(url);\n      FileSaver.saveAs(blob, document.name);\n      URL.revokeObjectURL(url);\n    } else {\n      // Native FileSystem logic\n      // Need to make sure it works.\n      const { uri } = await FileSystem.writeAsStringAsync(\n        FileSystem.documentDirectory + document.name,\n        document.data,\n        { encoding: FileSystem.EncodingType.Base64 }\n      );\n    }\n    if (uri) {\n      alert(\"Downloaded to \" + uri);\n    } else {\n      alert(\"Failed to download PDF\");\n    }\n  };\n\n  // Fetch the previous documents from the server.\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  // Call fetchFolders on initial mount\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  // Fetch transactions on mount\n  // Currently dummy user set to 1.\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  useEffect(() => {\n    const docs = prevDocuments.filter((doc) => {\n      console.log(\"prevDocuments:\", prevDocuments);\n      console.log(\"selectedFolder:\", selectedFolder);\n      console.log(\"searchQuery:\", searchQuery);\n      const matchesFolder = selectedFolder\n        ? doc.folderId.toString() === selectedFolder.toString()\n        : true;\n      const matchesSearch = doc.title\n        .toLowerCase()\n        .includes((searchQuery || \"\").toLowerCase());\n      return matchesFolder && matchesSearch;\n    });\n    setFilteredDocs(docs);\n  }, [searchQuery, selectedFolder]);\n\n  // Weird hack so that useState works properly.\n  useEffect(() => {\n    console.log(transactions);\n    setTransactions(transactions);\n  }, [transactions]);\n\n  useEffect(() => {\n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments]);\n\n  useEffect(() => {\n    console.log(folders);\n    setFolders(folders);\n  }, [folders]);\n\n  useEffect(() => {\n    console.log(filteredDocs);\n    setFilteredDocs(filteredDocs);\n  }, [filteredDocs]);\n\n  // Function to create new folder\n  const createNewFolder = async () => {\n    // Title of folder\n    const title = newFolderName;\n    // Call API to create folder\n    try {\n      const response = await fetch(\n        `${BASE_URL}/user/folders/create/${USER_ID}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ folderTitle: title }),\n        }\n      );\n      if (response.ok) {\n        console.log(\"Folder created successfully\");\n      } else {\n        throw \"Error creating folder\";\n      }\n      // Close modal\n      setNewFolderModalOpen(false);\n      // Fetch updated folders list\n      fetchFolders();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // This is suppose to show all the documents that you selected.\n  const selectDocuments = async () => {\n    try {\n      const results = await DocumentPicker.getDocumentAsync({\n        multiple: true,\n        type: \"application/pdf\",\n      });\n\n      // If there is a file that is selected.\n      if (results.canceled === false) {\n        const newSelectedDocuments = results.assets;\n        setSelectedDocuments([...newSelectedDocuments]);\n      }\n    } catch (error) {\n      console.log(\"Error selecting documents:\", error);\n    }\n  };\n\n  // This is suppose to remove a documents from the selected documents list.\n  const removeDocument = (document) => {\n    const newSelectedDocuments = selectedDocuments.filter(\n      (doc) => doc.name !== document.name\n    );\n    setSelectedDocuments([...newSelectedDocuments]);\n  };\n\n  const removeDocumentFromServer = async (document) => {\n    try {\n      const url = `${BASE_URL}/user/documents/${document.documentId}`;\n      const response = await fetch(url, {\n        method: \"DELETE\",\n      });\n      if (response.ok) {\n        console.log(\"Document deleted successfully\");\n        // redirect or update state\n        fetchDocuments();\n      } else {\n        throw \"Error deleting document\";\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const downloadDocumentFromServer = (document) => {\n    downloadPDF(document);\n  };\n  const getFolderTitle = (folderId) => {\n    const foundFolder = folders.find((folder) => folder.folderId === folderId);\n    return foundFolder ? foundFolder.title : \"\";\n  };\n\n  // This then uploads the documents you selected.\n  const handleUpload = async () => {\n    try {\n      //Begin logic to send data to API\n      const fileData = new FormData();\n      // Append each selected document to the FormData object\n      selectedDocuments.forEach((document) => {\n        const fileuri = document.uri;\n        const filetype = \"application/pdf\";\n        const filename = document.name;\n        const transactionId =\n          documentTransactions[document.name] !== undefined\n            ? documentTransactions[document.name]\n            : defaultTransactionId;\n        const folderId =\n          folderSelection[document.name] !== undefined\n            ? folderSelection[document.name]\n            : defaultFolderId;\n        console.log(documentTransactions);\n        console.log(folderSelection);\n\n        // Need to add in more details here.\n        // User = 4, Transaction = 1, Folder = Choose.\n        const file = {\n          uri: fileuri,\n          type: filetype,\n          name: filename,\n        };\n\n        // Extract the base64-encoded data from the URI\n        const base64Data = file.uri.split(\",\")[1];\n\n        // Decode the base64 string into a Uint8Array\n        const base64String = window.atob(base64Data);\n        const bytes = new Uint8Array(base64String.length);\n        for (let i = 0; i < base64String.length; i++) {\n          bytes[i] = base64String.charCodeAt(i);\n        }\n\n        // Create a Blob object from the decoded data\n        const fileBlob = new Blob([bytes], { type: file.type });\n        // console.log(fileBlob);\n        // console.log(descriptions);\n        // console.log(fileData.get(\"description\"));\n        // console.log(...selectedDocuments);\n        fileData.append(\"documents\", fileBlob, filename);\n        fileData.append(\"description\", descriptions);\n        fileData.append(\"transactionId\", transactionId);\n        fileData.append(\"folderId\", folderId);\n        fileData.append(\"userId\", USER_ID);\n        // Convert to regular JS object\n        const obj = Object.fromEntries(fileData.entries());\n        // Log object\n        console.log(obj);\n      });\n\n      // Send the data to the API\n      const response = await fetch(`${BASE_URL}/user/documents/upload`, {\n        method: \"post\",\n        body: fileData,\n      });\n\n      // Check the response status and log the result\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Upload response:\", data);\n        fetchDocuments();\n      } else {\n        throw new Error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.log(\"Error upload:\", error);\n    }\n  };\n\n  // This is for the Select Documents\n  // Probably going to add a Partner Application Box as well.\n  const renderDocumentItem = ({ item }) => (\n    <ScrollView contentContainerStyle={styles.documentItem} horizontal={true}>\n      <Text style={styles.documentText}>{item.name}</Text>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Button\n          style={styles.downloadButton}\n          title=\"Remove\"\n          onPress={() => removeDocument(item)}\n        />\n        <Text>&nbsp;</Text>\n        <Text style={styles.descriptionText}>Transaction ID: </Text>\n        <Picker\n          selectedValue={documentTransactions[item.name]}\n          onValueChange={(transaction) => {\n            setDocumentTransactions({\n              ...documentTransactions,\n              [item.name]: transaction,\n            });\n          }}\n        >\n          {transactions.map((transaction) => (\n            <Picker.Item\n              label={transaction.transactionId}\n              value={transaction.transactionId}\n              key={transaction.transactionId}\n            />\n          ))}\n        </Picker>\n        <Text>&nbsp;</Text>\n        <Text style={styles.descriptionText}>Folder for Document: </Text>\n        <Picker\n          selectedValue={folderSelection[item.name]}\n          onValueChange={(folder) => {\n            setFoldersSelection({\n              ...folderSelection,\n              [item.name]: folder,\n            });\n          }}\n        >\n          {folders.map((folder) => (\n            <Picker.Item\n              label={folder.title}\n              value={folder.folderId}\n              key={folder.folderId}\n            />\n          ))}\n        </Picker>\n      </View>\n    </ScrollView>\n  );\n\n  // This is for the Previously Uploaded Documents\n  const renderDocumentListItem = ({ item }) => (\n    <ScrollView contentContainerStyle={styles.documentItem} horizontal={true}>\n      <Text style={styles.documentText}>{item.title}</Text>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Text style={styles.descriptionText}>Description: </Text>\n        <Text style={styles.documentText}>{item.description}</Text>\n      </View>\n      <View>\n        <Text style={styles.descriptionText}>Transaction ID: </Text>\n        <Text style={styles.documentText}>{item.transactionId}</Text>\n        <Text style={styles.descriptionText}>Folder: </Text>\n        <Text style={styles.documentText}>{getFolderTitle(item.folderId)}</Text>\n      </View>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Button\n          style={styles.downloadButton}\n          title=\"Remove\"\n          onPress={() => removeDocumentFromServer(item)}\n        />\n        <Text>&nbsp;</Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Download\"\n          onPress={() => downloadDocumentFromServer(item)}\n        />\n      </View>\n    </ScrollView>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of selected Documents:</Text>\n        <FlatList\n          ListEmptyComponent={() => (\n            <Text style={styles.emptyListText}>\n              {\" \"}\n              Your selected documents would appear here.\n            </Text>\n          )}\n          data={selectedDocuments}\n          keyExtractor={(item, index) =>\n            item.id ? item.id.toString() : index.toString()\n          }\n          renderItem={renderDocumentItem}\n        />\n      </View>\n      <View style={styles.descriptionContainer}>\n        <Text style={styles.detailText}>\n          Write your description for the files selected:\n        </Text>\n        <TextInput\n          style={styles.descriptionInput}\n          placeholder=\"Add a description\"\n          value={descriptions}\n          maxLength={200} // max length of the text\n          onChangeText={(text) => {\n            setDescriptions(text);\n            setLength(200 - text.length);\n          }}\n        />\n        <Text> Remaining: {length}</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.downloadButton}\n          title=\"Select Documents\"\n          onPress={selectDocuments}\n        />\n        <Text> &nbsp;&nbsp;&nbsp; </Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Upload Documents\"\n          onPress={handleUpload}\n        />\n      </View>\n\n      <View>\n        <View\n          style={{\n            borderBottomColor: \"black\",\n            borderBottomWidth: 1,\n            marginVertical: 10,\n          }}\n        />\n\n        <Text style={styles.detailText}>Previously Uploaded Documents: </Text>\n        <View style={styles.documentListContainer}>\n          <TextInput\n            style={styles.searchBar}\n            placeholder=\"Search documents...\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n          <Text> Select your Folder Below: </Text>\n          <Picker\n            selectedValue={selectedFolder}\n            onValueChange={setSelectedFolder}\n          >\n            {folders.map((folder) => (\n              <Picker.Item\n                label={folder.title}\n                value={folder.folderId}\n                key={folder.folderId}\n              />\n            ))}\n          </Picker>\n          <Text>&nbsp;</Text>\n          <Button\n            title=\"Create New Folder\"\n            onPress={() => setNewFolderModalOpen(true)}\n          />\n          {newFolderModalOpen && (\n            <Modal\n              animationType=\"fade\"\n              transparent={true}\n              visible={newFolderModalOpen}\n            >\n              <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                  <TextInput\n                    placeholder=\"New folder name\"\n                    value={newFolderName}\n                    onChangeText={setNewFolderName}\n                    style={styles.searchBar}\n                  />\n                  <Text>&nbsp;</Text>\n                  <Button title=\"Create Folder\" onPress={createNewFolder} />\n                  <Text>&nbsp;</Text>\n                  <Button\n                    title=\"Cancel\"\n                    onPress={() => setNewFolderModalOpen(false)}\n                  />\n                </View>\n              </View>\n            </Modal>\n          )}\n          <FlatList\n            data={filteredDocs}\n            renderItem={renderDocumentListItem}\n            ListEmptyComponent={() => (\n              <Text style={styles.emptyListText}>\n                {\" \"}\n                Your previous documents would appear here.\n              </Text>\n            )}\n            keyExtractor={(item, index) =>\n              item.id ? item.id.toString() : index.toString()\n            }\n          />\n        </View>\n      </View>\n      <Text style={styles.graytext}>\n        Welcome, {user.user.name}, you are the #{USER_ID} user!\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: responsiveWidth * 0.02,\n    backgroundColor: \"#fff\",\n    overflow: \"scroll\",\n  },\n\n  headerText: {\n    fontSize: responsiveWidth * 0.06,\n    marginBottom: responsiveWidth * 0.02,\n    textAlign: \"center\",\n  },\n\n  searchBar: {\n    height: responsiveWidth * 0.1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: responsiveWidth * 0.02,\n    paddingHorizontal: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n  },\n\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: responsiveWidth * 0.04,\n  },\n\n  descriptionContainer: {\n    marginVertical: responsiveWidth * 0.04,\n  },\n\n  descriptionInput: {\n    height: responsiveWidth * 0.1,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.02,\n  },\n\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: responsiveWidth * 0.04,\n    borderRadius: responsiveWidth * 0.02,\n  },\n\n  detailText: {\n    fontSize: responsiveWidth * 0.04,\n    marginBottom: responsiveWidth * 0.02,\n    fontWeight: \"bold\",\n  },\n\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.03,\n    paddingTop: responsiveWidth * 0.035,\n  },\n\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: responsiveWidth * 0.03,\n    marginBottom: responsiveWidth * 0.02,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: responsiveWidth * 0.02,\n    width: \"100%\",\n  },\n\n  documentText: {\n    fontSize: responsiveWidth * 0.035,\n    color: \"#333\",\n  },\n\n  descriptionText: {\n    fontSize: responsiveWidth * 0.035,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n  },\n\n  descriptiontContainer: {\n    alignContent: \"top-left\",\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n  },\n\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: responsiveWidth * 0.025,\n    padding: responsiveWidth * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  picker: {\n    fontSize: responsiveWidth * 0.03,\n    paddingVertical: responsiveWidth * 0.03,\n    paddingHorizontal: responsiveWidth * 0.025,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: responsiveWidth * 0.01,\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n\n  graytext: {\n    fontSize: responsiveWidth * 0.02, // or whatever relative size you want\n    color: \"#808080\",\n  },\n});\n\nexport default UploadScreen;\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}