{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport IntroScreen from \"../../screens/partnerApplication/InfoScreen\";\nimport CompanyInfoScreen from \"../../screens/partnerApplication/CompanyInfo\";\nimport UserRoleScreen from \"../../screens/partnerApplication/UserRole\";\nimport CreditCardInfoScreen from \"../partnerApplication/CreditCardInfoScreen\";\nimport DocumentSubmission from \"../partnerApplication/DocumentSubmission\";\nimport EndingScreen from \"../partnerApplication/EndingScreen\";\nimport { FormDataProvider } from \"../../contexts/PartnerApplicationFormDataContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(FormDataProvider, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Intro\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Intro\",\n        component: IntroScreen,\n        options: {\n          headerLeft: function headerLeft() {\n            return null;\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Company Info\",\n        component: CompanyInfoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"User Role\",\n        component: UserRoleScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Credit Card Info\",\n        component: CreditCardInfoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Document Selection\",\n        component: DocumentSubmission,\n        options: {\n          headerLeft: function headerLeft() {\n            return null;\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Ending\",\n        component: EndingScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","IntroScreen","CompanyInfoScreen","UserRoleScreen","CreditCardInfoScreen","DocumentSubmission","EndingScreen","FormDataProvider","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","initialRouteName","Screen","name","component","options","headerLeft"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/sideNavigatorBar/WorkWithUs.js"],"sourcesContent":["// Navigation screen for Partner Application.\nimport React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport IntroScreen from \"../../screens/partnerApplication/InfoScreen\";\nimport CompanyInfoScreen from '../../screens/partnerApplication/CompanyInfo';\nimport UserRoleScreen from '../../screens/partnerApplication/UserRole';\nimport CreditCardInfoScreen from \"../partnerApplication/CreditCardInfoScreen\";\nimport DocumentSubmission from \"../partnerApplication/DocumentSubmission\";\nimport EndingScreen from \"../partnerApplication/EndingScreen\";\nimport {FormDataProvider} from '../../contexts/PartnerApplicationFormDataContext'\n\nconst Stack = createStackNavigator();\n\n// Nice, actually kinda works.\nexport default function App() {\n    return (\n            <FormDataProvider>\n                <Stack.Navigator initialRouteName=\"Intro\">\n                    <Stack.Screen name=\"Intro\" component={IntroScreen} options={{\n                        headerLeft: () => null,\n                    }}/>\n                    <Stack.Screen name=\"Company Info\" component={CompanyInfoScreen}/>\n                    <Stack.Screen name=\"User Role\" component={UserRoleScreen}/>\n                    <Stack.Screen name=\"Credit Card Info\" component={CreditCardInfoScreen}/>\n                    <Stack.Screen name=\"Document Selection\" component={DocumentSubmission} options={{\n                        headerLeft: () => null,\n                    }}/>\n                    <Stack.Screen name=\"Ending\" component={EndingScreen}/>\n                </Stack.Navigator>\n            </FormDataProvider>\n    );\n}\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,oBAAoB,QAAO,yBAAyB;AAC5D,OAAOC,WAAW;AAClB,OAAOC,iBAAiB;AACxB,OAAOC,cAAc;AACrB,OAAOC,oBAAoB;AAC3B,OAAOC,kBAAkB;AACzB,OAAOC,YAAY;AACnB,SAAQC,gBAAgB;AAAyD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjF,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAGpC,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC1B,OACQJ,IAAA,CAACF,gBAAgB;IAAAO,QAAA,EACbH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAAF,QAAA,GACrCL,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAElB,WAAY;QAACmB,OAAO,EAAE;UACxDC,UAAU,EAAE,SAAAA,WAAA;YAAA,OAAM,IAAI;UAAA;QAC1B;MAAE,CAAC,CAAC,EACJZ,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEjB;MAAkB,CAAC,CAAC,EACjEO,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEhB;MAAe,CAAC,CAAC,EAC3DM,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,kBAAkB;QAACC,SAAS,EAAEf;MAAqB,CAAC,CAAC,EACxEK,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,oBAAoB;QAACC,SAAS,EAAEd,kBAAmB;QAACe,OAAO,EAAE;UAC5EC,UAAU,EAAE,SAAAA,WAAA;YAAA,OAAM,IAAI;UAAA;QAC1B;MAAE,CAAC,CAAC,EACJZ,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEb;MAAa,CAAC,CAAC;IAAA,CACzC;EAAC,CACJ,CAAC;AAE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}