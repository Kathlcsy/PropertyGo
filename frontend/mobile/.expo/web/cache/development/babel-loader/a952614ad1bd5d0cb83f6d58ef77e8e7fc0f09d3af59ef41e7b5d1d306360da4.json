{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\nimport { createDrawerScreen } from \"../components/DrawerScreen\";\nimport ForumStackGroup from \"./ForumStackGroup\";\nimport YourContributionTabNavigator from \"./YourContributionTabNavigator\";\nimport ForumUpvoteTabNavigator from \"./ForumUpvoteTabNavigator\";\nimport ForumDownvoteTabNavigator from \"./ForumDownvoteTabNavigator\";\nimport ForumFlaggedTabNavigator from \"./ForumFlaggedTabNavigator\";\nimport ForumTopNavBar from \"../components/Forum/ForumTopNavBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CustomDrawerContent = function CustomDrawerContent(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsx(DrawerItemList, _objectSpread({}, props))\n  }));\n};\nvar drawerScreens = [createDrawerScreen('Forum Stack Group', ForumStackGroup, \"forum\", \"Forum\"), createDrawerScreen('Your Contribution Tab Navigator', YourContributionTabNavigator, \"file-tray-stacked\", \"Your Contributions\"), createDrawerScreen('Forum Upvote Tab Navigator', ForumUpvoteTabNavigator, \"ios-thumbs-up\", \"Upvoted\"), createDrawerScreen('Forum Downvote Tab Navigator', ForumDownvoteTabNavigator, \"ios-thumbs-down\", \"Downvoted\"), createDrawerScreen('Forum Flagged Tab Navigator', ForumFlaggedTabNavigator, \"ios-flag\", \"Flagged\")];\nvar Drawer = createDrawerNavigator();\nvar ForumSideNavigator = function ForumSideNavigator() {\n  return _jsx(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    screenOptions: function screenOptions() {\n      return {\n        drawerPosition: 'right',\n        drawerActiveTintColor: \"#FFD700\"\n      };\n    },\n    children: drawerScreens.map(function (screen) {\n      return _jsx(Drawer.Screen, {\n        name: screen.name,\n        component: screen.component,\n        options: screen.name === 'Forum Stack Group' ? _objectSpread(_objectSpread({}, screen.options), {}, {\n          headerShown: false\n        }) : _objectSpread(_objectSpread({}, screen.options), {}, {\n          header: function header() {\n            return _jsx(ForumTopNavBar, {});\n          }\n        })\n      }, screen.name);\n    })\n  });\n};\nexport default ForumSideNavigator;","map":{"version":3,"names":["React","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","createDrawerScreen","ForumStackGroup","YourContributionTabNavigator","ForumUpvoteTabNavigator","ForumDownvoteTabNavigator","ForumFlaggedTabNavigator","ForumTopNavBar","jsx","_jsx","CustomDrawerContent","props","_objectSpread","children","drawerScreens","Drawer","ForumSideNavigator","Navigator","drawerContent","screenOptions","drawerPosition","drawerActiveTintColor","map","screen","Screen","name","component","options","headerShown","header"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/navigations/ForumSideNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\nimport { createDrawerScreen } from '../components/DrawerScreen';\nimport ForumStackGroup from './ForumStackGroup';\nimport YourContributionTabNavigator from './YourContributionTabNavigator';\nimport ForumUpvoteTabNavigator from './ForumUpvoteTabNavigator';\nimport ForumDownvoteTabNavigator from './ForumDownvoteTabNavigator';\nimport ForumFlaggedTabNavigator from './ForumFlaggedTabNavigator';\nimport ForumTopNavBar from '../components/Forum/ForumTopNavBar';\n\nconst CustomDrawerContent = (props) => {\n    // const { navigation, user, updateUserProfilePicture } = props;\n    // const { logout } = useContext(AuthContext);\n\n    // let profileImageBase64;\n    // if (user && user.user.profileImage && user.user.profileImage.data) {\n    //     profileImageBase64 = base64.encodeFromByteArray(user.user.profileImage.data);\n    // }\n\n    // const handleLogout = () => {\n    //     logout();\n    //     navigation.navigate(\"Login Portal\");\n    // };\n\n    // const [profileImage, setProfileImage] = useState(null);\n\n\n    // useEffect(() => {\n    //     if (profileImageBase64) {\n    //         setProfileImage(`data:image/jpeg;base64,${profileImageBase64}`);\n    //     } else {\n    //         setProfileImage(require('../assets/Default-Profile-Picture-Icon.png'));\n    //     }\n\n    //     setName(user && user.user.name ? user.user.name : '');\n    // }, [user]);\n\n    // const [name, setName] = useState(user && user.user.name ? user.user.name : '');\n\n    return (\n        <DrawerContentScrollView {...props}>\n            {/* <View style={{ alignItems: 'center', padding: 16 }}>\n                {user && user.user.profileImage ? (\n                    <Image\n                        source={{ uri: `data:image/jpeg;base64,${profileImageBase64}` }}\n                        style={{ width: 100, height: 100, borderRadius: 50 }}\n                    />\n                ) : (\n                    <Image\n                        source={require('../assets/Default-Profile-Picture-Icon.png')}\n                        style={{ width: 100, height: 100, borderRadius: 50 }}\n                    />\n                )}\n                <Text style={{ marginTop: 15, fontSize: 16, fontWeight: 'bold', color: 'black' }}>\n                    PropertyGo\n                </Text>\n                {user && user.user.name && (\n                    <Text style={{ marginTop: 5, fontSize: 16 }}>\n                        Welcome, {name}\n                    </Text>\n                )}\n            </View> */}\n\n            <DrawerItemList {...props} />\n\n            {/* <LogoutButton onPress={handleLogout} /> */}\n        </DrawerContentScrollView>\n    );\n};\n\nconst drawerScreens = [\n    createDrawerScreen('Forum Stack Group', ForumStackGroup, \"forum\", \"Forum\"),\n    createDrawerScreen('Your Contribution Tab Navigator', YourContributionTabNavigator, \"file-tray-stacked\", \"Your Contributions\"),\n    createDrawerScreen('Forum Upvote Tab Navigator', ForumUpvoteTabNavigator, \"ios-thumbs-up\", \"Upvoted\"),\n    createDrawerScreen('Forum Downvote Tab Navigator', ForumDownvoteTabNavigator, \"ios-thumbs-down\", \"Downvoted\"),\n    createDrawerScreen('Forum Flagged Tab Navigator', ForumFlaggedTabNavigator, \"ios-flag\", \"Flagged\"),\n\n];\n\nconst Drawer = createDrawerNavigator();\n\nconst ForumSideNavigator = () => {\n    // const { user } = useContext(AuthContext);\n\n    return (\n        <Drawer.Navigator\n            drawerContent={(props) => <CustomDrawerContent {...props} />}\n            screenOptions={() => ({\n                drawerPosition: 'right',\n                drawerActiveTintColor: \"#FFD700\",\n                // header: () => <ForumTopNavBar/>,\n                // headerShown: false,\n            })}\n        >\n            {drawerScreens.map((screen) => (\n                <Drawer.Screen\n                    key={screen.name}\n                    name={screen.name}\n                    component={screen.component}\n                    options={\n                        screen.name === 'Forum Stack Group'\n                            ? {...screen.options, headerShown: false }\n                            : { ...screen.options, header: () => <ForumTopNavBar /> }\n                    }\n                />\n\n            ))}\n        </Drawer.Navigator>\n    );\n};\n\nexport default ForumSideNavigator;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,EAAEC,uBAAuB,EAAEC,cAAc,QAAQ,0BAA0B;AACzG,SAASC,kBAAkB;AAC3B,OAAOC,eAAe;AACtB,OAAOC,4BAA4B;AACnC,OAAOC,uBAAuB;AAC9B,OAAOC,yBAAyB;AAChC,OAAOC,wBAAwB;AAC/B,OAAOC,cAAc;AAA2C,SAAAC,GAAA,IAAAC,IAAA;AAEhE,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;EA6BnC,OACIF,IAAA,CAACV,uBAAuB,EAAAa,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAAE,QAAA,EAuB9BJ,IAAA,CAACT,cAAc,EAAAY,aAAA,KAAKD,KAAK,CAAG;EAAC,EAGR,CAAC;AAElC,CAAC;AAED,IAAMG,aAAa,GAAG,CAClBb,kBAAkB,CAAC,mBAAmB,EAAEC,eAAe,EAAE,OAAO,EAAE,OAAO,CAAC,EAC1ED,kBAAkB,CAAC,iCAAiC,EAAEE,4BAA4B,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,EAC9HF,kBAAkB,CAAC,4BAA4B,EAAEG,uBAAuB,EAAE,eAAe,EAAE,SAAS,CAAC,EACrGH,kBAAkB,CAAC,8BAA8B,EAAEI,yBAAyB,EAAE,iBAAiB,EAAE,WAAW,CAAC,EAC7GJ,kBAAkB,CAAC,6BAA6B,EAAEK,wBAAwB,EAAE,UAAU,EAAE,SAAS,CAAC,CAErG;AAED,IAAMS,MAAM,GAAGjB,qBAAqB,CAAC,CAAC;AAEtC,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAG7B,OACIP,IAAA,CAACM,MAAM,CAACE,SAAS;IACbC,aAAa,EAAE,SAAAA,cAACP,KAAK;MAAA,OAAKF,IAAA,CAACC,mBAAmB,EAAAE,aAAA,KAAKD,KAAK,CAAG,CAAC;IAAA,CAAC;IAC7DQ,aAAa,EAAE,SAAAA,cAAA;MAAA,OAAO;QAClBC,cAAc,EAAE,OAAO;QACvBC,qBAAqB,EAAE;MAG3B,CAAC;IAAA,CAAE;IAAAR,QAAA,EAEFC,aAAa,CAACQ,GAAG,CAAC,UAACC,MAAM;MAAA,OACtBd,IAAA,CAACM,MAAM,CAACS,MAAM;QAEVC,IAAI,EAAEF,MAAM,CAACE,IAAK;QAClBC,SAAS,EAAEH,MAAM,CAACG,SAAU;QAC5BC,OAAO,EACHJ,MAAM,CAACE,IAAI,KAAK,mBAAmB,GAAAb,aAAA,CAAAA,aAAA,KACzBW,MAAM,CAACI,OAAO;UAAEC,WAAW,EAAE;QAAK,KAAAhB,aAAA,CAAAA,aAAA,KACjCW,MAAM,CAACI,OAAO;UAAEE,MAAM,EAAE,SAAAA,OAAA;YAAA,OAAMpB,IAAA,CAACF,cAAc,IAAE,CAAC;UAAA;QAAA;MAC9D,GAPIgB,MAAM,CAACE,IAQf,CAAC;IAAA,CAEL;EAAC,CACY,CAAC;AAE3B,CAAC;AAED,eAAeT,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}