{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useEffect, useMemo, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport configData from \"./config.json\";\nimport io from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BASE_URL = configData.BASE_URL;\nvar socket = io(BASE_URL);\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    loadUserSessionFromStorage();\n  }, []);\n  var loadUserSessionFromStorage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var userJson = yield AsyncStorage.getItem('userSession');\n        if (userJson) {\n          var userData = JSON.parse(userJson);\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error loading user session:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadUserSessionFromStorage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateUserProfilePicture = function () {\n    var _ref3 = _asyncToGenerator(function* (newProfileImageBase64) {\n      try {\n        setUser(function (prevUser) {\n          return _objectSpread(_objectSpread({}, prevUser), {}, {\n            user: _objectSpread(_objectSpread({}, prevUser.user), {}, {\n              profileImage: {\n                data: newProfileImageBase64\n              }\n            })\n          });\n        });\n        var userJson = yield AsyncStorage.getItem('userSession');\n        if (userJson) {\n          var userData = JSON.parse(userJson);\n          userData.user.profileImage = {\n            data: newProfileImageBase64\n          };\n          yield AsyncStorage.setItem('userSession', JSON.stringify(userData));\n        }\n        loadUserSessionFromStorage();\n      } catch (error) {\n        console.error('Error updating profile picture:', error);\n      }\n    });\n    return function updateUserProfilePicture(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref4 = _asyncToGenerator(function* (userData) {\n      try {\n        yield AsyncStorage.setItem('userSession', JSON.stringify(userData));\n        setUser(userData);\n        socket.emit('login', userData.user.userId);\n        console.log('User session saved');\n      } catch (error) {\n        console.error('Error saving user session:', error);\n      }\n    });\n    return function login(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem('userSession');\n        socket.emit('logout', user.user.userId);\n        setUser(null);\n        console.log('User session removed');\n      } catch (error) {\n        console.error('Error removing user session:', error);\n      }\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var contextValue = useMemo(function () {\n    return {\n      user: user,\n      loading: loading,\n      login: login,\n      logout: logout,\n      updateUserProfilePicture: updateUserProfilePicture\n    };\n  }, [user, loading]);\n  return _jsx(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useEffect","useMemo","useState","AsyncStorage","configData","io","jsx","_jsx","BASE_URL","socket","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loading","setLoading","loadUserSessionFromStorage","_ref2","_asyncToGenerator","userJson","getItem","userData","JSON","parse","error","console","apply","arguments","updateUserProfilePicture","_ref3","newProfileImageBase64","prevUser","_objectSpread","profileImage","data","setItem","stringify","_x","login","_ref4","emit","userId","log","_x2","logout","_ref5","removeItem","contextValue","Provider","value"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/AuthContext.js"],"sourcesContent":["import React, {createContext, useEffect, useMemo, useState} from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport configData from \"./config.json\"\nimport io from 'socket.io-client';\n\nconst BASE_URL = configData.BASE_URL;\nconst socket = io(BASE_URL);\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Load user session from AsyncStorage on app startup\n        loadUserSessionFromStorage();\n    }, []);\n\n    const loadUserSessionFromStorage = async () => {\n        try {\n            const userJson = await AsyncStorage.getItem('userSession');\n            if (userJson) {\n                const userData = JSON.parse(userJson);\n                setUser(userData);\n            }\n        } catch (error) {\n            console.error('Error loading user session:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const updateUserProfilePicture = async (newProfileImageBase64) => {\n        try {\n            // Update the user state with the new profile image\n            setUser((prevUser) => ({\n                ...prevUser,\n                user: {\n                    ...prevUser.user,\n                    profileImage: {\n                        data: newProfileImageBase64,\n                    },\n                },\n            }));\n\n            // Also update the user session stored in AsyncStorage\n            const userJson = await AsyncStorage.getItem('userSession');\n            if (userJson) {\n                const userData = JSON.parse(userJson);\n                userData.user.profileImage = {data: newProfileImageBase64};\n                await AsyncStorage.setItem('userSession', JSON.stringify(userData));\n            }\n\n            // Reload the updated user data from AsyncStorage\n            loadUserSessionFromStorage();\n\n        } catch (error) {\n            console.error('Error updating profile picture:', error);\n        }\n    };\n\n    // Define your login and logout functions as before\n\n    const login = async (userData) => {\n        try {\n            // Save the user session to AsyncStorage\n            await AsyncStorage.setItem('userSession', JSON.stringify(userData));\n            setUser(userData);\n            socket.emit('login', userData.user.userId);\n            console.log('User session saved');\n            // console.log(\"userId:\" , userData.user.userId);\n        } catch (error) {\n            console.error('Error saving user session:', error);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            // Remove the user session from AsyncStorage\n            await AsyncStorage.removeItem('userSession');\n            socket.emit('logout', user.user.userId);\n            setUser(null);\n            console.log('User session removed');\n        } catch (error) {\n            console.error('Error removing user session:', error);\n        }\n    };\n\n    // Pass the user and loading state in the context value\n    const contextValue = useMemo(() => {\n        return {user, loading, login, logout, updateUserProfilePicture};\n    }, [user, loading]);\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}