{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { createProperty } from \"../../utils/api\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { AuthContext } from \"../../AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nimport PropertyListingScreen from \"../propertyListings/PropertyListing\";\nimport { getAreaAndRegion } from \"../../services/GetAreaAndRegion\";\nimport { DocumentSelector } from \"../../components/PropertyDocumentSelector\";\nimport * as DocumentPicker from 'expo-document-picker';\nimport { BASE_URL, fetchFolders, createFolder, fetchTransactions } from \"../../utils/documentApi\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as FileSystem from 'expo-file-system';\nimport * as Permissions from 'expo-permissions';\nimport * as IntentLauncher from 'expo-intent-launcher';\nimport * as Sharing from 'expo-sharing';\nimport FullScreenImage from \"../propertyListings/FullScreenImage\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar propertyTypes = [{\n  label: 'Select Property Type',\n  value: ''\n}, {\n  label: 'Resale',\n  value: 'Resale'\n}, {\n  label: 'New Launch',\n  value: 'New Launch'\n}];\nexport default function PropertyListing() {\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var navigation = useNavigation();\n  var updateAreaAndRegion = function () {\n    var _ref = _asyncToGenerator(function* (postalCode) {\n      var _yield$getAreaAndRegi = yield getAreaAndRegion(postalCode),\n        area = _yield$getAreaAndRegi.area,\n        region = _yield$getAreaAndRegi.region;\n      setProperty(_objectSpread(_objectSpread({}, property), {}, {\n        area: area,\n        region: region\n      }));\n    });\n    return function updateAreaAndRegion(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    documents = _useState2[0],\n    setDocuments = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fullScreenImage = _useState4[0],\n    setFullScreenImage = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    images = _useState6[0],\n    setImages = _useState6[1];\n  var userId = user.user.userId;\n  var emptyProperty = {\n    title: '',\n    description: '',\n    price: '',\n    bed: '',\n    bathroom: '',\n    tenure: '',\n    size: '',\n    propertyType: '',\n    propertyStatus: 'ACTIVE',\n    userId: user.user.userId,\n    postalCode: '',\n    address: '',\n    unitNumber: '',\n    area: '',\n    region: '',\n    longitude: '',\n    latitude: ''\n  };\n  var _useState7 = useState({\n      title: 'Sample Title',\n      description: 'Sample Description (You can add a longer description here.)',\n      price: '100000',\n      offeredPrice: '90000',\n      bed: '2',\n      bathroom: '2',\n      size: '1200',\n      tenure: '99',\n      propertyType: 'Resale',\n      propertyStatus: 'ACTIVE',\n      userId: user.user.userId,\n      sellerId: user.user.userId,\n      postalCode: '822126',\n      address: 'Home',\n      unitNumber: '17-360',\n      area: '',\n      region: '',\n      longitude: '',\n      latitude: ''\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    property = _useState8[0],\n    setProperty = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    propertyTypeVisible = _useState10[0],\n    setPropertyTypeVisible = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    formattedPrice = _useState12[0],\n    setFormattedPrice = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    formattedOptionPrice = _useState14[0],\n    setFormattedOptionPrice = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    formattedOptionExercisePrice = _useState16[0],\n    setFormattedOptionExercisePrice = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    rawPrice = _useState18[0],\n    setRawPrice = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    rawOptionPrice = _useState20[0],\n    setOptionRawPrice = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    rawOptionExercisePrice = _useState22[0],\n    setOptionExerciseRawPrice = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    prevDocuments = _useState24[0],\n    setPrevDocuments = _useState24[1];\n  var _useState25 = useState(prevDocuments),\n    _useState26 = _slicedToArray(_useState25, 2),\n    filteredDocs = _useState26[0],\n    setFilteredDocs = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    folders = _useState28[0],\n    setFolders = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    propertyFolderId = _useState30[0],\n    setFolderId = _useState30[1];\n  var _useState31 = useState(\"\"),\n    _useState32 = _slicedToArray(_useState31, 2),\n    selectedFolder = _useState32[0],\n    setSelectedFolder = _useState32[1];\n  var _useState33 = useState(null),\n    _useState34 = _slicedToArray(_useState33, 2),\n    selectedDocument = _useState34[0],\n    setSelectedDocument = _useState34[1];\n  var _useState35 = useState([]),\n    _useState36 = _slicedToArray(_useState35, 2),\n    selectedDocuments = _useState36[0],\n    setSelectedDocuments = _useState36[1];\n  var _useState37 = useState(false),\n    _useState38 = _slicedToArray(_useState37, 2),\n    isDocumentUploaded = _useState38[0],\n    setIsDocumentUploaded = _useState38[1];\n  var formatPrice = function formatPrice(price) {\n    return `$${price.replace(/\\D/g, '').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n  };\n  var handlePriceChange = function handlePriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setFormattedPrice(formatPrice(raw));\n    setRawPrice(raw);\n  };\n  var handleOptionPriceChange = function handleOptionPriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionPrice(formatPrice(raw));\n    setOptionRawPrice(raw);\n  };\n  var handleOptionExercisePriceChange = function handleOptionExercisePriceChange(text) {\n    var raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionExercisePrice(formatPrice(raw));\n    setOptionExerciseRawPrice(raw);\n  };\n  var fetchFolderData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$createFolder = yield createFolder(userId, {\n            folderTitle: 'Property'\n          }),\n          success = _yield$createFolder.success,\n          data = _yield$createFolder.data,\n          message = _yield$createFolder.message;\n        if (success) {\n          setFolderId(data.folderId);\n        } else {\n          setFolderId(data.folderId);\n        }\n      } catch (error) {\n        console.error('Error fetching Folder data:', error);\n      }\n    });\n    return function fetchFolderData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleChoosePhoto = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        console.warn('Permission to access photos was denied');\n        return;\n      }\n      if (images.length >= 10) {\n        Alert.alert('Limit Exceeded', 'You can only select up to 10 photos.');\n        return;\n      }\n      var options = {\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 1\n      };\n      var response = yield ImagePicker.launchImageLibraryAsync(options);\n      if (!response.cancelled) {\n        setImages([].concat(_toConsumableArray(images), [response]));\n      }\n    });\n    return function handleChoosePhoto() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleImagePress = function handleImagePress(index) {\n    Alert.alert('Choose an action', 'Do you want to replace or remove this image?', [{\n      text: 'View Image',\n      onPress: function onPress() {\n        return viewImage(index);\n      }\n    }, {\n      text: 'Replace',\n      onPress: function onPress() {\n        return replaceImage(index);\n      }\n    }, {\n      text: 'Remove',\n      onPress: function onPress() {\n        return removeImage(index);\n      },\n      style: 'destructive'\n    }, {\n      text: 'Cancel',\n      style: 'cancel'\n    }]);\n  };\n  var handleSelectDocument = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var _yield$Permissions$as = yield Permissions.askAsync(Permissions.MEDIA_LIBRARY),\n          status = _yield$Permissions$as.status;\n        console.log('Media library permission status:', status);\n        if (status === 'granted') {\n          var results = yield DocumentPicker.getDocumentAsync({\n            multiple: true,\n            type: 'application/pdf'\n          });\n          console.log('Result from DocumentPicker:', results);\n          if (!results.cancelled) {\n            var newSelectedDocuments = results.assets;\n            setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n            console.log('Selected document:', results.assets[0].uri);\n            var fileInfo = yield FileSystem.getInfoAsync(results.assets[0].uri);\n            if (fileInfo.exists) {\n              setIsDocumentUploaded(false);\n            } else {\n              console.warn('Selected document file does not exist.');\n            }\n          } else {\n            console.log('Document selection canceled or failed.');\n          }\n        } else {\n          console.warn('Media library permission denied.');\n        }\n      } catch (error) {\n        console.error('Error selecting document:', error);\n      }\n    });\n    return function handleSelectDocument() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var replaceImage = function () {\n    var _ref5 = _asyncToGenerator(function* (index) {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        console.warn('Permission to access photos was denied');\n        return;\n      }\n      var options = {\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 1\n      };\n      var response = yield ImagePicker.launchImageLibraryAsync(options);\n      if (!response.cancelled) {\n        var updatedImages = _toConsumableArray(images);\n        updatedImages[index] = response;\n        setImages(updatedImages);\n      }\n    });\n    return function replaceImage(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var viewImage = function viewImage(index) {\n    console.log(\"View Image: \", images[index].uri);\n    setFullScreenImage(images[index].uri);\n  };\n  var removeImage = function removeImage(index) {\n    var updatedImages = _toConsumableArray(images);\n    updatedImages.splice(index, 1);\n    setImages(updatedImages);\n  };\n  var fetchAddressByPostalCode = function () {\n    var _ref6 = _asyncToGenerator(function* (postalCode) {\n      if (postalCode.length === 6) {\n        try {\n          var response = yield fetch(`https://developers.onemap.sg/commonapi/search?searchVal=${postalCode}&returnGeom=Y&getAddrDetails=Y`);\n          if (response.ok) {\n            var data = yield response.json();\n            if (data.found === 1) {\n              var address = data.results[0].ADDRESS;\n              var latitude = parseFloat(data.results[0].LATITUDE);\n              var longitude = parseFloat(data.results[0].LONGITUDE);\n              var _yield$getAreaAndRegi2 = yield getAreaAndRegion(postalCode),\n                area = _yield$getAreaAndRegi2.area,\n                region = _yield$getAreaAndRegi2.region;\n              setProperty(_objectSpread(_objectSpread({}, property), {}, {\n                address: address,\n                postalCode: postalCode,\n                area: area,\n                region: region,\n                latitude: latitude,\n                longitude: longitude\n              }));\n            } else {\n              Alert.alert('Invalid Postal Code', 'No address found for the postal code.');\n              setProperty(_objectSpread(_objectSpread({}, property), {}, {\n                address: '',\n                postalCode: postalCode\n              }));\n            }\n          } else {\n            console.error('API request failed.');\n          }\n        } catch (error) {\n          console.error('Error fetching address:', error);\n        }\n      }\n    });\n    return function fetchAddressByPostalCode(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handlePostalCodeChange = function handlePostalCodeChange(text) {\n    if (/^\\d{0,6}$/.test(text)) {\n      setProperty(_objectSpread(_objectSpread({}, property), {}, {\n        postalCode: text\n      }));\n      if (text.length === 6) {\n        fetchAddressByPostalCode(text);\n        postalCode = text;\n      }\n    }\n  };\n  var handleSubmit = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      if (images.length === 0) {\n        Alert.alert('No images selected', 'Please select at least one image.');\n        return;\n      }\n      var price = rawPrice ? parseInt(rawPrice, 10) : 0;\n      var optionPrice = rawOptionPrice ? parseInt(rawOptionPrice, 10) : 0;\n      var optionExercisePrice = rawOptionExercisePrice ? parseInt(rawOptionExercisePrice, 10) : 0;\n      if (!price || price <= 0) {\n        Alert.alert('Invalid Price', 'Price must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(property.size)) {\n        Alert.alert('Invalid Size', 'Size must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(property.bed)) {\n        Alert.alert('Invalid Bed', 'Bed must be a numeric value.');\n        return;\n      }\n      if (!/^\\d+$/.test(property.bathroom)) {\n        Alert.alert('Invalid Bathroom', 'Bathroom must be a numeric value.');\n        return;\n      }\n      if (property.propertyType === '') {\n        Alert.alert('Property Type Not Selected', 'Please select a property type.');\n        return;\n      }\n      if (property.title.trim() === '' || property.description.trim() === '' || property.unitNumber.trim() === '' || property.postalCode.trim() === '' || property.address.trim() === '') {\n        Alert.alert('Missing Information', 'Please fill in all fields.');\n        return;\n      }\n      var propertyTypeUpperCase = property.propertyType.toUpperCase();\n      if (propertyTypeUpperCase === 'NEW LAUNCH') {\n        propertyTypeUpperCase = 'NEW_LAUNCH';\n      }\n      try {\n        var _yield$createProperty = yield createProperty(_objectSpread(_objectSpread({}, property), {}, {\n            price: price,\n            optionFee: optionPrice,\n            optionExerciseFee: optionExercisePrice,\n            propertyType: propertyTypeUpperCase\n          }), images),\n          success = _yield$createProperty.success,\n          data = _yield$createProperty.data,\n          message = _yield$createProperty.message;\n        if (success) {\n          var propertyListingId = data.propertyListingId;\n          console.log('Property created successfully:', propertyListingId);\n          Alert.alert('Property Created', 'The property listing has been created successfully.');\n          fetchFolderData();\n          createDocument(propertyListingId);\n          navigation.navigate('Property Listing', {\n            propertyListingId: propertyListingId\n          });\n        } else {\n          Alert.alert('Error', `Failed to create property: ${message}`);\n        }\n      } catch (error) {\n        console.log('Error uploading property:', error);\n        Alert.alert('Error', 'An error occurred while creating the property listing.');\n      }\n    });\n    return function handleSubmit() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var createDocument = function () {\n    var _ref8 = _asyncToGenerator(function* (propertyListingId) {\n      console.log(\"createDocument\", selectedDocuments);\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var fileUri = document.uri;\n          var fileType = document.mimeType;\n          var fileName = document.name;\n          var folderId = propertyFolderId;\n          fileData.append(\"documents\", {\n            uri: fileUri,\n            name: fileName,\n            type: fileType\n          });\n          console.log(\"File URI: \", fileUri);\n          fileData.append(\"propertyId\", propertyListingId);\n          fileData.append(\"description\", \"OTP\");\n          fileData.append(\"folderId\", folderId);\n          fileData.append(\"userId\", user.user.userId);\n        });\n        var response = yield fetch(`${BASE_URL}/user/documents/upload`, {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n        } else {\n          console.log(\"File upload failed \", response);\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function createDocument(_x4) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var openPdf = function () {\n    var _ref9 = _asyncToGenerator(function* (filePath) {\n      try {\n        var fileName = filePath.split('/').pop();\n        var targetUri = `${FileSystem.documentDirectory}${fileName}`;\n        yield FileSystem.copyAsync({\n          from: filePath,\n          to: targetUri\n        });\n        if (!(yield Sharing.isAvailableAsync())) {\n          alert(\"Uh oh, sharing isn't available on your platform\");\n          return;\n        }\n        yield Sharing.shareAsync(targetUri);\n        console.log('File saved to:', targetUri);\n      } catch (error) {\n        console.error('Error while downloading the file:', error);\n      }\n    });\n    return function openPdf(_x5) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollViewContent,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsx(View, {\n        style: styles.headerContainer,\n        children: _jsx(Text, {\n          style: styles.header,\n          children: \"List A Property\"\n        })\n      }), _jsx(View, {\n        style: styles.imageRow,\n        children: _jsxs(ScrollView, {\n          horizontal: true,\n          children: [_jsx(View, {\n            children: _jsx(TouchableOpacity, {\n              onPress: handleChoosePhoto,\n              style: styles.imagePicker,\n              children: _jsx(Icon, {\n                name: \"camera\",\n                size: 40,\n                color: \"#aaa\"\n              })\n            })\n          }), images.map(function (image, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleImagePress(index);\n              },\n              style: styles.imageContainer,\n              children: _jsx(Image, {\n                source: {\n                  uri: image.uri\n                },\n                style: styles.image\n              })\n            }, index);\n          })]\n        })\n      }), _jsx(FullScreenImage, {\n        imageUrl: fullScreenImage,\n        onClose: function onClose() {\n          return setFullScreenImage(null);\n        }\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Select Document\"\n        }), selectedDocuments.length > 0 ? _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            style: styles.selectedDocumentContainer,\n            onPress: _asyncToGenerator(function* () {\n              if (selectedDocuments && selectedDocuments[0].uri) {\n                var filePath = selectedDocuments[0].uri;\n                console.log('Opening document:', filePath);\n                var fileInfo = yield FileSystem.getInfoAsync(filePath);\n                if (fileInfo.exists) {\n                  console.log('File exists:', filePath);\n                  var _yield$Permissions$as2 = yield Permissions.askAsync(Permissions.MEDIA_LIBRARY),\n                    status = _yield$Permissions$as2.status;\n                  openPdf(filePath);\n                } else {\n                  console.warn('Selected document file does not exist.');\n                }\n              } else {\n                console.warn('Selected document URI is not valid.');\n              }\n            }),\n            children: _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [_jsx(Ionicons, {\n                name: \"document-text-outline\",\n                size: 24,\n                color: \"blue\"\n              }), _jsx(Text, {\n                style: styles.selectedDocumentText,\n                children: \" Selected Document: \"\n              }), _jsx(Text, {\n                style: styles.selectedDocumentName,\n                children: selectedDocuments[0].name\n              })]\n            })\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(TouchableOpacity, {\n              style: styles.uploadDocumentButton,\n              onPress: handleSelectDocument,\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Ionicons, {\n                  name: \"repeat-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.removeDocumentButtonText,\n                  children: \" Replace\"\n                })]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.removeDocumentButton,\n              onPress: function onPress() {\n                setSelectedDocuments([]);\n                setIsDocumentUploaded(false);\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Ionicons, {\n                  name: \"trash-bin-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.removeDocumentButtonText,\n                  children: \" Remove\"\n                })]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.viewDocumentButton,\n              onPress: _asyncToGenerator(function* () {\n                if (selectedDocuments && selectedDocuments[0].uri) {\n                  var filePath = selectedDocuments[0].uri;\n                  console.log('Opening document:', filePath);\n                  var fileInfo = yield FileSystem.getInfoAsync(filePath);\n                  if (fileInfo.exists) {\n                    console.log('File exists:', filePath);\n                    var _yield$Permissions$as3 = yield Permissions.askAsync(Permissions.MEDIA_LIBRARY),\n                      status = _yield$Permissions$as3.status;\n                    openPdf(filePath);\n                  } else {\n                    console.warn('Selected document file does not exist.');\n                  }\n                } else {\n                  console.warn('Selected document URI is not valid.');\n                }\n              }),\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Ionicons, {\n                  name: \"eye-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.removeDocumentButtonText,\n                  children: \"   View    \"\n                })]\n              })\n            })]\n          })]\n        }) : _jsx(TouchableOpacity, {\n          style: styles.selectDocumentButton,\n          onPress: handleSelectDocument,\n          children: _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            children: [_jsx(Ionicons, {\n              name: \"add-outline\",\n              size: 24,\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styles.selectDocumentButtonText,\n              children: \"Upload OTP Document\"\n            })]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Title\"\n        }), _jsx(TextInput, {\n          placeholder: \"Listing Title\",\n          placeholderTextColor: \"gray\",\n          value: property.title,\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              title: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Price\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Price\",\n          placeholderTextColor: \"gray\",\n          value: formattedPrice,\n          keyboardType: \"numeric\",\n          onChangeText: handlePriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Option Fee\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Option Fee Price\",\n          placeholderTextColor: \"gray\",\n          value: formattedOptionPrice,\n          keyboardType: \"numeric\",\n          onChangeText: handleOptionPriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Option Exercise Fee\"\n        }), _jsx(TextInput, {\n          placeholder: \"$ Option Exercise Fee Price\",\n          placeholderTextColor: \"gray\",\n          value: formattedOptionExercisePrice,\n          keyboardType: \"numeric\",\n          onChangeText: handleOptionExercisePriceChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Size (sqm)\"\n        }), _jsx(TextInput, {\n          placeholder: \"Size (sqm)\",\n          placeholderTextColor: \"gray\",\n          value: property.size,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              size: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Bedrooms\"\n        }), _jsx(TextInput, {\n          placeholder: \"Number of Bedrooms\",\n          placeholderTextColor: \"gray\",\n          value: property.bed,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              bed: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Bathrooms\"\n        }), _jsx(TextInput, {\n          placeholder: \"Number of Bathrooms\",\n          placeholderTextColor: \"gray\",\n          value: property.bathroom,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              bathroom: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Postal Code\"\n        }), _jsx(TextInput, {\n          placeholder: \"Postal Code\",\n          placeholderTextColor: \"gray\",\n          maxLength: 6,\n          keyboardType: \"numeric\",\n          value: property.postalCode,\n          onChangeText: handlePostalCodeChange,\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Address\"\n        }), _jsx(TextInput, {\n          placeholder: \"Address\",\n          placeholderTextColor: \"gray\",\n          value: property.address,\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              address: text\n            }));\n          },\n          style: [styles.input, styles.mediumTypeInput],\n          multiline: true,\n          numberOfLines: 2\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Tenure\"\n        }), _jsx(TextInput, {\n          placeholder: \"Tenure (e.g. 99 years)\",\n          placeholderTextColor: \"gray\",\n          maxLength: 3,\n          keyboardType: \"numeric\",\n          value: property.tenure,\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              tenure: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Unit Number\"\n        }), _jsx(TextInput, {\n          placeholder: \"Unit Number (e.g. #17-360)\",\n          placeholderTextColor: \"gray\",\n          value: property.unitNumber,\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              unitNumber: text\n            }));\n          },\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Description\"\n        }), _jsx(TextInput, {\n          placeholder: \"Description of Listing\",\n          placeholderTextColor: \"gray\",\n          value: property.description,\n          onChangeText: function onChangeText(text) {\n            return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n              description: text\n            }));\n          },\n          style: [styles.input, styles.largeTextInput],\n          multiline: true,\n          numberOfLines: 4\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Property Type\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.propertyTypePickerButton,\n          onPress: function onPress() {\n            return setPropertyTypeVisible(true);\n          },\n          children: [_jsx(Text, {\n            style: styles.propertyTypePickerText,\n            children: property.propertyType ? property.propertyType.charAt(0).toUpperCase() + property.propertyType.slice(1) : 'Select Property Type'\n          }), _jsx(Icon, {\n            name: \"caret-down\",\n            size: 20,\n            color: \"black\"\n          })]\n        })]\n      }), _jsx(Modal, {\n        transparent: true,\n        animationType: \"slide\",\n        visible: propertyTypeVisible,\n        onRequestClose: function onRequestClose() {\n          return setPropertyTypeVisible(false);\n        },\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsx(Picker, {\n            selectedValue: property.propertyType,\n            onValueChange: function onValueChange(value) {\n              return setProperty(_objectSpread(_objectSpread({}, property), {}, {\n                propertyType: value\n              }));\n            },\n            style: styles.picker,\n            children: propertyTypes.map(function (type, index) {\n              return _jsx(Picker.Item, {\n                label: type.label,\n                value: type.value\n              }, index);\n            })\n          }), _jsx(View, {\n            style: styles.okButtonContainer,\n            children: _jsx(Button, {\n              title: \"OK\",\n              onPress: function onPress() {\n                return setPropertyTypeVisible(false);\n              }\n            })\n          })]\n        })\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.saveChangesButton,\n      onPress: handleSubmit,\n      children: [_jsx(Ionicons, {\n        name: \"save-outline\",\n        size: 18,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.saveChangesButtonText,\n        children: \"Submit\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 10\n  },\n  inputContainer: {\n    marginBottom: 10\n  },\n  label: {\n    marginBottom: 5,\n    fontWeight: 'bold'\n  },\n  input: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8,\n    height: 40,\n    borderRadius: 5\n  },\n  largeTextInput: {\n    height: 120\n  },\n  mediumTypeInput: {\n    height: 60\n  },\n  imageRow: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    paddingVertical: 10\n  },\n  imagePicker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n    width: 100,\n    height: 100,\n    marginRight: 10\n  },\n  imageContainer: {\n    position: 'relative',\n    marginRight: 10\n  },\n  image: {\n    width: 100,\n    height: 100\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  propertyTypePickerText: {\n    fontSize: 14\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20\n  },\n  picker: {\n    backgroundColor: 'white'\n  },\n  okButtonContainer: {\n    backgroundColor: 'white'\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginLeft: 70\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 90\n  },\n  selectDocumentButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectDocumentButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  scrollViewContent: {\n    paddingBottom: 100\n  },\n  uploadDocumentButton: {\n    backgroundColor: '#3498db',\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10,\n    marginRight: 10\n  },\n  uploadDocumentButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  removeDocumentButton: {\n    backgroundColor: 'red',\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10,\n    marginRight: 10\n  },\n  viewDocumentButton: {\n    backgroundColor: 'green',\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10,\n    marginRight: 10\n  },\n  removeDocumentButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  selectedDocumentContainer: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 8,\n    padding: 10,\n    marginTop: 10\n  },\n  selectedDocumentText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  selectedDocumentName: {\n    fontSize: 16,\n    marginTop: 0\n  }\n});","map":{"version":3,"names":["React","useState","useContext","View","Text","TextInput","Button","StyleSheet","ScrollView","Image","TouchableOpacity","Alert","Modal","FlatList","Picker","ImagePicker","Icon","createProperty","Ionicons","AuthContext","useNavigation","PropertyListingScreen","getAreaAndRegion","DocumentSelector","DocumentPicker","BASE_URL","fetchFolders","createFolder","fetchTransactions","Linking","FileSystem","Permissions","IntentLauncher","Sharing","FullScreenImage","useFocusEffect","jsx","_jsx","jsxs","_jsxs","propertyTypes","label","value","PropertyListing","_useContext","user","navigation","updateAreaAndRegion","_ref","_asyncToGenerator","postalCode","_yield$getAreaAndRegi","area","region","setProperty","_objectSpread","property","_x","apply","arguments","_useState","_useState2","_slicedToArray","documents","setDocuments","_useState3","_useState4","fullScreenImage","setFullScreenImage","_useState5","_useState6","images","setImages","userId","emptyProperty","title","description","price","bed","bathroom","tenure","size","propertyType","propertyStatus","address","unitNumber","longitude","latitude","_useState7","offeredPrice","sellerId","_useState8","_useState9","_useState10","propertyTypeVisible","setPropertyTypeVisible","_useState11","_useState12","formattedPrice","setFormattedPrice","_useState13","_useState14","formattedOptionPrice","setFormattedOptionPrice","_useState15","_useState16","formattedOptionExercisePrice","setFormattedOptionExercisePrice","_useState17","_useState18","rawPrice","setRawPrice","_useState19","_useState20","rawOptionPrice","setOptionRawPrice","_useState21","_useState22","rawOptionExercisePrice","setOptionExerciseRawPrice","_useState23","_useState24","prevDocuments","setPrevDocuments","_useState25","_useState26","filteredDocs","setFilteredDocs","_useState27","_useState28","folders","setFolders","_useState29","_useState30","propertyFolderId","setFolderId","_useState31","_useState32","selectedFolder","setSelectedFolder","_useState33","_useState34","selectedDocument","setSelectedDocument","_useState35","_useState36","selectedDocuments","setSelectedDocuments","_useState37","_useState38","isDocumentUploaded","setIsDocumentUploaded","formatPrice","replace","handlePriceChange","text","raw","handleOptionPriceChange","handleOptionExercisePriceChange","fetchFolderData","_ref2","_yield$createFolder","folderTitle","success","data","message","folderId","error","console","handleChoosePhoto","_ref3","permissionResult","requestMediaLibraryPermissionsAsync","granted","warn","length","alert","options","mediaTypes","MediaTypeOptions","Images","quality","response","launchImageLibraryAsync","cancelled","concat","_toConsumableArray","handleImagePress","index","onPress","viewImage","replaceImage","removeImage","style","handleSelectDocument","_ref4","_yield$Permissions$as","askAsync","MEDIA_LIBRARY","status","log","results","getDocumentAsync","multiple","type","newSelectedDocuments","assets","uri","fileInfo","getInfoAsync","exists","_ref5","allowsEditing","updatedImages","_x2","splice","fetchAddressByPostalCode","_ref6","fetch","ok","json","found","ADDRESS","parseFloat","LATITUDE","LONGITUDE","_yield$getAreaAndRegi2","_x3","handlePostalCodeChange","test","handleSubmit","_ref7","parseInt","optionPrice","optionExercisePrice","trim","propertyTypeUpperCase","toUpperCase","_yield$createProperty","optionFee","optionExerciseFee","propertyListingId","createDocument","navigate","_ref8","fileData","FormData","forEach","document","fileUri","fileType","mimeType","fileName","name","append","method","body","_x4","openPdf","_ref9","filePath","split","pop","targetUri","documentDirectory","copyAsync","from","to","isAvailableAsync","shareAsync","_x5","styles","container","children","scrollView","contentContainerStyle","scrollViewContent","keyboardShouldPersistTaps","headerContainer","header","imageRow","horizontal","imagePicker","color","map","image","imageContainer","source","imageUrl","onClose","inputContainer","selectedDocumentContainer","_yield$Permissions$as2","flexDirection","alignItems","selectedDocumentText","selectedDocumentName","uploadDocumentButton","removeDocumentButtonText","removeDocumentButton","viewDocumentButton","_yield$Permissions$as3","selectDocumentButton","selectDocumentButtonText","placeholder","placeholderTextColor","onChangeText","input","keyboardType","maxLength","mediumTypeInput","multiline","numberOfLines","largeTextInput","propertyTypePickerButton","propertyTypePickerText","charAt","slice","transparent","animationType","visible","onRequestClose","modalContainer","selectedValue","onValueChange","picker","Item","okButtonContainer","saveChangesButton","saveChangesButtonText","create","flex","padding","marginBottom","fontWeight","borderColor","borderWidth","height","borderRadius","paddingVertical","justifyContent","backgroundColor","width","marginRight","position","paddingHorizontal","fontSize","paddingBottom","marginTop","marginLeft","uploadDocumentButtonText"],"sources":["/Users/limzhongzhi/WebstormProjects/PropertyGo/frontend/mobile/screens/userBottomNavBar/Sell.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  StyleSheet,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  FlatList,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { createProperty } from '../../utils/api';\nimport { Ionicons } from '@expo/vector-icons'; // Import Ionicons from the correct library\nimport { AuthContext } from '../../AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport PropertyListingScreen from '../propertyListings/PropertyListing';\nimport { getAreaAndRegion } from '../../services/GetAreaAndRegion';\nimport { DocumentSelector } from '../../components/PropertyDocumentSelector';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { BASE_URL, fetchFolders, createFolder, fetchTransactions } from \"../../utils/documentApi\";\nimport { Linking } from 'react-native';\nimport * as FileSystem from 'expo-file-system'; // Import FileSystem from expo-file-system\nimport * as Permissions from 'expo-permissions';\nimport * as IntentLauncher from 'expo-intent-launcher';\nimport * as Sharing from 'expo-sharing';\nimport FullScreenImage from '../propertyListings/FullScreenImage';\nimport { useFocusEffect } from '@react-navigation/native';\n\nconst propertyTypes = [\n  { label: 'Select Property Type', value: '' },\n  { label: 'Resale', value: 'Resale' },\n  { label: 'New Launch', value: 'New Launch' },\n]\n\nexport default function PropertyListing() {\n  const { user } = useContext(AuthContext);\n  const navigation = useNavigation();\n  const updateAreaAndRegion = async (postalCode) => {\n    const { area, region } = await getAreaAndRegion(postalCode);\n    setProperty({ ...property, area, region });\n  };\n  const [documents, setDocuments] = useState([]);\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const userId = user.user.userId;\n  const emptyProperty = {\n    title: '',\n    description: '',\n    price: '',\n    bed: '',\n    bathroom: '',\n    tenure: '',\n    size: '',\n    propertyType: '',\n    propertyStatus: 'ACTIVE',\n    userId: user.user.userId,\n    postalCode: '',\n    address: '',\n    unitNumber: '',\n    area: '',\n    region: '',\n    longitude: '',\n    latitude: '',\n  }\n  const [property, setProperty] = useState({\n    title: 'Sample Title',\n    description:\n      'Sample Description (You can add a longer description here.)',\n    price: '100000', // Add a dollar symbol to the price\n    offeredPrice: '90000', // Add a dollar symbol to the offered price\n    bed: '2',\n    bathroom: '2',\n    size: '1200',\n    tenure: '99',\n    propertyType: 'Resale',\n    propertyStatus: 'ACTIVE',\n    userId: user.user.userId,\n    sellerId: user.user.userId,\n    postalCode: '822126',\n    address: 'Home',\n    unitNumber: '17-360',\n    area: '',\n    region: '',\n    longitude: '',\n    latitude: '',\n\n    //Original\n    // title: '',\n    // description: '',\n    // price: '',\n    // bed: '',\n    // bathroom: '',\n    // tenure: '',\n    // size: '',\n    // propertyType: '',\n    // propertyStatus: 'ACTIVE',\n    // userId: user.user.userId,\n    // postalCode: '',\n    // address: '',\n    // unitNumber: '',\n    // area: '',\n    // region: '',\n    // longitude: '',\n    // latitude: '',\n  });\n\n  const [propertyTypeVisible, setPropertyTypeVisible] = useState(false);\n  const [formattedPrice, setFormattedPrice] = useState('');\n  const [formattedOptionPrice, setFormattedOptionPrice] = useState('');\n  const [formattedOptionExercisePrice, setFormattedOptionExercisePrice] = useState('');\n  const [rawPrice, setRawPrice] = useState('');\n  const [rawOptionPrice, setOptionRawPrice] = useState('');\n  const [rawOptionExercisePrice, setOptionExerciseRawPrice] = useState('');\n\n  //For Document\n  const [prevDocuments, setPrevDocuments] = useState([]);\n  const [filteredDocs, setFilteredDocs] = useState(prevDocuments);\n  const [folders, setFolders] = useState([]);\n  const [propertyFolderId, setFolderId] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [selectedDocuments, setSelectedDocuments] = useState([]); // Documents to upload\n  const [isDocumentUploaded, setIsDocumentUploaded] = useState(false);\n  \n\n\n  // Function to format the price with dollar sign and commas\n  const formatPrice = (price) => {\n    return `$${price.replace(/\\D/g, '').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n  };\n\n  // Function to remove dollar sign and commas and save raw price\n  const handlePriceChange = (text) => {\n    const raw = text.replace(/[^0-9]/g, '');\n    setFormattedPrice(formatPrice(raw));\n    setRawPrice(raw);\n  };\n\n  const handleOptionPriceChange = (text) => {\n    const raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionPrice(formatPrice(raw));\n    setOptionRawPrice(raw);\n  };\n\n  const handleOptionExercisePriceChange = (text) => {\n    const raw = text.replace(/[^0-9]/g, '');\n    setFormattedOptionExercisePrice(formatPrice(raw));\n    setOptionExerciseRawPrice(raw);\n  };\n\n  const fetchFolderData = async () => {\n    try {\n      // const documents = await fetchDocuments(USER_ID);\n      const { success, data, message } = await createFolder(userId, { folderTitle: 'Property' });\n      if (success) {\n        setFolderId(data.folderId);\n      } else {\n        setFolderId(data.folderId);\n      }\n\n      // console.log(user);\n    } catch (error) {\n      console.error('Error fetching Folder data:', error);\n    }\n  };\n\n  // useFocusEffect(\n  //   React.useCallback(() => {\n  //     // console.log('Home page gained focus');\n  //     setProperty({\n  //       title: '',\n  //       description: '',\n  //       price: '',\n  //       bed: '',\n  //       bathroom: '',\n  //       tenure: '',\n  //       size: '',\n  //       propertyType: '',\n  //       propertyStatus: 'ACTIVE',\n  //       userId: user.user.userId,\n  //       postalCode: '',\n  //       address: '',\n  //       unitNumber: '',\n  //       area: '',\n  //       region: '',\n  //       longitude: '',\n  //       latitude: '',\n  //     });\n  //     setImages([]);\n  //     setFormattedPrice('');\n  //   }, [])\n  // );\n\n  const handleChoosePhoto = async () => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (permissionResult.granted === false) {\n      console.warn('Permission to access photos was denied');\n      return;\n    }\n\n    // Check if the number of selected photos is already 10 or more\n    if (images.length >= 10) {\n      Alert.alert('Limit Exceeded', 'You can only select up to 10 photos.');\n      return;\n    }\n\n    const options = {\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      // allowsEditing: true,\n      quality: 1,\n    };\n\n    let response = await ImagePicker.launchImageLibraryAsync(options);\n\n    if (!response.cancelled) {\n      setImages([...images, response]);\n    }\n  };\n\n\n  const handleImagePress = (index) => {\n    Alert.alert(\n      'Choose an action',\n      'Do you want to replace or remove this image?',\n      [\n        {\n          text: 'View Image',\n          onPress: () => viewImage(index),\n        },\n        {\n          text: 'Replace',\n          onPress: () => replaceImage(index),\n        },\n        {\n          text: 'Remove',\n          onPress: () => removeImage(index),\n          style: 'destructive',\n        },\n        {\n          text: 'Cancel',\n          style: 'cancel',\n        },\n      ]\n    );\n  };\n\n  const handleSelectDocument = async () => {\n    try {\n      const { status } = await Permissions.askAsync(Permissions.MEDIA_LIBRARY);\n      console.log('Media library permission status:', status);\n\n      if (status === 'granted') {\n        const results = await DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: 'application/pdf', // Set the desired document type\n        });\n\n        console.log('Result from DocumentPicker:', results);\n\n        if (!results.cancelled) {\n          // The user selected a document, you can now proceed with the upload logic\n          const newSelectedDocuments = results.assets;\n          setSelectedDocuments([...newSelectedDocuments]);\n          console.log('Selected document:', results.assets[0].uri);\n\n          // Check if the file exists\n          const fileInfo = await FileSystem.getInfoAsync(results.assets[0].uri);\n\n          if (fileInfo.exists) {\n            // Update the selected document and clear the uploaded status\n            // setSelectedDocuments(results);\n            setIsDocumentUploaded(false);\n          } else {\n            console.warn('Selected document file does not exist.');\n          }\n        } else {\n          console.log('Document selection canceled or failed.');\n        }\n      } else {\n        console.warn('Media library permission denied.');\n      }\n    } catch (error) {\n      console.error('Error selecting document:', error);\n    }\n  };\n\n\n  const replaceImage = async (index) => {\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (permissionResult.granted === false) {\n      console.warn('Permission to access photos was denied');\n      return;\n    }\n\n    const options = {\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      quality: 1,\n    };\n\n    let response = await ImagePicker.launchImageLibraryAsync(options);\n\n    if (!response.cancelled) {\n      const updatedImages = [...images];\n      updatedImages[index] = response;\n      setImages(updatedImages);\n    }\n  };\n\n  const viewImage = (index) => {\n    console.log(\"View Image: \", images[index].uri)\n    setFullScreenImage(images[index].uri)\n  }\n\n  const removeImage = (index) => {\n    const updatedImages = [...images];\n    updatedImages.splice(index, 1);\n    setImages(updatedImages);\n  };\n\n  // Function to fetch address based on postal code\n  const fetchAddressByPostalCode = async (postalCode) => {\n    if (postalCode.length === 6) { // Only fetch address when 6 digits are entered\n      try {\n        const response = await fetch(\n          `https://developers.onemap.sg/commonapi/search?searchVal=${postalCode}&returnGeom=Y&getAddrDetails=Y`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          if (data.found === 1) {\n            // Extract the address from the API response\n            const address = data.results[0].ADDRESS;\n            const latitude = parseFloat(data.results[0].LATITUDE);\n            const longitude = parseFloat(data.results[0].LONGITUDE);\n            const { area, region } = await getAreaAndRegion(postalCode);\n\n            // Update the address in the property state\n            setProperty({ ...property, address, postalCode, area, region, latitude, longitude });\n            // console.log(\"address: \", address);\n          } else {\n            // No address found, alert the user and clear the address field\n            Alert.alert('Invalid Postal Code', 'No address found for the postal code.');\n            setProperty({ ...property, address: '', postalCode });\n          }\n        } else {\n          console.error('API request failed.');\n        }\n      } catch (error) {\n        console.error('Error fetching address:', error);\n      }\n    }\n  };\n\n\n  // Event listener for postal code input\n  const handlePostalCodeChange = (text) => {\n    // Restrict input to a maximum of 6 digits\n    if (/^\\d{0,6}$/.test(text)) {\n      // Update the postalCode field in the property state\n      setProperty({ ...property, postalCode: text });\n\n      // Call the function to fetch the address\n      if (text.length === 6) {\n        fetchAddressByPostalCode(text);\n        postalCode = text;\n      }\n    }\n  };\n\n  const handleSubmit = async () => {\n    // Validation checks\n    if (images.length === 0) {\n      Alert.alert('No images selected', 'Please select at least one image.');\n      return;\n    }\n\n    // Parse the formatted price to remove dollar sign and commas\n    const price = rawPrice ? parseInt(rawPrice, 10) : 0;\n    const optionPrice = rawOptionPrice ? parseInt(rawOptionPrice, 10) : 0;\n    const optionExercisePrice = rawOptionExercisePrice ? parseInt(rawOptionExercisePrice, 10) : 0;\n\n    if (!price || price <= 0) {\n      Alert.alert('Invalid Price', 'Price must be a numeric value.');\n      return;\n    }\n\n    if (!/^\\d+$/.test(property.size)) {\n      Alert.alert('Invalid Size', 'Size must be a numeric value.');\n      return;\n    }\n\n    if (!/^\\d+$/.test(property.bed)) {\n      Alert.alert('Invalid Bed', 'Bed must be a numeric value.');\n      return;\n    }\n\n    if (!/^\\d+$/.test(property.bathroom)) {\n      Alert.alert('Invalid Bathroom', 'Bathroom must be a numeric value.');\n      return;\n    }\n\n    if (property.propertyType === '') {\n      Alert.alert('Property Type Not Selected', 'Please select a property type.');\n      return;\n    }\n\n    if (\n      property.title.trim() === '' ||\n      property.description.trim() === '' ||\n      property.unitNumber.trim() === '' ||\n      property.postalCode.trim() === '' ||\n      property.address.trim() === ''\n    ) {\n      Alert.alert('Missing Information', 'Please fill in all fields.');\n      return;\n    }\n\n    // Other checks and API call\n    let propertyTypeUpperCase = property.propertyType.toUpperCase();\n    if (propertyTypeUpperCase === 'NEW LAUNCH') {\n      propertyTypeUpperCase = 'NEW_LAUNCH';\n    }\n\n    try {\n      const { success, data, message } = await createProperty(\n        {\n          ...property,\n          price: price, // Use the parsed price here\n          optionFee: optionPrice,\n          optionExerciseFee: optionExercisePrice,\n          // offeredPrice: property.offeredPrice.replace(/\\$/g, ''),\n          propertyType: propertyTypeUpperCase,\n        },\n        images\n      );\n\n      if (success) {\n        const propertyListingId = data.propertyListingId;\n        console.log('Property created successfully:', propertyListingId);\n        Alert.alert(\n          'Property Created',\n          'The property listing has been created successfully.'\n        );\n\n        fetchFolderData();\n\n        createDocument(propertyListingId);\n        \n\n        navigation.navigate('Property Listing', { propertyListingId });\n      } else {\n        Alert.alert('Error', `Failed to create property: ${message}`);\n      }\n    } catch (error) {\n      console.log('Error uploading property:', error);\n      Alert.alert(\n        'Error',\n        'An error occurred while creating the property listing.'\n      );\n    }\n  };\n\n  const createDocument = async (propertyListingId) => {\n    console.log(\"createDocument\", selectedDocuments);\n    try {\n      const fileData = new FormData();\n  \n      selectedDocuments.forEach((document) => {\n        const fileUri = document.uri;\n        const fileType = document.mimeType;\n        const fileName = document.name;\n        const folderId = propertyFolderId;\n  \n        fileData.append(\"documents\", {\n          uri: fileUri,\n          name: fileName,\n          type: fileType,\n        });\n  \n        console.log(\"File URI: \", fileUri);\n  \n        // Append other required data to the FormData object\n        fileData.append(\"propertyId\", propertyListingId);\n        fileData.append(\"description\", \"OTP\");\n        fileData.append(\"folderId\", folderId);\n        fileData.append(\"userId\", user.user.userId);\n      });\n  \n      const response = await fetch(`${BASE_URL}/user/documents/upload`, {\n        method: \"post\",\n        body: fileData,\n      });\n  \n      // Check the response status and log the result\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Upload response:\", data);\n        // await documentFetch();\n      } else {\n        console.log(\"File upload failed \", response);\n      }\n    } catch (error) {\n      console.log(\"Error upload:\", error);\n    }\n  \n\n    // try {\n    //   // Create a FormData object to send the document as a Blob\n    //   const documentData = new FormData();\n    //   const fileUri = selectedDocument.assets[0].uri;\n\n    //   // Use FileSystem to read the file and get a Blob representation\n    //   const blob = await FileSystem.readAsStringAsync(fileUri, {\n    //     encoding: FileSystem.EncodingType.Blob,\n    //   });\n\n    //   // Append the Blob to the FormData object\n    //   documentData.append(\"documents\",\n    //     {\n    //       uri: fileUri,\n    //       name: selectedDocument.assets[0].name,\n    //       type: \"application/pdf\"\n    //     });\n\n    //   // Add other necessary data to the FormData object\n    //   documentData.append('propertyId', propertyListingId);\n    //   documentData.append('folderId', propertyFolderId);\n    //   documentData.append('userId', user.user.userId);\n\n    //   // Send the FormData object with the document to the server\n    //   const response = await fetch(`${BASE_URL}/user/documents/upload`, {\n    //     method: 'post',\n    //     body: documentData,\n    //   });\n\n    //   if (response.ok) {\n    //     const data = await response.json();\n    //     console.log('Document upload response:', data);\n    //   } else {\n    //     console.log('Document upload failed');\n    //   }\n    // } catch (error) {\n    //   console.log('Error uploading document:', error);\n    // }\n  }\n\n  const openPdf = async (filePath) => {\n    try {\n      // Define a target URI for the file. This can be a directory in the app's \n      // document directory or any other appropriate location.\n      const fileName = filePath.split('/').pop();\n      const targetUri = `${FileSystem.documentDirectory}${fileName}`;\n\n      // Copy the file from the source location to the target location.\n      await FileSystem.copyAsync({\n        from: filePath,\n        to: targetUri,\n      });\n\n      if (!(await Sharing.isAvailableAsync())) {\n        alert(\"Uh oh, sharing isn't available on your platform\");\n        return;\n      }\n\n      // Share the file with the user\n      await Sharing.shareAsync(targetUri);\n      console.log('File saved to:', targetUri);\n    } catch (error) {\n      console.error('Error while downloading the file:', error);\n    }\n  };\n\n\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollViewContent}\n        keyboardShouldPersistTaps=\"handled\" // Add this prop\n      >\n        <View style={styles.headerContainer}>\n          <Text style={styles.header}>List A Property</Text>\n        </View>\n\n        <View style={styles.imageRow}>\n          <ScrollView horizontal={true}>\n            {/* Add a View to hold the Add Image button */}\n            <View>\n              <TouchableOpacity onPress={handleChoosePhoto} style={styles.imagePicker}>\n                <Icon name=\"camera\" size={40} color=\"#aaa\" />\n              </TouchableOpacity>\n            </View>\n\n            {/* Map over the images */}\n            {images.map((image, index) => (\n              <TouchableOpacity\n                key={index}\n                onPress={() => handleImagePress(index)}\n                style={styles.imageContainer}\n              >\n                <Image source={{ uri: image.uri }} style={styles.image} />\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n\n        <FullScreenImage\n          imageUrl={fullScreenImage}\n          onClose={() => setFullScreenImage(null)} // Close the full-screen image view\n        />\n\n<View style={styles.inputContainer}>\n  <Text style={styles.label}>Select Document</Text>\n  {selectedDocuments.length > 0 ? (\n    <View>\n      <TouchableOpacity\n        style={styles.selectedDocumentContainer}\n        onPress={async () => {\n          if (selectedDocuments && selectedDocuments[0].uri) {\n\n            const filePath = selectedDocuments[0].uri;\n            console.log('Opening document:', filePath);\n\n            // Check if the file exists\n            const fileInfo = await FileSystem.getInfoAsync(filePath);\n            // console.log('File exists:', fileInfo)\n            if (fileInfo.exists) {\n              // Request permission to access the file\n              console.log('File exists:', filePath)\n              const { status } = await Permissions.askAsync(Permissions.MEDIA_LIBRARY);\n              openPdf(filePath);\n            } else {\n              console.warn('Selected document file does not exist.');\n            }\n          } else {\n            console.warn('Selected document URI is not valid.');\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Ionicons name=\"document-text-outline\" size={24} color=\"blue\" />\n          <Text style={styles.selectedDocumentText}> Selected Document: </Text>\n          <Text style={styles.selectedDocumentName}>\n          {selectedDocuments[0].name}\n        </Text>\n        </View>\n\n      </TouchableOpacity>\n      <View style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          style={styles.uploadDocumentButton}\n          onPress={handleSelectDocument}\n        >\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Ionicons name=\"repeat-outline\" size={24} color=\"white\" />\n            <Text style={styles.removeDocumentButtonText}> Replace</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.removeDocumentButton}\n          onPress={() => {\n            // Handle removing the selected document\n            setSelectedDocuments([]);\n            setIsDocumentUploaded(false);\n          }}\n        >\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Ionicons name=\"trash-bin-outline\" size={24} color=\"white\" />\n            <Text style={styles.removeDocumentButtonText}> Remove</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n        style={styles.viewDocumentButton}\n        onPress={async () => {\n          if (selectedDocuments && selectedDocuments[0].uri) {\n\n            const filePath = selectedDocuments[0].uri;\n            console.log('Opening document:', filePath);\n\n            // Check if the file exists\n            const fileInfo = await FileSystem.getInfoAsync(filePath);\n            // console.log('File exists:', fileInfo)\n            if (fileInfo.exists) {\n              // Request permission to access the file\n              console.log('File exists:', filePath)\n              const { status } = await Permissions.askAsync(Permissions.MEDIA_LIBRARY);\n              openPdf(filePath);\n            } else {\n              console.warn('Selected document file does not exist.');\n            }\n          } else {\n            console.warn('Selected document URI is not valid.');\n          }\n        }}\n      >\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Ionicons name=\"eye-outline\" size={24} color=\"white\" />\n            <Text style={styles.removeDocumentButtonText}>   View    </Text>\n          </View>\n        </TouchableOpacity>\n        \n      </View>\n    </View>\n  ) : (\n    <TouchableOpacity\n      style={styles.selectDocumentButton}\n      onPress={handleSelectDocument}\n    >\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <Ionicons name=\"add-outline\" size={24} color=\"white\" />\n        <Text style={styles.selectDocumentButtonText}>Upload OTP Document</Text>\n      </View>\n    </TouchableOpacity>\n  )}\n</View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Title</Text>\n          <TextInput\n            placeholder=\"Listing Title\"\n            placeholderTextColor=\"gray\"\n            value={property.title}\n            onChangeText={(text) => setProperty({ ...property, title: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Price</Text>\n          <TextInput\n            placeholder=\"$ Price\"\n            placeholderTextColor=\"gray\"\n            value={formattedPrice}\n            keyboardType=\"numeric\"\n            onChangeText={handlePriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Option Fee</Text>\n          <TextInput\n            placeholder=\"$ Option Fee Price\"\n            placeholderTextColor=\"gray\"\n            value={formattedOptionPrice}\n            keyboardType=\"numeric\"\n            onChangeText={handleOptionPriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Option Exercise Fee</Text>\n          <TextInput\n            placeholder=\"$ Option Exercise Fee Price\"\n            placeholderTextColor=\"gray\"\n            value={formattedOptionExercisePrice}\n            keyboardType=\"numeric\"\n            onChangeText={handleOptionExercisePriceChange}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Size (sqm)</Text>\n          <TextInput\n            placeholder=\"Size (sqm)\"\n            placeholderTextColor=\"gray\"\n            value={property.size}\n            keyboardType=\"numeric\"\n            onChangeText={(text) => setProperty({ ...property, size: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Bedrooms</Text>\n          <TextInput\n            placeholder=\"Number of Bedrooms\"\n            placeholderTextColor=\"gray\"\n            value={property.bed}\n            keyboardType=\"numeric\"\n            onChangeText={(text) => setProperty({ ...property, bed: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Bathrooms</Text>\n          <TextInput\n            placeholder=\"Number of Bathrooms\"\n            placeholderTextColor=\"gray\"\n            value={property.bathroom}\n            keyboardType=\"numeric\"\n            onChangeText={(text) =>\n              setProperty({ ...property, bathroom: text })\n            }\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Postal Code</Text>\n          <TextInput\n            placeholder=\"Postal Code\"\n            placeholderTextColor=\"gray\"\n            maxLength={6} // Restrict input to 6 characters\n            keyboardType=\"numeric\" // Show numeric keyboard\n            value={property.postalCode}\n            onChangeText={handlePostalCodeChange} // Handle postal code changes\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Address</Text>\n          <TextInput\n            placeholder=\"Address\"\n            placeholderTextColor=\"gray\"\n            value={property.address}\n            onChangeText={(text) => setProperty({ ...property, address: text })}\n            style={[styles.input, styles.mediumTypeInput]}\n            multiline={true}\n            numberOfLines={2}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Tenure</Text>\n          <TextInput\n            placeholder=\"Tenure (e.g. 99 years)\"\n            placeholderTextColor=\"gray\"\n            maxLength={3} // Restrict input to 6 characters\n            keyboardType=\"numeric\" // Show numeric keyboard\n            value={property.tenure}\n            onChangeText={(text) => setProperty({ ...property, tenure: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Unit Number</Text>\n          <TextInput\n            placeholder=\"Unit Number (e.g. #17-360)\"\n            placeholderTextColor=\"gray\"\n            value={property.unitNumber}\n            onChangeText={(text) => setProperty({ ...property, unitNumber: text })}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Description</Text>\n          <TextInput\n            placeholder=\"Description of Listing\"\n            placeholderTextColor=\"gray\"\n            value={property.description}\n            onChangeText={(text) =>\n              setProperty({ ...property, description: text })\n            }\n            style={[styles.input, styles.largeTextInput]}\n            multiline={true}\n            numberOfLines={4}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Property Type</Text>\n          <TouchableOpacity\n            style={styles.propertyTypePickerButton}\n            onPress={() => setPropertyTypeVisible(true)}\n          >\n            <Text style={styles.propertyTypePickerText}>\n              {property.propertyType\n                ? property.propertyType.charAt(0).toUpperCase() +\n                property.propertyType.slice(1)\n                : 'Select Property Type'}\n            </Text>\n            <Icon name=\"caret-down\" size={20} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n\n        <Modal\n          transparent={true}\n          animationType=\"slide\"\n          visible={propertyTypeVisible}\n          onRequestClose={() => setPropertyTypeVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <Picker\n              selectedValue={property.propertyType}\n              onValueChange={(value) =>\n                setProperty({ ...property, propertyType: value })\n              }\n              style={styles.picker}\n            >\n              {propertyTypes.map((type, index) => (\n                <Picker.Item\n                  key={index}\n                  label={type.label}\n                  value={type.value}\n                />\n              ))}\n            </Picker>\n            <View style={styles.okButtonContainer}>\n              <Button\n                title=\"OK\"\n                onPress={() => setPropertyTypeVisible(false)}\n              />\n            </View>\n          </View>\n        </Modal>\n\n\n      </ScrollView>\n      <TouchableOpacity style={styles.saveChangesButton} onPress={handleSubmit}>\n        <Ionicons name=\"save-outline\" size={18} color=\"white\" />\n        <Text style={styles.saveChangesButtonText}>Submit</Text>\n      </TouchableOpacity>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 10, // Adjust this margin to avoid overlap with the navigation bar\n  },\n  inputContainer: {\n    marginBottom: 10,\n  },\n  label: {\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8,\n    height: 40,\n    borderRadius: 5,\n  },\n  largeTextInput: {\n    height: 120,\n  },\n  mediumTypeInput: {\n    height: 60,\n  },\n  imageRow: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    paddingVertical: 10,\n  },\n  imagePicker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n    width: 100,\n    height: 100,\n    marginRight: 10,\n  },\n  imageContainer: {\n    position: 'relative',\n    marginRight: 10,\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  propertyTypePickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  propertyTypePickerText: {\n    fontSize: 14,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingBottom: 20, // Add padding to make the button visible\n  },\n  picker: {\n    backgroundColor: 'white',\n  },\n  okButtonContainer: {\n    backgroundColor: 'white',\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center', // Center horizontally\n    flexDirection: 'row',\n    justifyContent: 'center', // Center vertically\n    width: '60%',\n    marginLeft: 70,\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 90,\n  },\n  selectDocumentButton: {\n    backgroundColor: '#3498db', // Change the background color as needed\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  selectDocumentButtonText: {\n    color: 'white', // Change the text color as needed\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  scrollViewContent: {\n    paddingBottom: 100, // Adjust this value as needed to ensure the input field is visible\n  },\n  uploadDocumentButton: {\n    backgroundColor: '#3498db', // Change the background color as per your design\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10,\n    marginRight: 10, \n  },\n  uploadDocumentButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n\n  // Style for Remove Document button\n  removeDocumentButton: {\n    backgroundColor: 'red', // Change the background color as per your design\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10, // Add some top margin for spacing\n    marginRight: 10, \n  },\n  viewDocumentButton: {\n    backgroundColor: 'green', // Change the background color as per your design\n    borderRadius: 8,\n    padding: 10,\n    alignItems: 'center',\n    marginTop: 10, // Add some top margin for spacing\n    marginRight: 10, \n  },\n  removeDocumentButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n\n  // Style for Selected Document container\n  selectedDocumentContainer: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 8,\n    padding: 10,\n    marginTop: 10, // Add some top margin for spacing\n  },\n  selectedDocumentText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  selectedDocumentName: {\n    fontSize: 16,\n    marginTop: 0, // Add some top margin for spacing\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}