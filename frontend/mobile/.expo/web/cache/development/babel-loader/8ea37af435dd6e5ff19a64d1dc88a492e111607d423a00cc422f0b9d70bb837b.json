{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { PieChart } from \"react-native-chart-kit\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var MyPieChart = function MyPieChart(_ref) {\n  var transactionCountryCount = _ref.transactionCountryCount;\n  var slideAnim = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.spring(slideAnim, {\n      toValue: 70,\n      tension: 5,\n      friction: 3,\n      useNativeDriver: false\n    }).start();\n  }, []);\n  function transformToPieChartData() {\n    return transactionCountryCount.map(function (buyer) {\n      return {\n        name: buyer.countryOfOrigin,\n        population: buyer.transactionCount,\n        color: getColorForCountry(buyer.countryOfOrigin),\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      };\n    });\n  }\n  function getColorForCountry(country) {\n    var colorMap = {\n      'SINGAPORE': 'rgba(131, 167, 234, 1)',\n      'MALAYSIA': '#F00'\n    };\n    return colorMap[country] || '#000';\n  }\n  var data_pie = transformToPieChartData();\n  var result = _toConsumableArray(data_pie).reduce(function (acc, curr, index) {\n    if (curr.population > acc.maxValue) {\n      return {\n        maxValue: curr.population,\n        maxName: curr.name\n      };\n    } else {\n      return acc;\n    }\n  }, {\n    maxValue: Number.MIN_SAFE_INTEGER,\n    maxName: \"\"\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsx(PieChart, {\n      data: data_pie,\n      width: Dimensions.get('window').width - 30,\n      height: 220,\n      chartConfig: {\n        backgroundColor: '#e26a00',\n        backgroundGradientFrom: '#fb8c00',\n        backgroundGradientTo: '#ffa726',\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return `rgba(255, 255, 255, ${opacity})`;\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return `rgba(255, 255, 255, ${opacity})`;\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: '6',\n          strokeWidth: '2',\n          stroke: '#ffa726'\n        }\n      },\n      accessor: 'population',\n      backgroundColor: 'transparent',\n      paddingLeft: '10',\n      center: [10, 10],\n      absolute: true\n    }), _jsx(Animated.View, {\n      style: {\n        height: slideAnim,\n        padding: 10,\n        backgroundColor: '#ffa726',\n        borderRadius: 10,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxs(Text, {\n        style: {\n          color: 'white',\n          fontSize: 16\n        },\n        children: [\"Most of your customers are from \", result.maxName, \", you should market more there.\"]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["PieChart","Animated","Dimensions","Text","React","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MyPieChart","_ref","transactionCountryCount","slideAnim","Value","current","spring","toValue","tension","friction","useNativeDriver","start","transformToPieChartData","map","buyer","name","countryOfOrigin","population","transactionCount","color","getColorForCountry","legendFontColor","legendFontSize","country","colorMap","data_pie","result","_toConsumableArray","reduce","acc","curr","index","maxValue","maxName","Number","MIN_SAFE_INTEGER","children","data","width","get","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","arguments","length","undefined","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","accessor","paddingLeft","center","absolute","View","padding","alignItems","justifyContent","fontSize"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/components/Partner/PieChart.js"],"sourcesContent":["import {PieChart} from \"react-native-chart-kit\";\nimport {Animated, Dimensions, Text} from \"react-native\";\nimport React, {useEffect, useRef} from \"react\";\n\nexport const MyPieChart = ({transactionCountryCount}) => {\n\n    const slideAnim = useRef(new Animated.Value(0)).current;  // Initial position off-screen\n    useEffect(() => {\n        Animated.spring(slideAnim, {\n            toValue: 70,\n            tension: 5,\n            friction: 3,\n            useNativeDriver: false\n        }).start();\n    }, []);\n\n\n    function transformToPieChartData() {\n        return transactionCountryCount.map(buyer => ({\n            name: buyer.countryOfOrigin,\n            population: buyer.transactionCount,\n            color: getColorForCountry(buyer.countryOfOrigin), // function to get color based on country\n            legendFontColor: '#7F7F7F',\n            legendFontSize: 15,\n        }));\n    }\n\n\n    function getColorForCountry(country) {\n        // You can have a predefined map of colors or generate colors dynamically.\n        const colorMap = {\n            'SINGAPORE': 'rgba(131, 167, 234, 1)',\n            'MALAYSIA': '#F00',\n            // ... other countries and colors\n        };\n\n        return colorMap[country] || '#000'; // Default color if country is not in map\n    }\n\n    const data_pie = transformToPieChartData()\n\n\n    const result = [...data_pie].reduce((acc, curr, index) => {\n        if (curr.population > acc.maxValue) {\n            return { maxValue: curr.population, maxName: curr.name };\n        } else {\n            return acc;\n        }\n    }, { maxValue: Number.MIN_SAFE_INTEGER, maxName: \"\" });\n\n    return (\n        <>\n            <PieChart\n                data={data_pie}\n                width={Dimensions.get('window').width - 30}\n                height={220}\n                chartConfig={{\n                    backgroundColor: '#e26a00',\n                    backgroundGradientFrom: '#fb8c00',\n                    backgroundGradientTo: '#ffa726',\n                    decimalPlaces: 2,  // optional, defaults to 2dp\n                    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                    style: {\n                        borderRadius: 16\n                    },\n                    propsForDots: {\n                        r: '6',\n                        strokeWidth: '2',\n                        stroke: '#ffa726'\n                    }\n                }}\n                accessor={'population'}\n                backgroundColor={'transparent'}\n                paddingLeft={'10'}\n                center={[10, 10]}\n                absolute\n            />\n\n            <Animated.View style={{\n                height: slideAnim,\n                padding: 10,\n                backgroundColor: '#ffa726',\n                borderRadius: 10,\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n                <Text style={{ color: 'white', fontSize: 16 }}>\n                   Most of your customers are from {result.maxName}, you should market more there.\n                </Text>\n            </Animated.View>\n        </>\n    );\n};\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,wBAAwB;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEhD,OAAOC,KAAK,IAAGC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAkC;EAAA,IAA7BC,uBAAuB,GAAAD,IAAA,CAAvBC,uBAAuB;EAE/C,IAAMC,SAAS,GAAGV,MAAM,CAAC,IAAIL,QAAQ,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACvDb,SAAS,CAAC,YAAM;IACZJ,QAAQ,CAACkB,MAAM,CAACH,SAAS,EAAE;MACvBI,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,CAAC;MACXC,eAAe,EAAE;IACrB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,SAASC,uBAAuBA,CAAA,EAAG;IAC/B,OAAOV,uBAAuB,CAACW,GAAG,CAAC,UAAAC,KAAK;MAAA,OAAK;QACzCC,IAAI,EAAED,KAAK,CAACE,eAAe;QAC3BC,UAAU,EAAEH,KAAK,CAACI,gBAAgB;QAClCC,KAAK,EAAEC,kBAAkB,CAACN,KAAK,CAACE,eAAe,CAAC;QAChDK,eAAe,EAAE,SAAS;QAC1BC,cAAc,EAAE;MACpB,CAAC;IAAA,CAAC,CAAC;EACP;EAGA,SAASF,kBAAkBA,CAACG,OAAO,EAAE;IAEjC,IAAMC,QAAQ,GAAG;MACb,WAAW,EAAE,wBAAwB;MACrC,UAAU,EAAE;IAEhB,CAAC;IAED,OAAOA,QAAQ,CAACD,OAAO,CAAC,IAAI,MAAM;EACtC;EAEA,IAAME,QAAQ,GAAGb,uBAAuB,CAAC,CAAC;EAG1C,IAAMc,MAAM,GAAGC,kBAAA,CAAIF,QAAQ,EAAEG,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAK;IACtD,IAAID,IAAI,CAACb,UAAU,GAAGY,GAAG,CAACG,QAAQ,EAAE;MAChC,OAAO;QAAEA,QAAQ,EAAEF,IAAI,CAACb,UAAU;QAAEgB,OAAO,EAAEH,IAAI,CAACf;MAAK,CAAC;IAC5D,CAAC,MAAM;MACH,OAAOc,GAAG;IACd;EACJ,CAAC,EAAE;IAAEG,QAAQ,EAAEE,MAAM,CAACC,gBAAgB;IAAEF,OAAO,EAAE;EAAG,CAAC,CAAC;EAEtD,OACIpC,KAAA,CAAAE,SAAA;IAAAqC,QAAA,GACIzC,IAAA,CAACR,QAAQ;MACLkD,IAAI,EAAEZ,QAAS;MACfa,KAAK,EAAEjD,UAAU,CAACkD,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK,GAAG,EAAG;MAC3CE,MAAM,EAAE,GAAI;MACZC,WAAW,EAAE;QACTC,eAAe,EAAE,SAAS;QAC1BC,sBAAsB,EAAE,SAAS;QACjCC,oBAAoB,EAAE,SAAS;QAC/BC,aAAa,EAAE,CAAC;QAChB1B,KAAK,EAAE,SAAAA,MAAA;UAAA,IAAC2B,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;UAAA,OAAM,uBAAsBD,OAAQ,GAAE;QAAA;QACzDI,UAAU,EAAE,SAAAA,WAAA;UAAA,IAACJ,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;UAAA,OAAM,uBAAsBD,OAAQ,GAAE;QAAA;QAC9DK,KAAK,EAAE;UACHC,YAAY,EAAE;QAClB,CAAC;QACDC,YAAY,EAAE;UACVC,CAAC,EAAE,GAAG;UACNC,WAAW,EAAE,GAAG;UAChBC,MAAM,EAAE;QACZ;MACJ,CAAE;MACFC,QAAQ,EAAE,YAAa;MACvBf,eAAe,EAAE,aAAc;MAC/BgB,WAAW,EAAE,IAAK;MAClBC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MACjBC,QAAQ;IAAA,CACX,CAAC,EAEFjE,IAAA,CAACP,QAAQ,CAACyE,IAAI;MAACV,KAAK,EAAE;QAClBX,MAAM,EAAErC,SAAS;QACjB2D,OAAO,EAAE,EAAE;QACXpB,eAAe,EAAE,SAAS;QAC1BU,YAAY,EAAE,EAAE;QAChBW,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MACpB,CAAE;MAAA5B,QAAA,EACEvC,KAAA,CAACP,IAAI;QAAC6D,KAAK,EAAE;UAAEhC,KAAK,EAAE,OAAO;UAAE8C,QAAQ,EAAE;QAAG,CAAE;QAAA7B,QAAA,GAAC,kCACZ,EAACV,MAAM,CAACO,OAAO,EAAC,iCACnD;MAAA,CAAM;IAAC,CACI,CAAC;EAAA,CAClB,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}