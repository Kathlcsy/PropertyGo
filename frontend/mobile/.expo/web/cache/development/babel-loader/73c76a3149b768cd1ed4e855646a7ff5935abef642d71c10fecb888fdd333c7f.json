{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { openBrowserAsync } from \"expo-web-browser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FileSaver;\nif (__DEV__ && Platform.OS === \"web\") {\n  FileSaver = require(\"file-saver\").default;\n}\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar responsiveWidth = width * 0.8;\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    descriptions = _useState4[0],\n    setDescriptions = _useState4[1];\n  var _useState5 = useState(200),\n    _useState6 = _slicedToArray(_useState5, 2),\n    length = _useState6[0],\n    setLength = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    prevDocuments = _useState8[0],\n    setPrevDocuments = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    searchQuery = _useState10[0],\n    setSearchQuery = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedFolder = _useState12[0],\n    setSelectedFolder = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    folders = _useState14[0],\n    setFolders = _useState14[1];\n  var _useState15 = useState({}),\n    _useState16 = _slicedToArray(_useState15, 2),\n    folderSelection = _useState16[0],\n    setFoldersSelection = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    newFolderModalOpen = _useState18[0],\n    setNewFolderModalOpen = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newFolderName = _useState20[0],\n    setNewFolderName = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    transactions = _useState22[0],\n    setTransactions = _useState22[1];\n  var _useState23 = useState({}),\n    _useState24 = _slicedToArray(_useState23, 2),\n    documentTransactions = _useState24[0],\n    setDocumentTransactions = _useState24[1];\n  var _useState25 = useState(1),\n    _useState26 = _slicedToArray(_useState25, 2),\n    defaultTransactionId = _useState26[0],\n    setDefaultTransactionId = _useState26[1];\n  var _useState27 = useState(1),\n    _useState28 = _slicedToArray(_useState27, 2),\n    defaultFolderId = _useState28[0],\n    setDefaultFolderId = _useState28[1];\n  var _useState29 = useState(prevDocuments),\n    _useState30 = _slicedToArray(_useState29, 2),\n    filteredDocs = _useState30[0],\n    setFilteredDocs = _useState30[1];\n  var fetchDocuments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://10.249.191.117:3000/user/documents/list\");\n        var documents = yield response.json();\n        setPrevDocuments(documents);\n        setFilteredDocs(documents);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchDocuments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchFolders = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var userId = 4;\n      try {\n        var response = yield fetch(`http://10.249.191.117:3000/user/folders/${userId}}`);\n        var results = yield response.json();\n        var _folders = results.folders;\n        console.log(_folders);\n        setFolders(_folders);\n        setDefaultFolderId(_folders[0].folderId);\n        setSelectedFolder(_folders[0].folderId);\n        console.log(defaultFolderId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchFolders() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchTransactions = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://10.249.191.117:3000/user/transactions/1\");\n        var results = yield response.json();\n        var _transactions = results.transactions;\n        setTransactions(_transactions);\n        setDefaultTransactionId(_transactions[0].transactionId);\n        console.log(defaultTransactionId);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchTransactions() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var downloadPDF = function () {\n    var _ref5 = _asyncToGenerator(function* (document) {\n      if (FileSaver) {\n        console.log(document.document.data);\n        var byteArray = new Uint8Array(document.document.data);\n        var blob = new Blob([byteArray], {\n          type: \"application/pdf\"\n        });\n        console.log(blob);\n        var url = URL.createObjectURL(blob);\n        openBrowserAsync(url);\n        FileSaver.saveAs(blob, document.name);\n        URL.revokeObjectURL(url);\n      } else {\n        var _yield$FileSystem$wri = yield FileSystem.writeAsStringAsync(FileSystem.documentDirectory + document.name, document.data, {\n            encoding: FileSystem.EncodingType.Base64\n          }),\n          _uri = _yield$FileSystem$wri.uri;\n      }\n      if (uri) {\n        alert(\"Downloaded to \" + uri);\n      } else {\n        alert(\"Failed to download PDF\");\n      }\n    });\n    return function downloadPDF(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDocuments();\n  }, []);\n  useEffect(function () {\n    fetchFolders();\n  }, []);\n  useEffect(function () {\n    fetchTransactions();\n  }, []);\n  useEffect(function () {\n    var docs = prevDocuments.filter(function (doc) {\n      console.log(\"prevDocuments:\", prevDocuments);\n      console.log(\"selectedFolder:\", selectedFolder);\n      console.log(\"searchQuery:\", searchQuery);\n      var matchesFolder = selectedFolder ? doc.folderId.toString() === selectedFolder.toString() : true;\n      var matchesSearch = doc.title.toLowerCase().includes((searchQuery || \"\").toLowerCase());\n      return matchesFolder && matchesSearch;\n    });\n    setFilteredDocs(docs);\n  }, [searchQuery, selectedFolder]);\n  useEffect(function () {\n    console.log(transactions);\n    setTransactions(transactions);\n  }, [transactions]);\n  useEffect(function () {\n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments]);\n  useEffect(function () {\n    console.log(folders);\n    setFolders(folders);\n  }, [folders]);\n  useEffect(function () {\n    console.log(filteredDocs);\n    setFilteredDocs(filteredDocs);\n  }, [filteredDocs]);\n  var createNewFolder = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var title = newFolderName;\n      var userId = 4;\n      try {\n        var response = yield fetch(`http://10.249.191.1173000/user/folders/create/${userId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            folderTitle: title\n          })\n        });\n        if (response.ok) {\n          console.log(\"Folder created successfully\");\n        } else {\n          throw \"Error creating folder\";\n        }\n        setNewFolderModalOpen(false);\n        fetchFolders();\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function createNewFolder() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var selectDocuments = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: \"application/pdf\"\n        });\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets;\n          setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n        }\n      } catch (error) {\n        console.log(\"Error selecting documents:\", error);\n      }\n    });\n    return function selectDocuments() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var removeDocument = function removeDocument(document) {\n    var newSelectedDocuments = selectedDocuments.filter(function (doc) {\n      return doc.name !== document.name;\n    });\n    setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n  };\n  var removeDocumentFromServer = function () {\n    var _ref8 = _asyncToGenerator(function* (document) {\n      try {\n        var url = `http://10.249.191.117:3000/user/documents/${document.id}`;\n        var response = yield fetch(url, {\n          method: \"DELETE\"\n        });\n        if (response.ok) {\n          console.log(\"Document deleted successfully\");\n          fetchDocuments();\n        } else {\n          throw \"Error deleting document\";\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function removeDocumentFromServer(_x2) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var downloadDocumentFromServer = function downloadDocumentFromServer(document) {\n    downloadPDF(document);\n  };\n  var getFolderTitle = function getFolderTitle(folderId) {\n    var foundFolder = folders.find(function (folder) {\n      return folder.folderId === folderId;\n    });\n    return foundFolder ? foundFolder.title : \"\";\n  };\n  var handleUpload = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var fileuri = document.uri;\n          var filetype = \"application/pdf\";\n          var filename = document.name;\n          var transactionId = documentTransactions[document.name] !== undefined ? documentTransactions[document.name] : defaultTransactionId;\n          var userId = 1;\n          var folderId = folderSelection[document.name] !== undefined ? folderSelection[document.name] : defaultFolderId;\n          console.log(documentTransactions);\n          console.log(folderSelection);\n          var file = {\n            uri: fileuri,\n            type: filetype,\n            name: filename\n          };\n          var base64Data = file.uri.split(\",\")[1];\n          var base64String = window.atob(base64Data);\n          var bytes = new Uint8Array(base64String.length);\n          for (var i = 0; i < base64String.length; i++) {\n            bytes[i] = base64String.charCodeAt(i);\n          }\n          var fileBlob = new Blob([bytes], {\n            type: file.type\n          });\n          fileData.append(\"documents\", fileBlob, filename);\n          fileData.append(\"description\", descriptions);\n          fileData.append(\"transactionId\", transactionId);\n          fileData.append(\"folderId\", folderId);\n          fileData.append(\"userId\", userId);\n          var obj = Object.fromEntries(fileData.entries());\n          console.log(obj);\n        });\n        var response = yield fetch(\"http://10.249.191.117:3000/user/documents/upload\", {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n          fetchDocuments();\n        } else {\n          throw new Error(\"File upload failed\");\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function handleUpload() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var renderDocumentItem = function renderDocumentItem(_ref10) {\n    var item = _ref10.item;\n    return _jsxs(ScrollView, {\n      contentContainerStyle: styles.documentItem,\n      horizontal: true,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Remove\",\n          onPress: function onPress() {\n            return removeDocument(item);\n          }\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Transaction ID: \"\n        }), _jsx(Picker, {\n          selectedValue: documentTransactions[item.name],\n          onValueChange: function onValueChange(transaction) {\n            setDocumentTransactions(_objectSpread(_objectSpread({}, documentTransactions), {}, _defineProperty({}, item.name, transaction)));\n          },\n          children: transactions.map(function (transaction) {\n            return _jsx(Picker.Item, {\n              label: transaction.transactionId,\n              value: transaction.transactionId\n            }, transaction.transactionId);\n          })\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Folder for Document: \"\n        }), _jsx(Picker, {\n          selectedValue: folderSelection[item.name],\n          onValueChange: function onValueChange(folder) {\n            setFoldersSelection(_objectSpread(_objectSpread({}, folderSelection), {}, _defineProperty({}, item.name, folder)));\n          },\n          children: folders.map(function (folder) {\n            return _jsx(Picker.Item, {\n              label: folder.title,\n              value: folder.folderId\n            }, folder.folderId);\n          })\n        })]\n      })]\n    });\n  };\n  var renderDocumentListItem = function renderDocumentListItem(_ref11) {\n    var item = _ref11.item;\n    return _jsxs(ScrollView, {\n      contentContainerStyle: styles.documentItem,\n      horizontal: true,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.title\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Description: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: item.description\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Transaction ID: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: item.transactionId\n        }), _jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Folder: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: getFolderTitle(item.folderId)\n        })]\n      }), _jsx(Text, {\n        children: \"\\xA0 \\xA0\"\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Remove\",\n          onPress: function onPress() {\n            return removeDocumentFromServer(item);\n          }\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Download\",\n          onPress: function onPress() {\n            return downloadDocumentFromServer(item);\n          }\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of selected Documents:\"\n      }), _jsx(FlatList, {\n        ListEmptyComponent: function ListEmptyComponent() {\n          return _jsxs(Text, {\n            style: styles.emptyListText,\n            children: [\" \", \"Your selected documents would appear here.\"]\n          });\n        },\n        data: selectedDocuments,\n        keyExtractor: function keyExtractor(item, index) {\n          return item.id ? item.id.toString() : index.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    }), _jsxs(View, {\n      style: styles.descriptionContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"Write your description for the files selected:\"\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Add a description\",\n        value: descriptions,\n        maxLength: 200,\n        onChangeText: function onChangeText(text) {\n          setDescriptions(text);\n          setLength(200 - text.length);\n        }\n      }), _jsxs(Text, {\n        children: [\" Remaining: \", length]\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Select Documents\",\n        onPress: selectDocuments\n      }), _jsx(Text, {\n        children: \" \\xA0\\xA0\\xA0 \"\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Upload Documents\",\n        onPress: handleUpload\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        style: {\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginVertical: 10\n        }\n      }), _jsx(Text, {\n        style: styles.detailText,\n        children: \"Previously Uploaded Documents: \"\n      }), _jsxs(View, {\n        style: styles.documentListContainer,\n        children: [_jsx(TextInput, {\n          style: styles.searchBar,\n          placeholder: \"Search documents...\",\n          value: searchQuery,\n          onChangeText: setSearchQuery\n        }), _jsx(Text, {\n          children: \" Select your Folder Below: \"\n        }), _jsx(Picker, {\n          selectedValue: selectedFolder,\n          onValueChange: setSelectedFolder,\n          children: folders.map(function (folder) {\n            return _jsx(Picker.Item, {\n              label: folder.title,\n              value: folder.folderId\n            }, folder.folderId);\n          })\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Button, {\n          title: \"Create New Folder\",\n          onPress: function onPress() {\n            return setNewFolderModalOpen(true);\n          }\n        }), newFolderModalOpen && _jsx(Modal, {\n          animationType: \"fade\",\n          transparent: true,\n          visible: newFolderModalOpen,\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(TextInput, {\n                placeholder: \"New folder name\",\n                value: newFolderName,\n                onChangeText: setNewFolderName,\n                style: styles.searchBar\n              }), _jsx(Text, {\n                children: \"\\xA0\"\n              }), _jsx(Button, {\n                title: \"Create Folder\",\n                onPress: createNewFolder\n              }), _jsx(Text, {\n                children: \"\\xA0\"\n              }), _jsx(Button, {\n                title: \"Cancel\",\n                onPress: function onPress() {\n                  return setNewFolderModalOpen(false);\n                }\n              })]\n            })\n          })\n        }), _jsx(FlatList, {\n          data: filteredDocs,\n          renderItem: renderDocumentListItem,\n          ListEmptyComponent: function ListEmptyComponent() {\n            return _jsxs(Text, {\n              style: styles.emptyListText,\n              children: [\" \", \"Your previous documents would appear here.\"]\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item.id ? item.id.toString() : index.toString();\n          }\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: responsiveWidth * 0.02,\n    backgroundColor: \"#fff\",\n    overflow: \"scroll\"\n  },\n  headerText: {\n    fontSize: responsiveWidth * 0.06,\n    marginBottom: responsiveWidth * 0.02,\n    textAlign: \"center\"\n  },\n  searchBar: {\n    height: responsiveWidth * 0.1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: responsiveWidth * 0.02,\n    paddingHorizontal: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: responsiveWidth * 0.04\n  },\n  descriptionContainer: {\n    marginVertical: responsiveWidth * 0.04\n  },\n  descriptionInput: {\n    height: responsiveWidth * 0.1,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.02\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: responsiveWidth * 0.04,\n    borderRadius: responsiveWidth * 0.02\n  },\n  detailText: {\n    fontSize: responsiveWidth * 0.04,\n    marginBottom: responsiveWidth * 0.02,\n    fontWeight: \"bold\"\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.03,\n    paddingTop: responsiveWidth * 0.035\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: responsiveWidth * 0.03,\n    marginBottom: responsiveWidth * 0.02,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: responsiveWidth * 0.02,\n    width: \"100%\"\n  },\n  documentText: {\n    fontSize: responsiveWidth * 0.035,\n    color: \"#333\"\n  },\n  descriptionText: {\n    fontSize: responsiveWidth * 0.035,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\"\n  },\n  descriptiontContainer: {\n    alignContent: \"top-left\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: responsiveWidth * 0.025,\n    padding: responsiveWidth * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  picker: {\n    fontSize: responsiveWidth * 0.03,\n    paddingVertical: responsiveWidth * 0.03,\n    paddingHorizontal: responsiveWidth * 0.025,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: responsiveWidth * 0.01,\n    backgroundColor: \"white\",\n    color: \"black\"\n  }\n});\nexport default UploadScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Button","FlatList","TextInput","TouchableOpacity","Platform","Modal","ScrollView","Dimensions","Picker","DocumentPicker","FileSystem","openBrowserAsync","jsx","_jsx","jsxs","_jsxs","FileSaver","__DEV__","OS","require","default","_Dimensions$get","get","width","height","responsiveWidth","UploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","_useState3","_useState4","descriptions","setDescriptions","_useState5","_useState6","length","setLength","_useState7","_useState8","prevDocuments","setPrevDocuments","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","selectedFolder","setSelectedFolder","_useState13","_useState14","folders","setFolders","_useState15","_useState16","folderSelection","setFoldersSelection","_useState17","_useState18","newFolderModalOpen","setNewFolderModalOpen","_useState19","_useState20","newFolderName","setNewFolderName","_useState21","_useState22","transactions","setTransactions","_useState23","_useState24","documentTransactions","setDocumentTransactions","_useState25","_useState26","defaultTransactionId","setDefaultTransactionId","_useState27","_useState28","defaultFolderId","setDefaultFolderId","_useState29","_useState30","filteredDocs","setFilteredDocs","fetchDocuments","_ref2","_asyncToGenerator","response","fetch","documents","json","error","console","apply","arguments","fetchFolders","_ref3","userId","results","log","folderId","fetchTransactions","_ref4","transactionId","downloadPDF","_ref5","document","data","byteArray","Uint8Array","blob","Blob","type","url","URL","createObjectURL","saveAs","name","revokeObjectURL","_yield$FileSystem$wri","writeAsStringAsync","documentDirectory","encoding","EncodingType","Base64","uri","alert","_x","docs","filter","doc","matchesFolder","toString","matchesSearch","title","toLowerCase","includes","createNewFolder","_ref6","method","headers","body","JSON","stringify","folderTitle","ok","selectDocuments","_ref7","getDocumentAsync","multiple","canceled","newSelectedDocuments","assets","_toConsumableArray","removeDocument","removeDocumentFromServer","_ref8","id","_x2","downloadDocumentFromServer","getFolderTitle","foundFolder","find","folder","handleUpload","_ref9","fileData","FormData","forEach","fileuri","filetype","filename","undefined","file","base64Data","split","base64String","window","atob","bytes","i","charCodeAt","fileBlob","append","obj","Object","fromEntries","entries","Error","renderDocumentItem","_ref10","item","contentContainerStyle","styles","documentItem","horizontal","children","style","documentText","downloadButton","onPress","descriptionText","selectedValue","onValueChange","transaction","_objectSpread","_defineProperty","map","Item","label","value","renderDocumentListItem","_ref11","description","container","headerText","documentListContainer","detailText","ListEmptyComponent","emptyListText","keyExtractor","index","renderItem","descriptionContainer","descriptionInput","placeholder","maxLength","onChangeText","text","buttonContainer","borderBottomColor","borderBottomWidth","marginVertical","searchBar","animationType","transparent","visible","centeredView","modalView","create","flex","padding","backgroundColor","overflow","fontSize","marginBottom","textAlign","borderWidth","borderColor","borderRadius","paddingHorizontal","flexDirection","alignItems","color","fontWeight","paddingTop","justifyContent","fontStyle","descriptiontContainer","alignContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","picker","paddingVertical"],"sources":["/Users/wjahoward/Desktop/NUS/Y3S1/IS4103/PropertyGo/frontend/mobile/screens/sideNavigatorBar/Documents.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  FlatList,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n  Modal,\n  ScrollView,\n  Dimensions,\n} from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { openBrowserAsync } from \"expo-web-browser\";\n\n//Conditional FileSaver import.\nlet FileSaver;\nif (__DEV__ && Platform.OS === \"web\") {\n  FileSaver = require(\"file-saver\").default;\n}\n\n// I know my code is fuuuuuuucked up lol, I am going to be splitting them into smaller components soon so each parts has its own component.\n// This is some omega-level one JS file app XDDDDDDD\n\n// This may need to be responsive if we want auto-UI scaling per window size, but this only applies to Web.\nconst { width, height } = Dimensions.get(\"window\");\nconst responsiveWidth = width * 0.8;\n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]); // Documents to upload\n  const [descriptions, setDescriptions] = useState(\"\"); // Description text\n  const [length, setLength] = useState(200); // Description text length\n  const [prevDocuments, setPrevDocuments] = useState([]); // This is suppose to be the list of documents that you have uploaded previously.\n  const [searchQuery, setSearchQuery] = useState(\"\"); // This is for the search bar.\n  const [selectedFolder, setSelectedFolder] = useState(); // Add state for selected folder\n  const [folders, setFolders] = useState([]); // Add state for folders list\n  const [folderSelection, setFoldersSelection] = useState({}); // Add state for folder selection -> map document to folder\n  const [newFolderModalOpen, setNewFolderModalOpen] = useState(false); // Modal boolean for folder creation\n  const [newFolderName, setNewFolderName] = useState(\"\"); // New folder name\n  const [transactions, setTransactions] = useState([]); // Add state for transactions list\n  const [documentTransactions, setDocumentTransactions] = useState({}); // Document transactions\n  const [defaultTransactionId, setDefaultTransactionId] = useState(1); // Default transaction id\n  const [defaultFolderId, setDefaultFolderId] = useState(1); // Default folder id\n  const [filteredDocs, setFilteredDocs] = useState(prevDocuments); // Filtered documents\n\n  const fetchDocuments = async () => {\n    try {\n      const response = await fetch(\n        \"http://10.249.191.117:3000/user/documents/list\"\n      );\n      const documents = await response.json();\n      setPrevDocuments(documents);\n      setFilteredDocs(documents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Fetch list of folders from API\n  const fetchFolders = async () => {\n    const userId = 4;\n    try {\n      const response = await fetch(\n        `http://10.249.191.117:3000/user/folders/${userId}}`\n      );\n      const results = await response.json();\n      const folders = results.folders;\n      console.log(folders);\n      setFolders(folders);\n      setDefaultFolderId(folders[0].folderId);\n      setSelectedFolder(folders[0].folderId);\n      console.log(defaultFolderId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch(\n        \"http://10.249.191.117:3000/user/transactions/1\"\n      );\n      const results = await response.json();\n      const transactions = results.transactions;\n      setTransactions(transactions);\n      setDefaultTransactionId(transactions[0].transactionId);\n      console.log(defaultTransactionId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const downloadPDF = async (document) => {\n    if (FileSaver) {\n      // Web download logic\n      // Web: convert buffer to blob\n      console.log(document.document.data);\n      // Some how the blob is double writing.\n      // Supposing that document.data.data is in base64 format\n      // Assuming document.data takes the form {type: 'Buffer', data: Array}\n      const byteArray = new Uint8Array(document.document.data);\n      // Create a blob from the typed array\n      const blob = new Blob([byteArray], { type: \"application/pdf\" });\n      console.log(blob);\n      const url = URL.createObjectURL(blob);\n      // Use FileSaver to download\n      openBrowserAsync(url);\n      FileSaver.saveAs(blob, document.name);\n      URL.revokeObjectURL(url);\n    } else {\n      // Native FileSystem logic\n      // Need to make sure it works.\n      const { uri } = await FileSystem.writeAsStringAsync(\n        FileSystem.documentDirectory + document.name,\n        document.data,\n        { encoding: FileSystem.EncodingType.Base64 }\n      );\n    }\n    if (uri) {\n      alert(\"Downloaded to \" + uri);\n    } else {\n      alert(\"Failed to download PDF\");\n    }\n  };\n\n  // Fetch the previous documents from the server.\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  // Call fetchFolders on initial mount\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  // Fetch transactions on mount\n  // Currently dummy user set to 1.\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  useEffect(() => {\n    const docs = prevDocuments.filter((doc) => {\n      console.log(\"prevDocuments:\", prevDocuments);\n      console.log(\"selectedFolder:\", selectedFolder);\n      console.log(\"searchQuery:\", searchQuery);\n      const matchesFolder = selectedFolder\n        ? doc.folderId.toString() === selectedFolder.toString()\n        : true;\n      const matchesSearch = doc.title\n        .toLowerCase()\n        .includes((searchQuery || \"\").toLowerCase());\n      return matchesFolder && matchesSearch;\n    });\n\n    setFilteredDocs(docs);\n  }, [searchQuery, selectedFolder]);\n\n  // Weird hack so that useState works properly.\n  useEffect(() => {\n    console.log(transactions);\n    setTransactions(transactions);\n  }, [transactions]);\n\n  useEffect(() => {\n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments]);\n\n  useEffect(() => {\n    console.log(folders);\n    setFolders(folders);\n  }, [folders]);\n\n  useEffect(() => {\n    console.log(filteredDocs);\n    setFilteredDocs(filteredDocs);\n  }, [filteredDocs]);\n\n  // Function to create new folder\n  const createNewFolder = async () => {\n    // Title of folder\n    const title = newFolderName;\n    const userId = 4;\n    // Call API to create folder\n    try {\n      const response = await fetch(\n        `http://10.249.191.1173000/user/folders/create/${userId}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ folderTitle: title }),\n        }\n      );\n      if (response.ok) {\n        console.log(\"Folder created successfully\");\n      } else {\n        throw \"Error creating folder\";\n      }\n      // Close modal\n      setNewFolderModalOpen(false);\n      // Fetch updated folders list\n      fetchFolders();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // This is suppose to show all the documents that you selected.\n  const selectDocuments = async () => {\n    try {\n      const results = await DocumentPicker.getDocumentAsync({\n        multiple: true,\n        type: \"application/pdf\",\n      });\n\n      // If there is a file that is selected.\n      if (results.canceled === false) {\n        const newSelectedDocuments = results.assets;\n        setSelectedDocuments([...newSelectedDocuments]);\n      }\n    } catch (error) {\n      console.log(\"Error selecting documents:\", error);\n    }\n  };\n\n  // This is suppose to remove a documents from the selected documents list.\n  const removeDocument = (document) => {\n    const newSelectedDocuments = selectedDocuments.filter(\n      (doc) => doc.name !== document.name\n    );\n    setSelectedDocuments([...newSelectedDocuments]);\n  };\n\n  const removeDocumentFromServer = async (document) => {\n    try {\n      const url = `http://10.249.191.117:3000/user/documents/${document.id}`;\n      const response = await fetch(url, {\n        method: \"DELETE\",\n      });\n      if (response.ok) {\n        console.log(\"Document deleted successfully\");\n        // redirect or update state\n        fetchDocuments();\n      } else {\n        throw \"Error deleting document\";\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const downloadDocumentFromServer = (document) => {\n    downloadPDF(document);\n  };\n  const getFolderTitle = (folderId) => {\n    const foundFolder = folders.find((folder) => folder.folderId === folderId);\n    return foundFolder ? foundFolder.title : \"\";\n  };\n\n  // This then uploads the documents you selected.\n  const handleUpload = async () => {\n    try {\n      //Begin logic to send data to API\n      const fileData = new FormData();\n      // Append each selected document to the FormData object\n      selectedDocuments.forEach((document) => {\n        const fileuri = document.uri;\n        const filetype = \"application/pdf\";\n        const filename = document.name;\n        const transactionId =\n          documentTransactions[document.name] !== undefined\n            ? documentTransactions[document.name]\n            : defaultTransactionId;\n        const userId = 1;\n        const folderId =\n          folderSelection[document.name] !== undefined\n            ? folderSelection[document.name]\n            : defaultFolderId;\n        console.log(documentTransactions);\n        console.log(folderSelection);\n\n        // Need to add in more details here.\n        // User = 4, Transaction = 1, Folder = Choose.\n        const file = {\n          uri: fileuri,\n          type: filetype,\n          name: filename,\n        };\n\n        // Extract the base64-encoded data from the URI\n        const base64Data = file.uri.split(\",\")[1];\n\n        // Decode the base64 string into a Uint8Array\n        const base64String = window.atob(base64Data);\n        const bytes = new Uint8Array(base64String.length);\n        for (let i = 0; i < base64String.length; i++) {\n          bytes[i] = base64String.charCodeAt(i);\n        }\n\n        // Create a Blob object from the decoded data\n        const fileBlob = new Blob([bytes], { type: file.type });\n        // console.log(fileBlob);\n        // console.log(descriptions);\n        // console.log(fileData.get(\"description\"));\n        // console.log(...selectedDocuments);\n        fileData.append(\"documents\", fileBlob, filename);\n        fileData.append(\"description\", descriptions);\n        fileData.append(\"transactionId\", transactionId);\n        fileData.append(\"folderId\", folderId);\n        fileData.append(\"userId\", userId);\n        // Convert to regular JS object\n        const obj = Object.fromEntries(fileData.entries());\n        // Log object\n        console.log(obj);\n      });\n\n      // Send the data to the API\n      const response = await fetch(\n        \"http://10.249.191.117:3000/user/documents/upload\",\n        {\n          method: \"post\",\n          body: fileData,\n        }\n      );\n\n      // Check the response status and log the result\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Upload response:\", data);\n        fetchDocuments();\n      } else {\n        throw new Error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.log(\"Error upload:\", error);\n    }\n  };\n\n  // This is for the Select Documents\n  // Probably going to add a Partner Application Box as well.\n  const renderDocumentItem = ({ item }) => (\n    <ScrollView contentContainerStyle={styles.documentItem} horizontal={true}>\n      <Text style={styles.documentText}>{item.name}</Text>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Button\n          style={styles.downloadButton}\n          title=\"Remove\"\n          onPress={() => removeDocument(item)}\n        />\n        <Text>&nbsp;</Text>\n        <Text style={styles.descriptionText}>Transaction ID: </Text>\n        <Picker\n          selectedValue={documentTransactions[item.name]}\n          onValueChange={(transaction) => {\n            setDocumentTransactions({\n              ...documentTransactions,\n              [item.name]: transaction,\n            });\n          }}\n        >\n          {transactions.map((transaction) => (\n            <Picker.Item\n              label={transaction.transactionId}\n              value={transaction.transactionId}\n              key={transaction.transactionId}\n            />\n          ))}\n        </Picker>\n        <Text>&nbsp;</Text>\n        <Text style={styles.descriptionText}>Folder for Document: </Text>\n        <Picker\n          selectedValue={folderSelection[item.name]}\n          onValueChange={(folder) => {\n            setFoldersSelection({\n              ...folderSelection,\n              [item.name]: folder,\n            });\n          }}\n        >\n          {folders.map((folder) => (\n            <Picker.Item\n              label={folder.title}\n              value={folder.folderId}\n              key={folder.folderId}\n            />\n          ))}\n        </Picker>\n      </View>\n    </ScrollView>\n  );\n\n  // This is for the Previously Uploaded Documents\n  const renderDocumentListItem = ({ item }) => (\n    <ScrollView contentContainerStyle={styles.documentItem} horizontal={true}>\n      <Text style={styles.documentText}>{item.title}</Text>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Text style={styles.descriptionText}>Description: </Text>\n        <Text style={styles.documentText}>{item.description}</Text>\n      </View>\n      <View>\n        <Text style={styles.descriptionText}>Transaction ID: </Text>\n        <Text style={styles.documentText}>{item.transactionId}</Text>\n        <Text style={styles.descriptionText}>Folder: </Text>\n        <Text style={styles.documentText}>{getFolderTitle(item.folderId)}</Text>\n      </View>\n      <Text>&nbsp; &nbsp;</Text>\n      <View>\n        <Button\n          style={styles.downloadButton}\n          title=\"Remove\"\n          onPress={() => removeDocumentFromServer(item)}\n        />\n        <Text>&nbsp;</Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Download\"\n          onPress={() => downloadDocumentFromServer(item)}\n        />\n      </View>\n    </ScrollView>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of selected Documents:</Text>\n        <FlatList\n          ListEmptyComponent={() => (\n            <Text style={styles.emptyListText}>\n              {\" \"}\n              Your selected documents would appear here.\n            </Text>\n          )}\n          data={selectedDocuments}\n          keyExtractor={(item, index) =>\n            item.id ? item.id.toString() : index.toString()\n          }\n          renderItem={renderDocumentItem}\n        />\n      </View>\n      <View style={styles.descriptionContainer}>\n        <Text style={styles.detailText}>\n          Write your description for the files selected:\n        </Text>\n        <TextInput\n          style={styles.descriptionInput}\n          placeholder=\"Add a description\"\n          value={descriptions}\n          maxLength={200} // max length of the text\n          onChangeText={(text) => {\n            setDescriptions(text);\n            setLength(200 - text.length);\n          }}\n        />\n        <Text> Remaining: {length}</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.downloadButton}\n          title=\"Select Documents\"\n          onPress={selectDocuments}\n        />\n        <Text> &nbsp;&nbsp;&nbsp; </Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Upload Documents\"\n          onPress={handleUpload}\n        />\n      </View>\n\n      <View>\n        <View\n          style={{\n            borderBottomColor: \"black\",\n            borderBottomWidth: 1,\n            marginVertical: 10,\n          }}\n        />\n\n        <Text style={styles.detailText}>Previously Uploaded Documents: </Text>\n        <View style={styles.documentListContainer}>\n          <TextInput\n            style={styles.searchBar}\n            placeholder=\"Search documents...\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n          <Text> Select your Folder Below: </Text>\n          <Picker\n            selectedValue={selectedFolder}\n            onValueChange={setSelectedFolder}\n          >\n            {folders.map((folder) => (\n              <Picker.Item\n                label={folder.title}\n                value={folder.folderId}\n                key={folder.folderId}\n              />\n            ))}\n          </Picker>\n          <Text>&nbsp;</Text>\n          <Button\n            title=\"Create New Folder\"\n            onPress={() => setNewFolderModalOpen(true)}\n          />\n          {newFolderModalOpen && (\n            <Modal\n              animationType=\"fade\"\n              transparent={true}\n              visible={newFolderModalOpen}\n            >\n              <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                  <TextInput\n                    placeholder=\"New folder name\"\n                    value={newFolderName}\n                    onChangeText={setNewFolderName}\n                    style={styles.searchBar}\n                  />\n                  <Text>&nbsp;</Text>\n                  <Button title=\"Create Folder\" onPress={createNewFolder} />\n                  <Text>&nbsp;</Text>\n                  <Button\n                    title=\"Cancel\"\n                    onPress={() => setNewFolderModalOpen(false)}\n                  />\n                </View>\n              </View>\n            </Modal>\n          )}\n          <FlatList\n            data={filteredDocs}\n            renderItem={renderDocumentListItem}\n            ListEmptyComponent={() => (\n              <Text style={styles.emptyListText}>\n                {\" \"}\n                Your previous documents would appear here.\n              </Text>\n            )}\n            keyExtractor={(item, index) =>\n              item.id ? item.id.toString() : index.toString()\n            }\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: responsiveWidth * 0.02,\n    backgroundColor: \"#fff\",\n    overflow: \"scroll\",\n  },\n\n  headerText: {\n    fontSize: responsiveWidth * 0.06,\n    marginBottom: responsiveWidth * 0.02,\n    textAlign: \"center\",\n  },\n\n  searchBar: {\n    height: responsiveWidth * 0.1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: responsiveWidth * 0.02,\n    paddingHorizontal: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n  },\n\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: responsiveWidth * 0.04,\n  },\n\n  descriptionContainer: {\n    marginVertical: responsiveWidth * 0.04,\n  },\n\n  descriptionInput: {\n    height: responsiveWidth * 0.1,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: responsiveWidth * 0.02,\n    marginVertical: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.02,\n  },\n\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: responsiveWidth * 0.04,\n    borderRadius: responsiveWidth * 0.02,\n  },\n\n  detailText: {\n    fontSize: responsiveWidth * 0.04,\n    marginBottom: responsiveWidth * 0.02,\n    fontWeight: \"bold\",\n  },\n\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: responsiveWidth * 0.02,\n    padding: responsiveWidth * 0.03,\n    paddingTop: responsiveWidth * 0.035,\n  },\n\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: responsiveWidth * 0.03,\n    marginBottom: responsiveWidth * 0.02,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: responsiveWidth * 0.02,\n    width: \"100%\",\n  },\n\n  documentText: {\n    fontSize: responsiveWidth * 0.035,\n    color: \"#333\",\n  },\n\n  descriptionText: {\n    fontSize: responsiveWidth * 0.035,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n  },\n\n  descriptiontContainer: {\n    alignContent: \"top-left\",\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n  },\n\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: responsiveWidth * 0.025,\n    padding: responsiveWidth * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  picker: {\n    fontSize: responsiveWidth * 0.03,\n    paddingVertical: responsiveWidth * 0.03,\n    paddingHorizontal: responsiveWidth * 0.025,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: responsiveWidth * 0.01,\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n});\n\nexport default UploadScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}