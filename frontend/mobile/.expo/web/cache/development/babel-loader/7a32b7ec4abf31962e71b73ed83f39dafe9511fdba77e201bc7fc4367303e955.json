{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Calendar } from 'react-native-calendars';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../AuthContext\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { createSchedule, getViewingAvailabilityByDateAndPropertyId, getViewingAvailabilityByPropertyId, removeViewingAvailability, updateViewingAvailability, getScheduleByDateAndPropertyId, updateSchedule, removeSchedule, getScheduleByUserId } from \"../../utils/scheduleApi\";\nimport { set } from 'date-fns';\nimport ScheduleCard from \"./ScheduleCard\";\nimport AppointmentCard from \"./AppointmentCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SetSchedule = function SetSchedule(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    propertyListingId = _route$params.propertyListingId,\n    userDetails = _route$params.userDetails;\n  var navigation = useNavigation();\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedSchedule = _useState4[0],\n    setSelectedSchedule = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    startTime = _useState6[0],\n    setStartTime = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endTime = _useState8[0],\n    setEndTime = _useState8[1];\n  var userId = user.user.userId;\n  var sellerUserId = userDetails.userId;\n  var _useState9 = useState(new Date()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedDate = _useState10[0],\n    setSelectedDate = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    availability = _useState12[0],\n    setAvailability = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isToBeUpdated = _useState14[0],\n    setIsToBeUpdated = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    viewingAvailabilityId = _useState16[0],\n    setViewingAvailabilityId = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    scheduleId = _useState18[0],\n    setScheduleId = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    firstLoad = _useState20[0],\n    setFirstLoad = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    timeSlots = _useState22[0],\n    setTimeSlots = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    takenTimeSlots = _useState24[0],\n    setTakenTimeSlots = _useState24[1];\n  var _useState25 = useState(new Date()),\n    _useState26 = _slicedToArray(_useState25, 2),\n    currentDate = _useState26[0],\n    setCurrentDate = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    refreshFlatList = _useState28[0],\n    setRefreshFlatList = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    userSlots = _useState30[0],\n    setUserSlots = _useState30[1];\n  var numColumns = 3;\n  useEffect(function () {\n    fetchViewingAvailabilityByDateAndPropertyId();\n    fetchViewingAvailabilityByPropertyId();\n    fetchScheduleData();\n    fetchScheduleByUser();\n  }, [selectedDate]);\n  useEffect(function () {\n    if (firstLoad) {\n      setTimeSlots(generateTimeSlots());\n      console.log(\"timeslots: \", generateTimeSlots());\n    }\n  }, []);\n  var sortedSchedules = _toConsumableArray(userSlots);\n  sortedSchedules.sort(function (a, b) {\n    var dateA = new Date(a.meetupDate);\n    var dateB = new Date(b.meetupDate);\n    if (dateA < dateB) return -1;\n    if (dateA > dateB) return 1;\n    var timeA = a.meetupTime;\n    var timeB = b.meetupTime;\n    if (timeA < timeB) return -1;\n    if (timeA > timeB) return 1;\n    return 0;\n  });\n  var getTodayDate = function getTodayDate() {\n    var options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      timeZone: 'Asia/Singapore'\n    };\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var todayString = today.toLocaleString('en-SG', options);\n    var parts = todayString.split('/');\n    var todayDate;\n    if (parts.length === 3) {\n      var dd = parts[0].padStart(2, '0');\n      var mm = parts[1].padStart(2, '0');\n      var yyyy = parts[2];\n      todayDate = `${yyyy}-${mm}-${dd}`;\n    }\n    return todayDate;\n  };\n  var fetchScheduleByUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$getScheduleByU = yield getScheduleByUserId(userId),\n        success = _yield$getScheduleByU.success,\n        data = _yield$getScheduleByU.data,\n        message = _yield$getScheduleByU.message;\n      if (success) {\n        var _currentDate = new Date();\n        var todayDate = getTodayDate();\n        console.log(\"todayDate! \", todayDate);\n        var filteredSchedules = data.filter(function (schedule) {\n          return _currentDate <= new Date(schedule.meetupDate) && schedule.propertyId === propertyListingId;\n        });\n        setUserSlots(filteredSchedules);\n        console.log(\"fetchScheduleByUser\", data);\n      } else {\n        setUserSlots([]);\n        console.error('Error fetching schedule data for user:', message);\n      }\n    });\n    return function fetchScheduleByUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchScheduleData = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$getScheduleByD = yield getScheduleByDateAndPropertyId(selectedDate, propertyListingId),\n        success = _yield$getScheduleByD.success,\n        data = _yield$getScheduleByD.data,\n        message = _yield$getScheduleByD.message;\n      if (success) {\n        setTakenTimeSlots(data);\n        setIsToBeUpdated(data.some(function (item) {\n          return item.userId === userId;\n        }));\n      } else {\n        console.error('Error fetching schedule data:', message);\n        setTakenTimeSlots([]);\n      }\n    });\n    return function fetchScheduleData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchViewingAvailabilityByDateAndPropertyId = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var _yield$getViewingAvai = yield getViewingAvailabilityByDateAndPropertyId(selectedDate, propertyListingId),\n        success = _yield$getViewingAvai.success,\n        data = _yield$getViewingAvai.data,\n        message = _yield$getViewingAvai.message;\n      if (success) {\n        setIsToBeUpdated(false);\n        setStartTime(convertToDateTime(data[0].startTimeSlot));\n        setEndTime(convertToDateTime(data[0].endTimeSlot));\n        setViewingAvailabilityId(data[0].viewingAvailabilityId);\n      } else {\n        console.error('Error:', message);\n        setStartTime(null);\n        setEndTime(null);\n        setIsToBeUpdated(false);\n      }\n    });\n    return function fetchViewingAvailabilityByDateAndPropertyId() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var convertToDateTime = function convertToDateTime(timeString) {\n    var _timeString$split = timeString.split(':'),\n      _timeString$split2 = _slicedToArray(_timeString$split, 3),\n      hours = _timeString$split2[0],\n      minutes = _timeString$split2[1],\n      seconds = _timeString$split2[2];\n    var formattedDate = new Date();\n    formattedDate.setHours(parseInt(hours, 10));\n    formattedDate.setMinutes(parseInt(minutes, 10));\n    formattedDate.setSeconds(parseInt(seconds, 10));\n    return formattedDate;\n  };\n  var fetchViewingAvailabilityByPropertyId = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var _yield$getViewingAvai2 = yield getViewingAvailabilityByPropertyId(propertyListingId),\n        success = _yield$getViewingAvai2.success,\n        data = _yield$getViewingAvai2.data,\n        message = _yield$getViewingAvai2.message;\n      if (success) {\n        console.log('data: ', data);\n        setAvailability(data);\n      } else {\n        console.error('Error fetchViewingAvailabilityByPropertyId:', message);\n        setAvailability([]);\n      }\n    });\n    return function fetchViewingAvailabilityByPropertyId() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleTimeSlotSelect = function handleTimeSlotSelect(time, scheduleId) {\n    var selectedDateTime = new Date(selectedDate);\n    var _time$split = time.split(' '),\n      _time$split2 = _slicedToArray(_time$split, 2),\n      timeWithoutAmPm = _time$split2[0],\n      period = _time$split2[1];\n    var _timeWithoutAmPm$spli = timeWithoutAmPm.split(':').map(Number),\n      _timeWithoutAmPm$spli2 = _slicedToArray(_timeWithoutAmPm$spli, 2),\n      hours = _timeWithoutAmPm$spli2[0],\n      minutes = _timeWithoutAmPm$spli2[1];\n    var adjustedHours = hours;\n    if (period === 'PM' && hours !== 12) {\n      adjustedHours += 12;\n    } else if (period === 'AM' && hours === 12) {\n      adjustedHours = 0;\n    }\n    selectedDateTime.setHours(adjustedHours);\n    selectedDateTime.setMinutes(minutes);\n    setSelectedTime(time);\n    setSelectedSchedule(selectedDateTime);\n    setScheduleId(scheduleId);\n    setTimeSlots(function (prevTimeSlots) {\n      return prevTimeSlots.map(function (slot) {\n        return slot.time === time ? _objectSpread(_objectSpread({}, slot), {}, {\n          userBooked: true\n        }) : slot;\n      });\n    });\n  };\n  function convertTimeTo12HourFormat(time) {\n    var _time$split3 = time.split(':'),\n      _time$split4 = _slicedToArray(_time$split3, 3),\n      hours = _time$split4[0],\n      minutes = _time$split4[1],\n      seconds = _time$split4[2];\n    var period = 'AM';\n    var formattedHours = parseInt(hours);\n    if (formattedHours >= 12) {\n      period = 'PM';\n      if (formattedHours > 12) {\n        formattedHours -= 12;\n      }\n    }\n    return `${formattedHours}:${minutes} ${period}`;\n  }\n  var generateTimeSlots = function generateTimeSlots() {\n    console.log('generateTimeSlots() selectedDate:', selectedDate);\n    console.log('generateTimeSlots() startTime: ', startTime);\n    console.log('generateTimeSlots() endTime: ', endTime);\n    var timeSlots = [];\n    var userBookedFlag = false;\n    if (startTime && endTime) {\n      var startHour = startTime.getHours();\n      var endHour = endTime.getHours();\n      var _loop = function _loop() {\n        var hour = i % 12 || 12;\n        var ampm = i < 12 ? 'AM' : 'PM';\n        var time = `${hour}:00 ${ampm}`;\n        var isTimeSlotTaken = takenTimeSlots.some(function (takenSlot) {\n          return convertTimeTo12HourFormat(takenSlot.meetupTime) === time;\n        });\n        var userBookedSlot = takenTimeSlots.find(function (takenSlot) {\n          return takenSlot.userId === userId && convertTimeTo12HourFormat(takenSlot.meetupTime) === time;\n        });\n        var scheduleId = userBookedSlot ? userBookedSlot.scheduleId : null;\n        var isSlotDisabled = !userBookedSlot && isTimeSlotTaken;\n        timeSlots.push({\n          id: i.toString(),\n          time: time,\n          isTimeSlotTaken: isTimeSlotTaken,\n          userBooked: !!userBookedSlot,\n          isSlotDisabled: isSlotDisabled,\n          scheduleId: scheduleId\n        });\n        if (!!userBookedSlot) {\n          userBookedFlag = true;\n        }\n      };\n      for (var i = startHour; i <= endHour; i++) {\n        _loop();\n      }\n    }\n    console.log('timeSlots: ', timeSlots, \"for: \", selectedDate);\n    if (firstLoad) {\n      return [{\n        id: 'initial-load',\n        time: 'Select a time slot',\n        isSlotDisabled: true,\n        userBooked: false\n      }];\n    }\n    return timeSlots;\n  };\n  var handleDayPress = function handleDayPress(day) {\n    setFirstLoad(false);\n    setSelectedDate(day.dateString);\n    setSelectedTime(null);\n    setStartTime(null);\n    setEndTime(null);\n    setCurrentDate(new Date(day.dateString));\n  };\n  var formatDate = function formatDate(dateString) {\n    var options = {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  var handleSubmit = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      console.log('scheduleId Here: ', scheduleId);\n      if (!selectedDate || !selectedTime) {\n        Alert.alert('Incomplete Information', 'Please select a date, start time, and end time.');\n        return;\n      }\n      var scheduleData = {\n        meetupDate: selectedDate,\n        meetupTime: selectedSchedule.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        }),\n        userId: userId,\n        sellerId: sellerUserId,\n        propertyId: propertyListingId,\n        ScheduleStatus: \"AWAIT_SELLER_CONFIRMATION\"\n      };\n      var response;\n      if (isToBeUpdated === false) {\n        response = yield createSchedule(scheduleData);\n        if (response.success) {\n          Alert.alert('Success', 'Schedule booked successfully.');\n          setSelectedTime(null);\n          setSelectedDate(selectedDate);\n        } else {\n          Alert.alert('Error', 'Failed to book. Please try again later.');\n        }\n      } else {\n        response = yield updateSchedule(scheduleData, userId, selectedDate);\n        if (response.success) {\n          Alert.alert('Success', 'Schedule updated successfully.');\n          setSelectedTime(null);\n          setSelectedDate(selectedDate);\n        } else {\n          Alert.alert('Error', 'Failed to update. Please try again later.');\n        }\n      }\n      setTimeSlots(generateTimeSlots());\n      setRefreshFlatList(function (prev) {\n        return !prev;\n      });\n      fetchScheduleData();\n      fetchScheduleByUser();\n    });\n    return function handleSubmit() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleRemove = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      console.log('scheduleId: ', scheduleId);\n      if (scheduleId) {\n        var response = yield removeSchedule(scheduleId);\n        if (response.success) {\n          Alert.alert('Success', 'Availability successfully removed.');\n          setSelectedTime(null);\n          setScheduleId(null);\n          setIsToBeUpdated(false);\n        } else {\n          Alert.alert('Error', 'Failed to remove availability. Please try again later.');\n          console.log('Error:', response.message);\n        }\n      } else {\n        Alert.alert('No Availability to Remove', 'There is no availability to remove for the selected date.');\n      }\n      fetchScheduleData();\n      fetchScheduleByUser();\n    });\n    return function handleRemove() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var getMarkedDates = function getMarkedDates() {\n    var markedDates = {};\n    var buyer = {\n      key: 'buyer',\n      color: 'red'\n    };\n    if (availability.length === 0) {\n      markedDates[selectedDate] = {\n        selected: true,\n        selectedColor: 'blue'\n      };\n    }\n    availability.forEach(function (availability) {\n      var date = availability.date;\n      markedDates[date] = {\n        dots: []\n      };\n      markedDates[date] = {\n        selected: true,\n        selectedColor: 'green'\n      };\n      markedDates[selectedDate] = {\n        selected: true,\n        selectedColor: 'blue'\n      };\n    });\n    userSlots.forEach(function (userSlot) {\n      var date = userSlot.meetupDate;\n      if (!markedDates[date]) {\n        markedDates[date] = {\n          dots: []\n        };\n      } else if (!markedDates[date].dots) {\n        markedDates[date].dots = [];\n      }\n      markedDates[date].dots.push(buyer);\n      if (date === selectedDate) {\n        markedDates[date].selected = true;\n        markedDates[date].selectedDotColor = 'blue';\n      }\n    });\n    return markedDates;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollViewContent,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsxs(View, {\n        style: styles.headerContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Ionicons, {\n            name: \"arrow-back\",\n            size: 24,\n            color: \"black\"\n          })\n        }), _jsx(Text, {\n          style: styles.header,\n          children: \"Book Property Viewing\"\n        })]\n      }), _jsx(View, {\n        style: styles.calendarContainer,\n        children: _jsx(Calendar, {\n          onDayPress: handleDayPress,\n          onMonthChange: handleDayPress,\n          markingType: 'multi-dot',\n          minDate: new Date(),\n          style: {\n            borderWidth: 0.5,\n            borderColor: 'gray',\n            height: 360\n          },\n          theme: {\n            backgroundColor: '#ffffff',\n            calendarBackground: '#ffffff',\n            textSectionTitleColor: '#b6c1cd',\n            selectedDayBackgroundColor: '#00adf5',\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: '#00adf5',\n            dayTextColor: '#2d4150',\n            textDisabledColor: '#d9e1e8'\n          },\n          markedDates: getMarkedDates()\n        })\n      }), _jsxs(View, {\n        style: styles.timeSlotsContainer,\n        children: [_jsxs(Text, {\n          style: styles.dateOnContainer,\n          children: [_jsx(Ionicons, {\n            name: \"calendar\",\n            size: 28,\n            color: \"#00adf5\"\n          }), \" \", formatDate(selectedDate)]\n        }), generateTimeSlots().length > 0 ? _jsx(FlatList, {\n          data: generateTimeSlots(),\n          extraData: refreshFlatList,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          numColumns: numColumns,\n          renderItem: function renderItem(_ref8) {\n            var item = _ref8.item;\n            return item.isSlotDisabled ? _jsx(View, {\n              style: [styles.timeSlot, item.isTimeSlotTaken ? {\n                backgroundColor: 'red'\n              } : null],\n              children: _jsx(Text, {\n                style: styles.timeText,\n                children: item.time\n              })\n            }) : _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleTimeSlotSelect(item.time, item.scheduleId);\n              },\n              style: [styles.timeSlot, item.userBooked ? {\n                backgroundColor: 'orange'\n              } : null, selectedTime === item.time ? styles.selectedTimeSlot : null],\n              children: _jsx(Text, {\n                style: styles.timeText,\n                children: item.time\n              })\n            });\n          }\n        }) : _jsx(Text, {\n          style: styles.noAvailabilityText,\n          children: \"Booking is not available on this date.\"\n        })]\n      }), _jsxs(View, {\n        style: styles.bookingContainer,\n        children: [_jsxs(Text, {\n          style: styles.dateOnContainer,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"telescope\",\n            size: 28,\n            color: \"#00adf5\"\n          }), ' ', \"Upcoming Viewing\"]\n        }), sortedSchedules && sortedSchedules.length > 0 ? _jsx(_Fragment, {\n          children: sortedSchedules.map(function (item) {\n            return _jsx(AppointmentCard, {\n              schedule: item,\n              propertyId: item.propertyId,\n              onPress: function onPress() {\n                navigation.navigate('View Appointment Detail', {\n                  userId: item.userId,\n                  propertyId: item.propertyId,\n                  scheduleId: item.scheduleId\n                });\n              }\n            });\n          })\n        }) : _jsx(Text, {\n          style: styles.noAvailabilityText,\n          children: \"No bookings made by the user.\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.removeButton,\n        onPress: handleRemove,\n        children: _jsx(Ionicons, {\n          name: \"trash-outline\",\n          size: 18,\n          color: \"white\"\n        })\n      }), _jsxs(TouchableOpacity, {\n        style: styles.saveChangesButton,\n        onPress: handleSubmit,\n        children: [_jsx(Ionicons, {\n          name: \"save-outline\",\n          size: 18,\n          color: \"white\"\n        }), _jsx(Text, {\n          style: styles.saveChangesButtonText,\n          children: \"Save\"\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16\n  },\n  calendarContainer: {\n    flex: 1,\n    borderRadius: 8,\n    padding: 0,\n    marginBottom: 10\n  },\n  timeSlotsContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 0.2,\n    borderColor: 'gray'\n  },\n  timeSlot: {\n    flex: 1,\n    padding: 8,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 4,\n    marginBottom: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 4,\n    minHeight: 40\n  },\n  selectedTimeSlot: {\n    backgroundColor: 'cyan'\n  },\n  timeText: {\n    fontSize: 16\n  },\n  dateOnContainer: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginLeft: 5\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  header: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginLeft: 10,\n    marginTop: 5\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginRight: 40,\n    marginLeft: 0\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  timePickers: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  backButton: {\n    padding: 10,\n    marginRight: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  removeButton: {\n    backgroundColor: 'red',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: 50,\n    marginLeft: 50\n  },\n  removeButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  noAvailabilityText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  bookingContainer: {\n    flex: 1,\n    marginTop: 10,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 0.2,\n    borderColor: 'gray',\n    marginBottom: 10\n  },\n  bookingItem: {\n    marginTop: 10,\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 10,\n    backgroundColor: 'white'\n  },\n  bookingItemText: {\n    fontSize: 16,\n    marginBottom: 8\n  },\n  bookingItemTextLabel: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold'\n  }\n});\nexport default SetSchedule;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","FlatList","Calendar","Ionicons","MaterialCommunityIcons","useNavigation","AuthContext","DateTimePickerModal","createSchedule","getViewingAvailabilityByDateAndPropertyId","getViewingAvailabilityByPropertyId","removeViewingAvailability","updateViewingAvailability","getScheduleByDateAndPropertyId","updateSchedule","removeSchedule","getScheduleByUserId","set","ScheduleCard","AppointmentCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SetSchedule","_ref","route","_route$params","params","propertyListingId","userDetails","navigation","_useContext","user","_useState","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","selectedSchedule","setSelectedSchedule","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","endTime","setEndTime","userId","sellerUserId","_useState9","Date","_useState10","selectedDate","setSelectedDate","_useState11","_useState12","availability","setAvailability","_useState13","_useState14","isToBeUpdated","setIsToBeUpdated","_useState15","_useState16","viewingAvailabilityId","setViewingAvailabilityId","_useState17","_useState18","scheduleId","setScheduleId","_useState19","_useState20","firstLoad","setFirstLoad","_useState21","_useState22","timeSlots","setTimeSlots","_useState23","_useState24","takenTimeSlots","setTakenTimeSlots","_useState25","_useState26","currentDate","setCurrentDate","_useState27","_useState28","refreshFlatList","setRefreshFlatList","_useState29","_useState30","userSlots","setUserSlots","numColumns","fetchViewingAvailabilityByDateAndPropertyId","fetchViewingAvailabilityByPropertyId","fetchScheduleData","fetchScheduleByUser","generateTimeSlots","console","log","sortedSchedules","_toConsumableArray","sort","a","b","dateA","meetupDate","dateB","timeA","meetupTime","timeB","getTodayDate","options","year","month","day","timeZone","today","setHours","todayString","toLocaleString","parts","split","todayDate","length","dd","padStart","mm","yyyy","_ref2","_asyncToGenerator","_yield$getScheduleByU","success","data","message","filteredSchedules","filter","schedule","propertyId","error","apply","arguments","_ref3","_yield$getScheduleByD","some","item","_ref4","_yield$getViewingAvai","convertToDateTime","startTimeSlot","endTimeSlot","timeString","_timeString$split","_timeString$split2","hours","minutes","seconds","formattedDate","parseInt","setMinutes","setSeconds","_ref5","_yield$getViewingAvai2","handleTimeSlotSelect","time","selectedDateTime","_time$split","_time$split2","timeWithoutAmPm","period","_timeWithoutAmPm$spli","map","Number","_timeWithoutAmPm$spli2","adjustedHours","prevTimeSlots","slot","_objectSpread","userBooked","convertTimeTo12HourFormat","_time$split3","_time$split4","formattedHours","userBookedFlag","startHour","getHours","endHour","_loop","hour","i","ampm","isTimeSlotTaken","takenSlot","userBookedSlot","find","isSlotDisabled","push","id","toString","handleDayPress","dateString","formatDate","toLocaleDateString","undefined","handleSubmit","_ref6","alert","scheduleData","toLocaleTimeString","minute","hour12","sellerId","ScheduleStatus","response","prev","handleRemove","_ref7","getMarkedDates","markedDates","buyer","key","color","selected","selectedColor","forEach","date","dots","userSlot","selectedDotColor","style","styles","container","children","scrollView","contentContainerStyle","scrollViewContent","keyboardShouldPersistTaps","headerContainer","backButton","onPress","goBack","name","size","header","calendarContainer","onDayPress","onMonthChange","markingType","minDate","borderWidth","borderColor","height","theme","backgroundColor","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","timeSlotsContainer","dateOnContainer","extraData","keyExtractor","renderItem","_ref8","timeSlot","timeText","selectedTimeSlot","noAvailabilityText","bookingContainer","navigate","buttonContainer","removeButton","saveChangesButton","saveChangesButtonText","create","flex","padding","borderRadius","marginBottom","alignItems","justifyContent","margin","minHeight","fontSize","fontWeight","marginLeft","flexDirection","marginTop","width","marginRight","timePickers","removeButtonText","textAlign","bookingItem","bookingItemText","bookingItemTextLabel"],"sources":["/Users/limzhongzhi/WebstormProjects/PropertyGo/frontend/mobile/screens/schedule/Schedule.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    TouchableOpacity,\n    Alert,\n    FlatList,\n} from 'react-native';\nimport { Calendar } from 'react-native-calendars';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../../AuthContext';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport {\n    createSchedule,\n    getViewingAvailabilityByDateAndPropertyId,\n    getViewingAvailabilityByPropertyId,\n    removeViewingAvailability,\n    updateViewingAvailability,\n    getScheduleByDateAndPropertyId,\n    updateSchedule,\n    removeSchedule,\n    getScheduleByUserId,\n} from '../../utils/scheduleApi';\nimport { set } from 'date-fns';\nimport ScheduleCard from './ScheduleCard';\nimport AppointmentCard from './AppointmentCard';\n\nconst SetSchedule = ({ route }) => {\n    const { propertyListingId, userDetails } = route.params;\n    const navigation = useNavigation();\n    const { user } = useContext(AuthContext);\n    const [selectedTime, setSelectedTime] = useState(null);\n    const [selectedSchedule, setSelectedSchedule] = useState(null);\n    const [startTime, setStartTime] = useState(null);\n    const [endTime, setEndTime] = useState(null);\n    const userId = user.user.userId;\n    const sellerUserId = userDetails.userId;\n    // Define selected date state\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [availability, setAvailability] = useState([]);\n    const [isToBeUpdated, setIsToBeUpdated] = useState(false);\n    const [viewingAvailabilityId, setViewingAvailabilityId] = useState(null);\n    const [scheduleId, setScheduleId] = useState(null);\n    const [firstLoad, setFirstLoad] = useState(true);\n    const [timeSlots, setTimeSlots] = useState([]);\n    const [takenTimeSlots, setTakenTimeSlots] = useState([]);\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [refreshFlatList, setRefreshFlatList] = useState(false);\n    const [userSlots, setUserSlots] = useState([]);\n\n    const numColumns = 3;\n\n    useEffect(() => {\n        fetchViewingAvailabilityByDateAndPropertyId();\n        fetchViewingAvailabilityByPropertyId();\n        fetchScheduleData();\n        fetchScheduleByUser();\n    }, [selectedDate]);\n\n\n    useEffect(() => {\n        if (firstLoad) {\n            setTimeSlots(generateTimeSlots());\n            console.log(\"timeslots: \", generateTimeSlots())\n        }\n    }, []);\n\n    const sortedSchedules = [...userSlots];\n    sortedSchedules.sort((a, b) => {\n        // Sort by meetup date first\n        const dateA = new Date(a.meetupDate);\n        const dateB = new Date(b.meetupDate);\n        if (dateA < dateB) return -1;\n        if (dateA > dateB) return 1;\n\n        // If meetup dates are the same, sort by time\n        const timeA = a.meetupTime;\n        const timeB = b.meetupTime;\n        if (timeA < timeB) return -1;\n        if (timeA > timeB) return 1;\n\n        return 0;\n    });\n\n    const getTodayDate = () => {\n        const options = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            timeZone: 'Asia/Singapore', // Specify the time zone for Singapore\n        };\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        const todayString = today.toLocaleString('en-SG', options);\n        const parts = todayString.split('/');\n        let todayDate;\n        if (parts.length === 3) {\n            const dd = parts[0].padStart(2, '0');\n            const mm = parts[1].padStart(2, '0');\n            const yyyy = parts[2];\n            todayDate = `${yyyy}-${mm}-${dd}`;\n        }\n        return todayDate;\n    }\n\n    const fetchScheduleByUser = async () => {\n        const { success, data, message } = await getScheduleByUserId(\n            userId\n        );\n\n        if (success) {\n            // const selectedTimeRangeAsNumber = parseInt(selectedTimeRange);\n            const currentDate = new Date();\n            const todayDate = getTodayDate();\n\n            // Calculate the date 7 days from now\n            // const daysLater = new Date(currentDate);\n            // daysLater.setHours(0, 0, 0, 0);\n            // daysLater.setDate(currentDate.getDate() + selectedTimeRangeAsNumber);\n\n            console.log(\"todayDate! \", todayDate);\n            const filteredSchedules = data.filter(schedule => currentDate <= new Date(schedule.meetupDate) && schedule.propertyId === propertyListingId);\n            setUserSlots(filteredSchedules);\n            console.log(\"fetchScheduleByUser\", data)\n        } else {\n            setUserSlots([]);\n            console.error('Error fetching schedule data for user:', message);\n        }\n    };\n\n    const fetchScheduleData = async () => {\n        const { success, data, message } = await getScheduleByDateAndPropertyId(\n            selectedDate,\n            propertyListingId\n        );\n\n        if (success) {\n            setTakenTimeSlots(data);\n            setIsToBeUpdated(data.some(item => item.userId === userId));\n        } else {\n            console.error('Error fetching schedule data:', message);\n            setTakenTimeSlots([]);\n        }\n    };\n\n    const fetchViewingAvailabilityByDateAndPropertyId = async () => {\n        const { success, data, message } = await getViewingAvailabilityByDateAndPropertyId(\n            selectedDate,\n            propertyListingId\n        );\n\n        if (success) {\n            setIsToBeUpdated(false);\n            setStartTime(convertToDateTime(data[0].startTimeSlot));\n            setEndTime(convertToDateTime(data[0].endTimeSlot));\n            setViewingAvailabilityId(data[0].viewingAvailabilityId);\n        } else {\n            console.error('Error:', message);\n            setStartTime(null);\n            setEndTime(null);\n            setIsToBeUpdated(false);\n        }\n    };\n\n    const convertToDateTime = (timeString) => {\n        const [hours, minutes, seconds] = timeString.split(':');\n        const formattedDate = new Date();\n        formattedDate.setHours(parseInt(hours, 10));\n        formattedDate.setMinutes(parseInt(minutes, 10));\n        formattedDate.setSeconds(parseInt(seconds, 10));\n        return formattedDate;\n    };\n\n    const fetchViewingAvailabilityByPropertyId = async () => {\n        const { success, data, message } = await getViewingAvailabilityByPropertyId(\n            propertyListingId\n        );\n\n        if (success) {\n            console.log('data: ', data);\n            setAvailability(data);\n        } else {\n            console.error('Error fetchViewingAvailabilityByPropertyId:', message);\n            setAvailability([]);\n        }\n    };\n\n    // Function to handle time slot selection\n    const handleTimeSlotSelect = (time, scheduleId) => {\n        // Combine the selected date with the parsed time to create a DateTime object\n        const selectedDateTime = new Date(selectedDate);\n        const [timeWithoutAmPm, period] = time.split(' '); // Split time and AM/PM\n        const [hours, minutes] = timeWithoutAmPm.split(':').map(Number);\n\n        // Calculate adjusted hours for PM\n        let adjustedHours = hours;\n        if (period === 'PM' && hours !== 12) {\n            adjustedHours += 12;\n        } else if (period === 'AM' && hours === 12) {\n            adjustedHours = 0; // Midnight (12:00 AM) is represented as 0 in 24-hour format\n        }\n\n        selectedDateTime.setHours(adjustedHours);\n        selectedDateTime.setMinutes(minutes);\n\n        setSelectedTime(time);\n        setSelectedSchedule(selectedDateTime);\n        setScheduleId(scheduleId);\n\n        // Update the timeSlots array with the new userBooked value for the selected time slot\n        setTimeSlots((prevTimeSlots) =>\n            prevTimeSlots.map((slot) =>\n                slot.time === time ? { ...slot, userBooked: true } : slot\n            )\n        );\n    };\n\n    function convertTimeTo12HourFormat(time) {\n        const [hours, minutes, seconds] = time.split(':');\n        let period = 'AM';\n        let formattedHours = parseInt(hours);\n\n        if (formattedHours >= 12) {\n            period = 'PM';\n            if (formattedHours > 12) {\n                formattedHours -= 12;\n            }\n        }\n\n        return `${formattedHours}:${minutes} ${period}`;\n    }\n\n    // Generate hourly time slots between start and end times\n    const generateTimeSlots = () => {\n        console.log('generateTimeSlots() selectedDate:', selectedDate)\n        console.log('generateTimeSlots() startTime: ', startTime)\n        console.log('generateTimeSlots() endTime: ', endTime)\n        const timeSlots = [];\n        let userBookedFlag = false;\n        if (startTime && endTime) {\n            const startHour = startTime.getHours();\n            const endHour = endTime.getHours();\n            for (let i = startHour; i <= endHour; i++) {\n                const hour = i % 12 || 12; // Convert to 12-hour format\n                const ampm = i < 12 ? 'AM' : 'PM';\n                const time = `${hour}:00 ${ampm}`;\n                const isTimeSlotTaken = takenTimeSlots.some(\n                    (takenSlot) => convertTimeTo12HourFormat(takenSlot.meetupTime) === time\n                );\n                const userBookedSlot = takenTimeSlots.find(\n                    (takenSlot) =>\n                        takenSlot.userId === userId &&\n                        convertTimeTo12HourFormat(takenSlot.meetupTime) === time\n                );\n\n                const scheduleId = userBookedSlot ? userBookedSlot.scheduleId : null;\n\n                const isSlotDisabled = !userBookedSlot && isTimeSlotTaken;\n                timeSlots.push({\n                    id: i.toString(),\n                    time,\n                    isTimeSlotTaken,\n                    userBooked: !!userBookedSlot,\n                    isSlotDisabled,\n                    scheduleId, // Store the scheduleId if the slot is taken by a user\n                });\n\n                if (!!userBookedSlot) {\n                    userBookedFlag = true;\n                }\n            }\n            // setUpdateSchedule(userBookedFlag);\n        }\n        console.log('timeSlots: ', timeSlots, \"for: \", selectedDate)\n        if (firstLoad) {\n            // Display a message for the initial load\n            return [\n                {\n                    id: 'initial-load',\n                    time: 'Select a time slot',\n                    isSlotDisabled: true,\n                    userBooked: false,\n                },\n            ];\n        }\n\n        return timeSlots;\n    };\n\n\n    // Function to handle day press in the calendar\n    const handleDayPress = (day) => {\n        setFirstLoad(false);\n        setSelectedDate(day.dateString);\n        setSelectedTime(null); // Clear selected time when a new date is chosen\n        setStartTime(null);\n        setEndTime(null);\n        setCurrentDate(new Date(day.dateString)); // Update the current date\n    };\n\n    const formatDate = (dateString) => {\n        const options = { day: '2-digit', month: 'long', year: 'numeric' };\n        return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n\n    const handleSubmit = async () => {\n\n        console.log('scheduleId Here: ', scheduleId)\n\n        if (!selectedDate || !selectedTime) {\n            // Check if all fields are filled\n            Alert.alert('Incomplete Information', 'Please select a date, start time, and end time.');\n            return;\n        }\n\n        // Create the viewing availability object to be submitted\n        const scheduleData = {\n            meetupDate: selectedDate,\n            meetupTime: selectedSchedule.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false }),\n            userId: userId,\n            sellerId: sellerUserId,\n            propertyId: propertyListingId,\n            ScheduleStatus: \"AWAIT_SELLER_CONFIRMATION\"\n        };\n\n        // Call the API to create or update the viewing availability\n        let response;\n\n        if (isToBeUpdated === false) {\n            response = await createSchedule(scheduleData);\n            if (response.success) {\n                Alert.alert('Success', 'Schedule booked successfully.');\n                setSelectedTime(null);\n                setSelectedDate(selectedDate);\n            } else {\n                Alert.alert('Error', 'Failed to book. Please try again later.');\n            }\n        } else {\n            response = await updateSchedule(scheduleData, userId, selectedDate);\n            if (response.success) {\n                Alert.alert('Success', 'Schedule updated successfully.');\n                setSelectedTime(null);\n                setSelectedDate(selectedDate);\n            } else {\n                Alert.alert('Error', 'Failed to update. Please try again later.');\n            }\n        }\n\n        setTimeSlots(generateTimeSlots());\n        setRefreshFlatList((prev) => !prev);\n        fetchScheduleData();\n        fetchScheduleByUser();\n    };\n\n    const handleRemove = async () => {\n        console.log('scheduleId: ', scheduleId)\n        if (scheduleId) {\n            const response = await removeSchedule(scheduleId);\n            if (response.success) {\n                // Show a success alert\n                Alert.alert('Success', 'Availability successfully removed.');\n\n                // Clear selected time and time range\n                setSelectedTime(null);\n                setScheduleId(null);\n                setIsToBeUpdated(false);\n\n                // Refresh the screen to reflect the new date\n                // setSelectedDate(new Date());\n            } else {\n                Alert.alert('Error', 'Failed to remove availability. Please try again later.');\n                console.log('Error:', response.message);\n            }\n        } else {\n            Alert.alert('No Availability to Remove', 'There is no availability to remove for the selected date.');\n        }\n\n        fetchScheduleData();\n        fetchScheduleByUser();\n    };\n\n    const getMarkedDates = () => {\n        const markedDates = {};\n        const buyer = { key: 'buyer', color: 'red' };\n\n        if (availability.length === 0) {\n            markedDates[selectedDate] = { selected: true, selectedColor: 'blue' };\n        }\n\n        // Loop through the data and mark the dates\n        availability.forEach((availability) => {\n            const date = availability.date; // Get the date from the fetched data\n            markedDates[date] = { dots: [] };\n            // Specify how you want to mark the date\n\n            markedDates[date] = { selected: true, selectedColor: 'green' };\n            markedDates[selectedDate] = { selected: true, selectedColor: 'blue' };\n        });\n\n        userSlots.forEach((userSlot) => {\n            const date = userSlot.meetupDate;\n            if (!markedDates[date]) {\n                markedDates[date] = { dots: [] }; // Create a new entry with an empty dots array\n            } else if (!markedDates[date].dots) {\n                markedDates[date].dots = []; // If dots array doesn't exist, create it\n            }\n            markedDates[date].dots.push(buyer);\n\n            if (date === selectedDate) {\n                markedDates[date].selected = true;\n                markedDates[date].selectedDotColor = 'blue';\n            }\n        });\n\n        return markedDates;\n    };\n\n    return (\n        <View style={styles.container}>\n            <ScrollView\n                style={styles.scrollView}\n                contentContainerStyle={styles.scrollViewContent}\n                keyboardShouldPersistTaps=\"handled\" // Add this prop\n            >\n                <View style={styles.headerContainer}>\n                    {/* Back button */}\n                    <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                    </TouchableOpacity>\n                    <Text style={styles.header}>Book Property Viewing</Text>\n                </View>\n                <View style={styles.calendarContainer}>\n                    <Calendar\n                        onDayPress={handleDayPress}\n                        onMonthChange={handleDayPress}\n                        markingType={'multi-dot'}\n                        minDate={new Date()}\n                        style={{\n                            borderWidth: 0.5,\n                            borderColor: 'gray',\n                            height: 360,\n                        }}\n                        theme={{\n                            backgroundColor: '#ffffff',\n                            calendarBackground: '#ffffff',\n                            textSectionTitleColor: '#b6c1cd',\n                            selectedDayBackgroundColor: '#00adf5',\n                            selectedDayTextColor: '#ffffff',\n                            todayTextColor: '#00adf5',\n                            dayTextColor: '#2d4150',\n                            textDisabledColor: '#d9e1e8',\n                        }}\n                        markedDates={getMarkedDates()}\n                    />\n                </View>\n\n                {/* Time Slots Matrix (Bottom Half) */}\n\n                <View style={styles.timeSlotsContainer}>\n                    <Text style={styles.dateOnContainer}>\n                        <Ionicons name=\"calendar\" size={28} color=\"#00adf5\" />\n                        {\" \"}{formatDate(selectedDate)}\n                    </Text>\n                    {generateTimeSlots().length > 0 ? (\n                        <FlatList\n                            data={generateTimeSlots()}\n                            extraData={refreshFlatList}\n                            keyExtractor={(item) => item.id}\n                            numColumns={numColumns}\n                            renderItem={({ item }) => (\n                                // Conditionally render TouchableOpacity based on isSlotDisabled\n                                item.isSlotDisabled ? (\n                                    <View style={[\n                                        styles.timeSlot,\n                                        item.isTimeSlotTaken ? { backgroundColor: 'red' } : null, // Set the background color to red for taken time slots\n                                    ]}>\n                                        <Text style={styles.timeText}>{item.time}</Text>\n                                    </View>\n                                ) : (\n                                    <TouchableOpacity\n                                        onPress={() => handleTimeSlotSelect(item.time, item.scheduleId)}\n                                        style={[\n                                            styles.timeSlot,\n                                            item.userBooked ? { backgroundColor: 'orange' } : null,\n                                            selectedTime === item.time ? styles.selectedTimeSlot : null,\n                                        ]}\n                                    >\n                                        <Text style={styles.timeText}>{item.time}</Text>\n                                    </TouchableOpacity>\n\n                                )\n                            )}\n                        />\n                    ) : (\n                        <Text style={styles.noAvailabilityText}>Booking is not available on this date.</Text>\n                    )}\n                </View>\n                <View style={styles.bookingContainer}>\n                    <Text style={styles.dateOnContainer}>\n                        <MaterialCommunityIcons\n                            name=\"telescope\"\n                            size={28}\n                            color=\"#00adf5\"\n                        />{' '}\n                        Upcoming Viewing</Text>\n\n                    {/* List of user's bookings */}\n                    {sortedSchedules && sortedSchedules.length > 0 ? (\n                        <>\n                            {sortedSchedules.map((item) => (\n                                <AppointmentCard schedule={item} propertyId={item.propertyId} onPress={() => {\n                                    navigation.navigate('View Appointment Detail', { userId: item.userId, propertyId: item.propertyId, scheduleId: item.scheduleId });\n                                }} />\n                            ))}\n                        </>\n                    ) : (\n                        <Text style={styles.noAvailabilityText}>No bookings made by the user.</Text>\n                    )}\n                </View>\n            </ScrollView>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.removeButton} onPress={handleRemove}>\n                    <Ionicons name=\"trash-outline\" size={18} color=\"white\" />\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.saveChangesButton} onPress={handleSubmit}>\n                    <Ionicons name=\"save-outline\" size={18} color=\"white\" />\n                    <Text style={styles.saveChangesButtonText}>Save</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        padding: 16,\n    },\n    calendarContainer: {\n        flex: 1,\n        borderRadius: 8,\n        padding: 0,\n        marginBottom: 10,\n    },\n    timeSlotsContainer: {\n        flex: 1,\n        backgroundColor: 'white',\n        borderRadius: 8,\n        padding: 16,\n        borderWidth: 0.2,\n        borderColor: 'gray',\n    },\n    timeSlot: {\n        flex: 1,\n        padding: 8,\n        borderWidth: 1,\n        borderColor: 'gray',\n        borderRadius: 4,\n        marginBottom: 8,\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 4,\n        minHeight: 40,\n    },\n    selectedTimeSlot: {\n        backgroundColor: 'cyan',\n    },\n    timeText: {\n        fontSize: 16,\n    },\n    dateOnContainer: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        marginLeft: 5,\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n    },\n    header: {\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginLeft: 10,\n        marginTop: 5,\n    },\n    saveChangesButton: {\n        backgroundColor: 'green',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        width: '60%',\n        marginRight: 40,\n        marginLeft: 0,\n    },\n    saveChangesButtonText: {\n        color: 'white',\n        marginLeft: 10,\n    },\n    timePickers: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    backButton: {\n        padding: 10,\n        marginRight: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 10,\n    },\n    removeButton: {\n        backgroundColor: 'red',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        // alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        width: 50,\n        marginLeft: 50,\n        // flex: 1,\n    },\n    removeButtonText: {\n        color: 'white',\n        marginLeft: 10,\n    },\n    noAvailabilityText: {\n        fontSize: 16,\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    bookingContainer: {\n        flex: 1,\n        marginTop: 10,\n        backgroundColor: 'white',\n        borderRadius: 8,\n        padding: 16,\n        borderWidth: 0.2,\n        borderColor: 'gray',\n        marginBottom: 10,\n    },\n    bookingItem: {\n        marginTop: 10,\n        borderWidth: 1,\n        borderColor: 'lightgray',\n        borderRadius: 8,\n        padding: 16,\n        marginBottom: 10,\n        backgroundColor: 'white',\n    },\n    bookingItemText: {\n        fontSize: 16,\n        marginBottom: 8,\n    },\n    bookingItemTextLabel: {\n        fontSize: 16,\n        marginBottom: 8,\n        fontWeight: 'bold',\n    },\n\n});\n\nexport default SetSchedule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}