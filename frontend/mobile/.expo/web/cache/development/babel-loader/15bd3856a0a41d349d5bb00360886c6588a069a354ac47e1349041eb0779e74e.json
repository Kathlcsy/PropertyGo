{"ast":null,"code":"export var getTimeAgo = function getTimeAgo(timestamp) {\n  var createdAt = new Date(timestamp);\n  var currentDate = new Date();\n  var timeDifference = currentDate - createdAt;\n  var daysAgo = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n  var hoursAgo = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  var minutesAgo = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n  var secondsAgo = Math.floor(timeDifference % (1000 * 60) / 1000);\n  var timeAgoString = \"\";\n  if (daysAgo > 0) {\n    timeAgoString += `${daysAgo} ${daysAgo === 1 ? \"day\" : \"days\"}`;\n  } else if (hoursAgo > 0) {\n    timeAgoString += `${hoursAgo} ${hoursAgo === 1 ? \"hour\" : \"hours\"}`;\n  } else if (minutesAgo > 0) {\n    timeAgoString += `${minutesAgo} ${minutesAgo === 1 ? \"min\" : \"mins\"}`;\n  } else {\n    timeAgoString += `${secondsAgo} ${secondsAgo === 1 ? \"s\" : \"s\"}`;\n  }\n  return timeAgoString.trim() + \" ago\";\n};","map":{"version":3,"names":["getTimeAgo","timestamp","createdAt","Date","currentDate","timeDifference","daysAgo","Math","floor","hoursAgo","minutesAgo","secondsAgo","timeAgoString","trim"],"sources":["C:/Users/Legion/Desktop/FSR - 1/PropertyGo/frontend/mobile/services/CalculateTimeAgo.js"],"sourcesContent":["export const getTimeAgo = (timestamp) => {\r\n    // Convert the timestamp to a Date object\r\n    const createdAt = new Date(timestamp);\r\n  \r\n    // Get the current date and time\r\n    const currentDate = new Date();\r\n  \r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = currentDate - createdAt;\r\n  \r\n    // Calculate the number of days, hours, minutes, and seconds\r\n    const daysAgo = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n    const hoursAgo = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutesAgo = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secondsAgo = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n  \r\n    // Create a string representation of the time ago\r\n    let timeAgoString = \"\";\r\n  \r\n    if (daysAgo > 0) {\r\n      timeAgoString += `${daysAgo} ${daysAgo === 1 ? \"day\" : \"days\"}`;\r\n    } else if (hoursAgo > 0) {\r\n      timeAgoString += `${hoursAgo} ${hoursAgo === 1 ? \"hour\" : \"hours\"}`;\r\n    } else if (minutesAgo > 0) {\r\n      timeAgoString += `${minutesAgo} ${minutesAgo === 1 ? \"min\" : \"mins\"}`;\r\n    } else {\r\n      timeAgoString += `${secondsAgo} ${secondsAgo === 1 ? \"s\" : \"s\"}`;\r\n    }\r\n  \r\n    // Return the time ago string\r\n    return timeAgoString.trim() + \" ago\";\r\n  };\r\n  "],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAIC,SAAS,EAAK;EAErC,IAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAGrC,IAAMG,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;EAG9B,IAAME,cAAc,GAAGD,WAAW,GAAGF,SAAS;EAG9C,IAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAClE,IAAMI,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACxF,IAAMK,UAAU,GAAGH,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EAChF,IAAMM,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;EAGpE,IAAIO,aAAa,GAAG,EAAE;EAEtB,IAAIN,OAAO,GAAG,CAAC,EAAE;IACfM,aAAa,IAAK,GAAEN,OAAQ,IAAGA,OAAO,KAAK,CAAC,GAAG,KAAK,GAAG,MAAO,EAAC;EACjE,CAAC,MAAM,IAAIG,QAAQ,GAAG,CAAC,EAAE;IACvBG,aAAa,IAAK,GAAEH,QAAS,IAAGA,QAAQ,KAAK,CAAC,GAAG,MAAM,GAAG,OAAQ,EAAC;EACrE,CAAC,MAAM,IAAIC,UAAU,GAAG,CAAC,EAAE;IACzBE,aAAa,IAAK,GAAEF,UAAW,IAAGA,UAAU,KAAK,CAAC,GAAG,KAAK,GAAG,MAAO,EAAC;EACvE,CAAC,MAAM;IACLE,aAAa,IAAK,GAAED,UAAW,IAAGA,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,GAAI,EAAC;EAClE;EAGA,OAAOC,aAAa,CAACC,IAAI,CAAC,CAAC,GAAG,MAAM;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}