{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useFormData } from \"../../contexts/PartnerApplicationFormDataContext\";\nimport { DocumentSelector } from \"../../components/DocumentSelector\";\nimport { fetchDocuments, fetchFolders } from \"../../utils/documentApi\";\nimport { fetchPartnerApplication } from \"../../utils/partnerApplicationApi\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DocumentSubmissionScreen = function DocumentSubmissionScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _useFormData = useFormData(),\n    formData = _useFormData.formData,\n    setFormData = _useFormData.setFormData;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    folders = _useState2[0],\n    setFolders = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDocuments = _useState4[0],\n    setSelectedDocuments = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var USER_ID = user.user.userId;\n  useEffect(function () {\n    fetchDataFromServer().then(function (r) {\n      return console.log(\"Data completed.\");\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"Folder state has been updated:\", folders);\n  }, [folders]);\n  var handleSubmit = function handleSubmit() {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      documents: selectedDocuments\n    }));\n    navigation.navigate('Ending');\n  };\n  var uploadSucceed = function uploadSucceed() {\n    console.log(\"Upload Done.\");\n    navigation.navigate(\"Login Portal\");\n  };\n  var fetchDataFromServer = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var partnerApp = yield fetchPartnerApplication(USER_ID);\n        console.log(partnerApp.partnerApp);\n        var _folders = yield fetchFolders(USER_ID);\n        console.log(_folders);\n        setFolders(_toConsumableArray(_folders));\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchDataFromServer() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Upload Documents\"\n    }), _jsx(DocumentSelector, {\n      documentFetch: uploadSucceed,\n      folderState: folders,\n      isTransaction: false\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginTop: 60\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: '#007bff',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#fff'\n  }\n});\nexport default DocumentSubmissionScreen;","map":{"version":3,"names":["React","useContext","useEffect","useState","View","Text","TouchableOpacity","StyleSheet","SafeAreaView","useNavigation","useFormData","DocumentSelector","fetchDocuments","fetchFolders","fetchPartnerApplication","AuthContext","jsx","_jsx","jsxs","_jsxs","DocumentSubmissionScreen","_ref","route","navigation","_useFormData","formData","setFormData","_useState","_useState2","_slicedToArray","folders","setFolders","_useState3","_useState4","selectedDocuments","setSelectedDocuments","_useContext","user","USER_ID","userId","fetchDataFromServer","then","r","console","log","handleSubmit","_objectSpread","documents","navigate","uploadSucceed","_ref2","_asyncToGenerator","partnerApp","_toConsumableArray","error","apply","arguments","style","styles","container","children","title","documentFetch","folderState","isTransaction","create","flex","justifyContent","alignItems","backgroundColor","fontSize","marginBottom","marginTop","button","padding","borderRadius","buttonText","color"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/partnerApplication/DocumentSubmission.js"],"sourcesContent":["// This is a Document Submission screen.\n// Prompt the User to create the Documents as needed.\n// I need to work this properly.\nimport React, {useContext, useEffect, useState} from 'react';\nimport {View, Text, TouchableOpacity, StyleSheet, SafeAreaView} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useFormData } from '../../contexts/PartnerApplicationFormDataContext';\nimport {DocumentSelector} from \"../../components/DocumentSelector\";\nimport {fetchDocuments, fetchFolders} from \"../../utils/documentApi\";\nimport {fetchPartnerApplication} from \"../../utils/partnerApplicationApi\";\nimport {AuthContext} from \"../../AuthContext\";\n\nconst DocumentSubmissionScreen = ({route}) => {\n    const navigation = useNavigation();\n    const { formData, setFormData } = useFormData(); // Using your context\n    const [folders, setFolders] = useState([]) // For Document Selector\n    const [selectedDocuments, setSelectedDocuments] = useState([]); // Local state to keep track of selected documents\n    const {user} = useContext(AuthContext);\n    const USER_ID = user.user.userId;\n\n    useEffect(() => {\n        fetchDataFromServer().then(r => console.log(\"Data completed.\"));\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Folder state has been updated:\", folders);\n    }, [folders]);\n\n    const handleSubmit = () => {\n        // Update the context with the new values\n        setFormData({ ...formData, documents: selectedDocuments });\n        // Navigate to the next screen or submit the form\n        navigation.navigate('Ending'); // Replace with your actual next screen\n    };\n\n    const uploadSucceed = () => {\n        console.log(\"Upload Done.\")\n        navigation.navigate(\"Login Portal\");\n    }\n\n    // Slight bit of repeat here, need to clean this up.\n    // Really the data fetching should all be done somewhere else to not repeat this.\n    const fetchDataFromServer = async () => {\n        try {\n            const partnerApp = await fetchPartnerApplication(USER_ID)\n            console.log(partnerApp.partnerApp);\n            const folders = await fetchFolders(USER_ID) // Check if users have uploaded docs.\n            console.log(folders)\n            setFolders([...folders]);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n    // Do we still need to fetch data???\n    // I think it just ignores it if it does not exist.\n    // Probably just turn it into a free signal.\n    return (\n        <SafeAreaView style={styles.container}>\n            <Text style={styles.title}>Upload Documents</Text>\n            <DocumentSelector documentFetch={uploadSucceed} folderState={folders} isTransaction={false}/>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: \"#fff\"\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 10,\n        marginTop: 60,\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: '#007bff',\n        padding: 10,\n        borderRadius: 5,\n    },\n    buttonText: {\n        color: '#fff',\n    },\n});\n\nexport default DocumentSubmissionScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}