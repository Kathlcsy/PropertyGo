{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResponseTopNavBar = function ResponseTopNavBar() {\n  var navigation = useNavigation();\n  var handleBackButtonPress = function handleBackButtonPress() {\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.leftContent,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleBackButtonPress,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 26,\n          color: \"black\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.middleContent,\n      children: _jsx(Text, {\n        style: styles.pageTitle,\n        children: \"Contact Us Responses\"\n      })\n    }), _jsx(View, {\n      style: styles.rightContent\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 50,\n    paddingBottom: 5,\n    paddingHorizontal: 15,\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'grey',\n    elevation: 5,\n    backgroundColor: 'white'\n  },\n  leftContent: {\n    flex: 1\n  },\n  middleContent: {\n    flex: 2,\n    alignItems: 'center'\n  },\n  rightContent: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  pageTitle: {\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});\nexport default ResponseTopNavBar;","map":{"version":3,"names":["React","TouchableOpacity","View","StyleSheet","Text","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","ResponseTopNavBar","navigation","handleBackButtonPress","goBack","style","styles","container","children","leftContent","onPress","name","size","color","middleContent","pageTitle","rightContent","create","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","paddingHorizontal","borderBottomWidth","borderBottomColor","elevation","backgroundColor","flex","fontWeight","fontSize"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/components/ContactUs/ResponseTopNavBar.js"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, View, StyleSheet, Text } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nconst ResponseTopNavBar = () => {\n  const navigation = useNavigation();\n\n  const handleBackButtonPress = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.leftContent}>\n        <TouchableOpacity onPress={handleBackButtonPress}>\n          <Ionicons name=\"arrow-back\" size={26} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.middleContent}>\n        <Text style={styles.pageTitle}>Contact Us Responses</Text>\n      </View>\n      <View style={styles.rightContent}>\n        {/* Add any content for the right side */}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 50,\n    paddingBottom: 5,\n    paddingHorizontal: 15,\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'grey',\n    elevation: 5,\n    backgroundColor: 'white', // Set the background color of the header\n  },\n  leftContent: {\n    flex: 1,\n  },\n  middleContent: {\n    flex: 2, // Adjust the flex value to control the alignment of the title\n    alignItems: 'center',\n  },\n  rightContent: {\n    flex: 1,\n    alignItems: 'flex-end', // Align content to the right\n  },\n  pageTitle: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n});\n\nexport default ResponseTopNavBar;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC9B,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAElC,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClCD,UAAU,CAACE,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,OACEJ,KAAA,CAACR,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BV,IAAA,CAACN,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACG,WAAY;MAAAD,QAAA,EAC9BV,IAAA,CAACP,gBAAgB;QAACmB,OAAO,EAAEP,qBAAsB;QAAAK,QAAA,EAC/CV,IAAA,CAACH,QAAQ;UAACgB,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CACtC;IAAC,CACf,CAAC,EACPf,IAAA,CAACN,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACQ,aAAc;MAAAN,QAAA,EAChCV,IAAA,CAACJ,IAAI;QAACW,KAAK,EAAEC,MAAM,CAACS,SAAU;QAAAP,QAAA,EAAC;MAAoB,CAAM;IAAC,CACtD,CAAC,EACPV,IAAA,CAACN,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACU;IAAa,CAE3B,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGb,UAAU,CAACwB,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,CAAC;IAChBC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE,GAAG;IACtBC,iBAAiB,EAAE,MAAM;IACzBC,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE;EACnB,CAAC;EACDlB,WAAW,EAAE;IACXmB,IAAI,EAAE;EACR,CAAC;EACDd,aAAa,EAAE;IACbc,IAAI,EAAE,CAAC;IACPR,UAAU,EAAE;EACd,CAAC;EACDJ,YAAY,EAAE;IACZY,IAAI,EAAE,CAAC;IACPR,UAAU,EAAE;EACd,CAAC;EACDL,SAAS,EAAE;IACTc,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe7B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}