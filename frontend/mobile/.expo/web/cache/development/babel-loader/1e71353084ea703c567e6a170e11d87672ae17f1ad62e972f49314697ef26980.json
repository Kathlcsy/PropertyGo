{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport configData from \"../config.json\";\nexport var BASE_URL = configData.BASE_URL;\nexport var fetchFolders = function () {\n  var _ref = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/folders/${USER_ID}}`);\n      var results = yield response.json();\n      return results.folders;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchFolders(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchTransactions = function () {\n  var _ref2 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/transactions/${USER_ID}`);\n      var results = yield response.json();\n      return results.transactions;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchTransactions(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var fetchDocuments = function () {\n  var _ref3 = _asyncToGenerator(function* (USER_ID) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/documents/list/metadata/${USER_ID}}`);\n      var documents = yield response.json();\n      return documents;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchDocuments(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var fetchDocumentById = function () {\n  var _ref4 = _asyncToGenerator(function* (APP_ID) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/documents/app/metadata/${APP_ID}`);\n      var documents = yield response.json();\n      return documents;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchDocumentById(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var createFolder = function () {\n  var _ref5 = _asyncToGenerator(function* (USER_ID, scheduleData) {\n    try {\n      var response = yield fetch(`${BASE_URL}/user/folders/create/${USER_ID}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(scheduleData)\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        var errorData = yield response.text();\n        return {\n          success: false,\n          message: errorData\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  });\n  return function createFolder(_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["configData","BASE_URL","fetchFolders","_ref","_asyncToGenerator","USER_ID","response","fetch","results","json","folders","error","console","_x","apply","arguments","fetchTransactions","_ref2","transactions","_x2","fetchDocuments","_ref3","documents","_x3","fetchDocumentById","_ref4","APP_ID","_x4","createFolder","_ref5","scheduleData","method","headers","body","JSON","stringify","ok","data","success","errorData","text","message","_x5","_x6"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/utils/documentApi.js"],"sourcesContent":["// This is all the API calls for Documents.\nimport configData from \"../config.json\"\n\nexport const BASE_URL = configData.BASE_URL\n\n// Dumping all my API's here.\nexport const fetchFolders = async (USER_ID) => {\n    try {\n        const response = await fetch(`${BASE_URL}/user/folders/${USER_ID}}`);\n        const results = await response.json();\n        return results.folders;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const fetchTransactions = async (USER_ID) => {\n    try {\n        const response = await fetch(`${BASE_URL}/user/transactions/${USER_ID}`);\n        const results = await response.json();\n        return results.transactions;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const fetchDocuments = async (USER_ID) => {\n    try {\n        const response = await fetch(\n            `${BASE_URL}/user/documents/list/metadata/${USER_ID}}`\n        );\n        const documents = await response.json();\n        return documents;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const fetchDocumentById = async (APP_ID) => {\n    try {\n        const response = await fetch(\n            `${BASE_URL}/user/documents/app/metadata/${APP_ID}`\n        );\n        const documents = await response.json();\n        return documents;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const createFolder = async (USER_ID, scheduleData) => {\n    try {\n      const response = await fetch(`${BASE_URL}/user/folders/create/${USER_ID}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(scheduleData),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        return { success: true, data };\n      } else {\n        const errorData = await response.text(); // Change to response.text() for error response\n        return { success: false, message: errorData };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}