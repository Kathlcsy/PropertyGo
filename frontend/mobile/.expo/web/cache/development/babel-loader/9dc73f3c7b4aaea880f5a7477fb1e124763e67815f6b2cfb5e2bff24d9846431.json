{"ast":null,"code":"import React from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Transactions from \"../../screens/sideNavigatorBar/Transaction/Transactions\";\nimport PendingTransactions from \"../../screens/sideNavigatorBar/Transaction/PendingTransactions\";\nimport TokenTransactions from \"../../screens/sideNavigatorBar/Transaction/TokenTransactions\";\nimport { MaterialIcons, Ionicons, FontAwesome5 } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar CustomTabLabel = function CustomTabLabel(_ref) {\n  var label = _ref.label,\n    color = _ref.color,\n    icon = _ref.icon;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    children: [_jsx(FontAwesome5, {\n      name: icon,\n      size: 20,\n      color: \"black\"\n    }), _jsx(Text, {\n      style: {\n        color: \"black\",\n        marginLeft: 5\n      },\n      children: label\n    })]\n  });\n};\nvar TransactionTabNavigator = function TransactionTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#FFD700',\n      tabBarLabelStyle: {\n        color: 'black'\n      },\n      tabBarItemStyle: {\n        height: 50\n      },\n      tabBarIndicatorStyle: {\n        backgroundColor: '#FFD700'\n      },\n      tabBarStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"All Transactions\",\n      component: Transactions,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref2) {\n          var color = _ref2.color,\n            focused = _ref2.focused;\n          return _jsx(CustomTabLabel, {\n            label: \"All\",\n            color: color,\n            icon: \"list-ol\"\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Token Transactions\",\n      component: TokenTransactions,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref3) {\n          var color = _ref3.color,\n            focused = _ref3.focused;\n          return _jsx(CustomTabLabel, {\n            label: \"History\",\n            color: color,\n            icon: \"coins\"\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Pending Transactions\",\n      component: PendingTransactions,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref4) {\n          var color = _ref4.color,\n            focused = _ref4.focused;\n          return _jsx(CustomTabLabel, {\n            label: \"Pending\",\n            color: color,\n            icon: \"hourglass-start\"\n          });\n        }\n      }\n    })]\n  });\n};\nexport default TransactionTabNavigator;","map":{"version":3,"names":["React","createMaterialTopTabNavigator","Transactions","PendingTransactions","TokenTransactions","MaterialIcons","Ionicons","FontAwesome5","View","Text","jsx","_jsx","jsxs","_jsxs","Tab","CustomTabLabel","_ref","label","color","icon","style","flexDirection","alignItems","children","name","size","marginLeft","TransactionTabNavigator","Navigator","screenOptions","tabBarActiveTintColor","tabBarLabelStyle","tabBarItemStyle","height","tabBarIndicatorStyle","backgroundColor","tabBarStyle","Screen","component","options","tabBarLabel","_ref2","focused","_ref3","_ref4"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/navigations/Transaction/TransactionMainTabNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Transactions from '../../screens/sideNavigatorBar/Transaction/Transactions';\nimport PendingTransactions from '../../screens/sideNavigatorBar/Transaction/PendingTransactions';\nimport TokenTransactions from '../../screens/sideNavigatorBar/Transaction/TokenTransactions';\nimport { MaterialIcons, Ionicons, FontAwesome5 } from '@expo/vector-icons';\nimport { View, Text } from 'react-native'; // Import Text and View from react-native\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst CustomTabLabel = ({ label, color, icon }) => (\n  <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n    <FontAwesome5 name={icon} size={20} color=\"black\" />\n    <Text style={{ color: \"black\", marginLeft: 5 }}>{label}</Text>\n  </View>\n);\n\nconst TransactionTabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#FFD700',\n        tabBarLabelStyle: {\n          color: 'black',\n        },\n        tabBarItemStyle: {\n          height: 50,\n        },\n        tabBarIndicatorStyle: {\n          backgroundColor: '#FFD700',\n        },\n        tabBarStyle: {\n          backgroundColor: 'white',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"All Transactions\"\n        component={Transactions}\n        options={{\n          tabBarLabel: ({ color, focused }) => (\n            <CustomTabLabel label=\"All\" color={color} icon=\"list-ol\" />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Token Transactions\"\n        component={TokenTransactions}\n        options={{\n          tabBarLabel: ({ color, focused }) => (\n            <CustomTabLabel label=\"History\" color={color} icon=\"coins\" />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Pending Transactions\"\n        component={PendingTransactions}\n        options={{\n          tabBarLabel: ({ color, focused }) => (\n            <CustomTabLabel label=\"Pending\" color={color} icon=\"hourglass-start\" />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default TransactionTabNavigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}