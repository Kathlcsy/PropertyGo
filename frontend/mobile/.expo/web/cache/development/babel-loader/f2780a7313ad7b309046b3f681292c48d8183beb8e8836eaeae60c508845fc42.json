{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useStripe, StripeProvider } from '@stripe/stripe-react-native';\nimport { updateUserStripeCustomerId, initializePaymentSheet, createTransactionRecord, fetchUpdatedUserDetails, handleDeepLink } from \"../../services/StripeServices\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PurchaseOptionFee = function PurchaseOptionFee(_ref) {\n  var route = _ref.route;\n  var propertyListing = route.params.propertyListing;\n  var navigation = useNavigation();\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    login = _useContext.login;\n  var _useStripe = useStripe(),\n    initPaymentSheet = _useStripe.initPaymentSheet,\n    presentPaymentSheet = _useStripe.presentPaymentSheet,\n    handleURLCallback = _useStripe.handleURLCallback;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newStripeCustomerId = _useState4[0],\n    setStripeCustomerId = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ephemeralKey = _useState6[0],\n    setEphemeralKey = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    paymentIntent = _useState8[0],\n    setPaymentIntent = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    publishableKey = _useState10[0],\n    setPublishableKey = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    custIdExists = _useState12[0],\n    setCustIdExists = _useState12[1];\n  var stripeCustomerId = user.user.stripeCustomerId;\n  var description = \"Purchase Option Fee\";\n  var amount = propertyListing.optionFee;\n  var taxable = false;\n  var initializePayment = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield initializePaymentSheet(stripeCustomerId, user.user, description, amount, setStripeCustomerId, setEphemeralKey, setPaymentIntent, setPublishableKey, setCustIdExists, initPaymentSheet, setLoading, taxable);\n    });\n    return function initializePayment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var openPaymentSheet = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _yield$presentPayment = yield presentPaymentSheet(),\n          error = _yield$presentPayment.error;\n        if (error) {\n          Alert.alert(`Error code: ${error.code}`, error.message);\n        } else {\n          if (custIdExists == false) {\n            updateUserStripeCustomerId(newStripeCustomerId, user.user, login);\n          }\n          var status = \"PENDING\";\n          var transactionType = \"OPTION_FEE\";\n          var gst = false;\n          var paymentAmount = 0;\n          createTransactionRecord(propertyListing, user.user, paymentIntent, status, transactionType, description, 1, paymentAmount, gst);\n          Alert.alert('Success', 'Your order is confirmed!');\n          navigation.navigate('Home Page');\n        }\n      } catch (error) {\n        console.error('Error opening payment sheet:', error);\n      }\n    });\n    return function openPaymentSheet() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    initializePayment();\n    var getUrlAsync = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        var initialUrl = yield Linking.getInitialURL();\n        handleDeepLink(initialUrl, handleURLCallback);\n      });\n      return function getUrlAsync() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    getUrlAsync();\n    var deepLinkListener = Linking.addEventListener('url', function (event) {\n      handleDeepLink(event.url, handleURLCallback);\n    });\n    return function () {\n      return deepLinkListener.remove();\n    };\n  }, [handleURLCallback]);\n  return _jsx(View, {\n    children: _jsx(StripeProvider, {\n      publishableKey: publishableKey,\n      children: _jsx(Button, {\n        variant: \"primary\",\n        disabled: !loading,\n        title: \"Checkout\",\n        onPress: openPaymentSheet\n      })\n    })\n  });\n};\nexport default PurchaseOptionFee;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","View","Button","Alert","Linking","Text","useStripe","StripeProvider","updateUserStripeCustomerId","initializePaymentSheet","createTransactionRecord","fetchUpdatedUserDetails","handleDeepLink","AuthContext","useNavigation","jsx","_jsx","PurchaseOptionFee","_ref","route","propertyListing","params","navigation","_useContext","user","login","_useStripe","initPaymentSheet","presentPaymentSheet","handleURLCallback","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","newStripeCustomerId","setStripeCustomerId","_useState5","_useState6","ephemeralKey","setEphemeralKey","_useState7","_useState8","paymentIntent","setPaymentIntent","_useState9","_useState10","publishableKey","setPublishableKey","_useState11","_useState12","custIdExists","setCustIdExists","stripeCustomerId","description","amount","optionFee","taxable","initializePayment","_ref2","_asyncToGenerator","apply","arguments","openPaymentSheet","_ref3","_yield$presentPayment","error","alert","code","message","status","transactionType","gst","paymentAmount","navigate","console","getUrlAsync","_ref4","initialUrl","getInitialURL","deepLinkListener","addEventListener","event","url","remove","children","variant","disabled","title","onPress"],"sources":["/Users/limzhongzhi/WebstormProjects/PropertyGo/frontend/mobile/screens/purchaseProperty/PurchaseOptionFee.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { View, Button, Alert, Linking, Text } from 'react-native';\nimport { useStripe, StripeProvider } from '@stripe/stripe-react-native';\nimport { updateUserStripeCustomerId, initializePaymentSheet, createTransactionRecord, fetchUpdatedUserDetails, handleDeepLink } from \"../../services/StripeServices\";\nimport { AuthContext } from '../../AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst PurchaseOptionFee = ({ route }) => {\n    const { propertyListing } = route.params;\n    const navigation = useNavigation();\n    const { user, login } = useContext(AuthContext);\n    const { initPaymentSheet, presentPaymentSheet, handleURLCallback } = useStripe();\n    const [loading, setLoading] = useState(false);\n    const [newStripeCustomerId, setStripeCustomerId] = useState('');\n    const [ephemeralKey, setEphemeralKey] = useState('');\n    const [paymentIntent, setPaymentIntent] = useState('');\n    const [publishableKey, setPublishableKey] = useState('');\n    const [custIdExists, setCustIdExists] = useState(false);\n    const stripeCustomerId = user.user.stripeCustomerId;\n    const description = \"Purchase Option Fee\";\n    const amount = propertyListing.optionFee;\n    const taxable = false;\n\n    const initializePayment = async () => {\n        // console.log(\"amount at purchaseOptionFee: \", amount);\n        // await initializePaymentSheet(stripeCustomerId, user.user, description, amount, setStripeCustomerId, setEphemeralKey, setPaymentIntent, setPublishableKey, setCustIdExists, initPaymentSheet, setLoading, isAService);\n        await initializePaymentSheet(\n            stripeCustomerId,\n            user.user,\n            description,\n            amount, \n            setStripeCustomerId,\n            setEphemeralKey,\n            setPaymentIntent,\n            setPublishableKey,\n            setCustIdExists,\n            initPaymentSheet,\n            setLoading,\n            taxable,\n        );\n    };\n\n    const openPaymentSheet = async () => {\n        try {\n            const { error } = await presentPaymentSheet();\n\n            if (error) {\n                Alert.alert(`Error code: ${error.code}`, error.message);\n            } else {\n                if (custIdExists == false) {\n                    updateUserStripeCustomerId(newStripeCustomerId, user.user, login);\n                }\n                const status = \"PENDING\"\n                const transactionType = \"OPTION_FEE\"\n                const gst = false;\n                const paymentAmount = 0; //As payment is still processing\n                createTransactionRecord(propertyListing, user.user, paymentIntent, status, transactionType, description, 1, paymentAmount, gst);\n                Alert.alert('Success', 'Your order is confirmed!');\n                navigation.navigate('Home Page');\n            }\n        } catch (error) {\n            console.error('Error opening payment sheet:', error);\n        }\n    };\n\n    useEffect(() => {\n        initializePayment();\n\n        // Handle deep linking\n        const getUrlAsync = async () => {\n            const initialUrl = await Linking.getInitialURL();\n            handleDeepLink(initialUrl, handleURLCallback);\n        };\n\n        getUrlAsync();\n\n        const deepLinkListener = Linking.addEventListener('url', (event) => {\n            handleDeepLink(event.url, handleURLCallback);\n        });\n\n        return () => deepLinkListener.remove();\n    }, [handleURLCallback]);\n\n    return (\n        <View>\n            <StripeProvider\n                publishableKey={publishableKey}\n            >\n                <Button\n                    variant=\"primary\"\n                    disabled={!loading}\n                    title=\"Checkout\"\n                    onPress={openPaymentSheet}\n                />\n            </StripeProvider>\n        </View>\n    );\n};\n\nexport default PurchaseOptionFee;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}