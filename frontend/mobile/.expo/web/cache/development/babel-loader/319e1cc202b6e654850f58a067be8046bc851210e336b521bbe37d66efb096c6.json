{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AuthContext } from \"../../AuthContext\";\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport { updateUserProfile } from \"../../utils/api\";\nimport { updateUserProfilePicture, loginUser } from \"../../utils/api\";\nimport base64 from 'react-native-base64';\nimport { Ionicons } from '@expo/vector-icons';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nfunction EditProfile(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    login = _useContext.login,\n    upd = _useContext.upd;\n  var _useState = useState({\n      name: user.user.name,\n      email: user.user.email,\n      countryOfOrigin: user.user.countryOfOrigin,\n      dateOfBirth: user.user.dateOfBirth\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedUser = _useState2[0],\n    setEditedUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDatePickerVisible = _useState4[0],\n    setDatePickerVisibility = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isCountryPickerVisible = _useState6[0],\n    setCountryPickerVisibility = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    profileImage = _useState8[0],\n    setProfileImage = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    profileImageBase64 = _useState10[0],\n    setProfileImageBase64 = _useState10[1];\n  useEffect(function () {\n    var profileImageBase64;\n    if (user && user.user.profileImage && user.user.profileImage.data) {\n      profileImageBase64 = base64.encodeFromByteArray(user.user.profileImage.data);\n    }\n    setProfileImageBase64(profileImageBase64);\n  }, [user]);\n  useEffect(function () {\n    if (profileImageBase64) {\n      setProfileImage(`data:image/jpeg;base64,${profileImageBase64}`);\n    }\n  }, [profileImageBase64]);\n  var handleInputChange = function handleInputChange(field, value) {\n    setEditedUser(_objectSpread(_objectSpread({}, editedUser), {}, _defineProperty({}, field, value)));\n  };\n  var openDatePicker = function openDatePicker() {\n    setDatePickerVisibility(true);\n  };\n  var handleDateConfirm = function handleDateConfirm(date) {\n    setEditedUser(_objectSpread(_objectSpread({}, editedUser), {}, {\n      dateOfBirth: date.toISOString().split('T')[0]\n    }));\n    setDatePickerVisibility(false);\n  };\n  var handleCountryChange = function handleCountryChange(itemValue) {\n    setEditedUser(_objectSpread(_objectSpread({}, editedUser), {}, {\n      countryOfOrigin: itemValue\n    }));\n    setCountryPickerVisibility(false);\n  };\n  var fetchUpdatedUserDetailsImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$loginUser = yield loginUser(user.user.userName, user.user.password),\n          success = _yield$loginUser.success,\n          data = _yield$loginUser.data,\n          message = _yield$loginUser.message;\n        if (success) {\n          login(data);\n        } else {\n          Alert.alert('Error', message);\n        }\n      } catch (error) {\n        console.error('Error fetching updated user details:', error);\n      }\n    });\n    return function fetchUpdatedUserDetailsImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchUpdatedUserDetails = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _yield$loginUser2 = yield loginUser(user.user.userName, user.user.password),\n          success = _yield$loginUser2.success,\n          data = _yield$loginUser2.data,\n          message = _yield$loginUser2.message;\n        if (success) {\n          login(data);\n        } else {\n          Alert.alert('Error', message);\n        }\n      } catch (error) {\n        console.error('Error fetching updated user details:', error);\n      }\n    });\n    return function fetchUpdatedUserDetails() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveChanges = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!editedUser.name || !editedUser.email || !editedUser.dateOfBirth || !editedUser.countryOfOrigin) {\n        Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n        return;\n      }\n      if (!emailPattern.test(editedUser.email)) {\n        Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n        return;\n      }\n      var today = new Date();\n      var dob = new Date(editedUser.dateOfBirth);\n      var age = today.getFullYear() - dob.getFullYear();\n      if (today.getMonth() < dob.getMonth() || today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate()) {\n        age--;\n      }\n      if (age < 21) {\n        Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n        return;\n      }\n      try {\n        var formData = new FormData();\n        formData.append('name', editedUser.name);\n        formData.append('email', editedUser.email);\n        formData.append('countryOfOrigin', editedUser.countryOfOrigin);\n        formData.append('dateOfBirth', editedUser.dateOfBirth);\n        var _yield$updateUserProf = yield updateUserProfile(user.user.userId, formData),\n          success = _yield$updateUserProf.success,\n          data = _yield$updateUserProf.data,\n          message = _yield$updateUserProf.message;\n        if (success) {\n          if (profileImage) {\n            var response = yield updateUserProfilePicture(user.user.userId, profileImage);\n            if (response.success) {\n              fetchUpdatedUserDetails();\n              Alert.alert('Success', 'Profile updated successfully!');\n            } else {\n              Alert.alert('Error', response.message || 'Profile update failed.');\n            }\n          } else {\n            fetchUpdatedUserDetails();\n          }\n        } else {\n          console.error('Failed to update user profile:', message);\n          Alert.alert('Error', message || 'Profile update failed.');\n        }\n      } catch (error) {\n        console.error('Error updating user profile:', error);\n      }\n    });\n    return function saveChanges() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var chooseImage = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 0.2\n        });\n        if (!result.cancelled) {\n          setProfileImage(result.uri);\n          try {\n            var response = yield updateUserProfilePicture(user.user.userId, result.uri);\n            if (response.success) {\n              Alert.alert('Success', 'Image uploaded successfully!');\n              fetchUpdatedUserDetailsImage();\n            } else {\n              Alert.alert('Error', response.message || 'Image upload failed.');\n            }\n          } catch (error) {\n            console.error('Error uploading image:', error);\n            Alert.alert('Error', 'Image upload failed.');\n          }\n        }\n      } catch (error) {\n        console.error('Error picking image:', error);\n      }\n    });\n    return function chooseImage() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(Text, {\n        style: styles.header,\n        children: \"Edit Profile\"\n      })]\n    }), _jsxs(View, {\n      style: styles.profileHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: chooseImage,\n        children: profileImage ? _jsx(Image, {\n          source: {\n            uri: profileImage\n          },\n          style: styles.profileImage\n        }) : _jsx(View, {\n          style: styles.profileImagePlaceholder,\n          children: _jsx(Icon, {\n            name: \"user\",\n            size: 100,\n            color: \"white\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.heading,\n        children: \"User Profile\"\n      })]\n    }), _jsxs(View, {\n      style: styles.profileInfo,\n      children: [_jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Name:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Name\",\n          value: editedUser.name,\n          onChangeText: function onChangeText(text) {\n            return handleInputChange('name', text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          value: editedUser.email,\n          onChangeText: function onChangeText(text) {\n            return handleInputChange('email', text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Country:\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.countryPickerButton,\n          onPress: function onPress() {\n            return setCountryPickerVisibility(true);\n          },\n          children: [_jsx(Text, {\n            style: styles.countryPickerText,\n            children: editedUser.countryOfOrigin\n          }), _jsx(Ionicons, {\n            name: \"caret-down-outline\",\n            size: 20,\n            color: \"black\"\n          })]\n        }), _jsx(Modal, {\n          transparent: true,\n          animationType: \"slide\",\n          visible: isCountryPickerVisible,\n          onRequestClose: function onRequestClose() {\n            return setCountryPickerVisibility(false);\n          },\n          children: _jsx(View, {\n            style: styles.modalContainer,\n            children: _jsx(Picker, {\n              selectedValue: editedUser.countryOfOrigin,\n              onValueChange: handleCountryChange,\n              style: styles.picker,\n              children: countries.map(function (country, index) {\n                return _jsx(Picker.Item, {\n                  label: country.label,\n                  value: country.value\n                }, index);\n              })\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Date Of Birth:\"\n        }), _jsxs(TouchableOpacity, {\n          onPress: openDatePicker,\n          style: styles.datePicker,\n          children: [_jsx(Text, {\n            style: styles.datePickerText,\n            children: editedUser.dateOfBirth\n          }), _jsx(Ionicons, {\n            name: \"calendar-outline\",\n            size: 20,\n            color: \"black\"\n          })]\n        }), _jsx(DateTimePicker, {\n          isVisible: isDatePickerVisible,\n          mode: \"date\",\n          onConfirm: handleDateConfirm,\n          onCancel: function onCancel() {\n            return setDatePickerVisibility(false);\n          }\n        })]\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.updatePasswordButton,\n      onPress: function onPress() {\n        return navigation.navigate('UpdatePassword');\n      },\n      children: [_jsx(Ionicons, {\n        name: \"key-outline\",\n        size: 20,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.updatePasswordButtonText,\n        children: \"Update Password\"\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.saveChangesButton,\n      onPress: saveChanges,\n      children: [_jsx(Ionicons, {\n        name: \"save-outline\",\n        size: 18,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.saveChangesButtonText,\n        children: \"Save Changes\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    padding: 20\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButton: {\n    marginRight: 20\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 70\n  },\n  profileHeader: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  profileImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 120\n  },\n  profileImagePlaceholder: {\n    width: 150,\n    height: 150,\n    borderRadius: 120,\n    backgroundColor: 'gray',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10\n  },\n  profileInfo: {\n    marginTop: 20\n  },\n  inputRow: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    marginBottom: 20,\n    width: '100%'\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    width: '100%'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 10,\n    width: '100%'\n  },\n  countryPickerButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  countryPickerText: {\n    fontSize: 14\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  picker: {\n    backgroundColor: 'white'\n  },\n  datePicker: {\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    fontSize: 14,\n    padding: 8,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  datePickerText: {\n    fontSize: 14\n  },\n  updatePasswordButton: {\n    backgroundColor: 'dodgerblue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 20,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginLeft: 70\n  },\n  updatePasswordButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  saveChangesButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginLeft: 70\n  },\n  saveChangesButtonText: {\n    color: 'white',\n    marginLeft: 10\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default EditProfile;","map":{"version":3,"names":["React","useContext","useState","useEffect","ScrollView","View","Text","StyleSheet","TouchableOpacity","Image","TextInput","Modal","Alert","AuthContext","DateTimePicker","Picker","ImagePicker","updateUserProfile","updateUserProfilePicture","loginUser","base64","Ionicons","Icon","jsx","_jsx","jsxs","_jsxs","countries","label","value","EditProfile","_ref","navigation","route","_useContext","user","login","upd","_useState","name","email","countryOfOrigin","dateOfBirth","_useState2","_slicedToArray","editedUser","setEditedUser","_useState3","_useState4","isDatePickerVisible","setDatePickerVisibility","_useState5","_useState6","isCountryPickerVisible","setCountryPickerVisibility","_useState7","_useState8","profileImage","setProfileImage","_useState9","_useState10","profileImageBase64","setProfileImageBase64","data","encodeFromByteArray","handleInputChange","field","_objectSpread","_defineProperty","openDatePicker","handleDateConfirm","date","toISOString","split","handleCountryChange","itemValue","fetchUpdatedUserDetailsImage","_ref2","_asyncToGenerator","_yield$loginUser","userName","password","success","message","alert","error","console","apply","arguments","fetchUpdatedUserDetails","_ref3","_yield$loginUser2","saveChanges","_ref4","emailPattern","test","today","Date","dob","age","getFullYear","getMonth","getDate","formData","FormData","append","_yield$updateUserProf","userId","response","chooseImage","_ref5","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancelled","uri","contentContainerStyle","styles","container","children","style","headerContainer","backButton","onPress","goBack","size","color","header","profileHeader","source","profileImagePlaceholder","heading","profileInfo","inputRow","input","placeholder","onChangeText","text","countryPickerButton","countryPickerText","transparent","animationType","visible","onRequestClose","modalContainer","selectedValue","onValueChange","picker","map","country","index","Item","datePicker","datePickerText","isVisible","mode","onConfirm","onCancel","updatePasswordButton","navigate","updatePasswordButtonText","saveChangesButton","saveChangesButtonText","create","flexGrow","padding","flexDirection","alignItems","marginRight","fontSize","fontWeight","marginLeft","marginTop","width","height","borderRadius","backgroundColor","justifyContent","marginBottom","borderWidth","paddingHorizontal","borderColor","flex","buttonContent"],"sources":["/workspaces/PropertyGo/frontend/mobile/screens/userProfile/EditProfile.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport {\n    ScrollView,\n    View,\n    Text,\n    StyleSheet,\n    TouchableOpacity,\n    Image,\n    TextInput,\n    Modal,\n    Alert,\n} from 'react-native';\nimport { AuthContext } from '../../AuthContext';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport { updateUserProfile } from '../../utils/api';\nimport { updateUserProfilePicture, loginUser } from '../../utils/api';\nimport base64 from 'react-native-base64';\nimport { Ionicons } from '@expo/vector-icons';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst countries = [\n    { label: 'Select Country', value: '' },\n    { label: 'Singapore', value: 'Singapore' },\n    { label: 'Indonesia', value: 'Indonesia' },\n    { label: 'Malaysia', value: 'Malaysia' },\n];\n\nfunction EditProfile({ navigation, route }) {\n    const { user, login, upd } = useContext(AuthContext);\n\n    const [editedUser, setEditedUser] = useState({\n        name: user.user.name,\n        email: user.user.email,\n        countryOfOrigin: user.user.countryOfOrigin,\n        dateOfBirth: user.user.dateOfBirth,\n    });\n\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [isCountryPickerVisible, setCountryPickerVisibility] = useState(false);\n    const [profileImage, setProfileImage] = useState(null);\n    const [profileImageBase64, setProfileImageBase64] = useState(null);\n\n    useEffect(() => {\n        let profileImageBase64;\n        if (user && user.user.profileImage && user.user.profileImage.data) {\n            profileImageBase64 = base64.encodeFromByteArray(user.user.profileImage.data);\n        }\n        setProfileImageBase64(profileImageBase64);\n    }, [user]);\n\n    useEffect(() => {\n        if (profileImageBase64) {\n            setProfileImage(`data:image/jpeg;base64,${profileImageBase64}`);\n        }\n    }, [profileImageBase64]);\n\n    const handleInputChange = (field, value) => {\n        setEditedUser({ ...editedUser, [field]: value });\n    };\n\n    const openDatePicker = () => {\n        setDatePickerVisibility(true);\n    };\n\n    const handleDateConfirm = (date) => {\n        setEditedUser({ ...editedUser, dateOfBirth: date.toISOString().split('T')[0] });\n        setDatePickerVisibility(false);\n    };\n\n    const handleCountryChange = (itemValue) => {\n        setEditedUser({ ...editedUser, countryOfOrigin: itemValue });\n        setCountryPickerVisibility(false);\n    };\n\n    const fetchUpdatedUserDetailsImage = async () => {\n        try {\n            const { success, data, message } = await loginUser(user.user.userName, user.user.password);\n\n            if (success) {\n                login(data);\n            } else {\n                Alert.alert('Error', message);\n            }\n        } catch (error) {\n            console.error('Error fetching updated user details:', error);\n        }\n    };\n\n    const fetchUpdatedUserDetails = async () => {\n        try {\n            const { success, data, message } = await loginUser(user.user.userName, user.user.password);\n\n            if (success) {\n                login(data);\n            } else {\n                Alert.alert('Error', message);\n            }\n        } catch (error) {\n            console.error('Error fetching updated user details:', error);\n        }\n    };\n\n    const saveChanges = async () => {\n        // Add email validation\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!editedUser.name || !editedUser.email || !editedUser.dateOfBirth || !editedUser.countryOfOrigin) {\n            Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n            return;\n        }\n\n        if (!emailPattern.test(editedUser.email)) {\n            Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n            return;\n        }\n\n        const today = new Date();\n        const dob = new Date(editedUser.dateOfBirth);\n        let age = today.getFullYear() - dob.getFullYear();\n\n        if (today.getMonth() < dob.getMonth() || (today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate())) {\n            age--;\n        }\n\n        if (age < 21) {\n            Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('name', editedUser.name);\n            formData.append('email', editedUser.email);\n            formData.append('countryOfOrigin', editedUser.countryOfOrigin);\n            formData.append('dateOfBirth', editedUser.dateOfBirth);\n\n            const { success, data, message } = await updateUserProfile(user.user.userId, formData);\n\n            if (success) {\n                if (profileImage) {\n                    const response = await updateUserProfilePicture(user.user.userId, profileImage);\n\n                    if (response.success) {\n                        fetchUpdatedUserDetails();\n                        Alert.alert('Success', 'Profile updated successfully!');\n                    } else {\n                        Alert.alert('Error', response.message || 'Profile update failed.');\n                    }\n                } else {\n                    fetchUpdatedUserDetails();\n                }\n            } else {\n                console.error('Failed to update user profile:', message);\n                Alert.alert('Error', message || 'Profile update failed.');\n            }\n        } catch (error) {\n            console.error('Error updating user profile:', error);\n        }\n    };\n\n    const chooseImage = async () => {\n        try {\n            const result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 0.2,\n            });\n\n            if (!result.cancelled) {\n                setProfileImage(result.uri);\n\n                try {\n                    const response = await updateUserProfilePicture(user.user.userId, result.uri);\n\n                    if (response.success) {\n                        Alert.alert('Success', 'Image uploaded successfully!');\n                        fetchUpdatedUserDetailsImage();\n                    } else {\n                        Alert.alert('Error', response.message || 'Image upload failed.');\n                    }\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                    Alert.alert('Error', 'Image upload failed.');\n                }\n            }\n        } catch (error) {\n            console.error('Error picking image:', error);\n        }\n    };\n\n    return (\n        <ScrollView contentContainerStyle={styles.container}>\n            <View style={styles.headerContainer}>\n                {/* Back button */}\n                <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.header}>Edit Profile</Text>\n            </View>\n\n            <View style={styles.profileHeader}>\n                <TouchableOpacity onPress={chooseImage}>\n                    {profileImage ? (\n                        <Image source={{ uri: profileImage }} style={styles.profileImage} />\n                    ) : (\n                        <View style={styles.profileImagePlaceholder}>\n                            <Icon name=\"user\" size={100} color=\"white\" />\n                        </View>\n                    )}\n                </TouchableOpacity>\n                <Text style={styles.heading}>User Profile</Text>\n            </View>\n\n            <View style={styles.profileInfo}>\n                <View style={styles.inputRow}>\n                    <Text style={styles.label}>Name:</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Name\"\n                        value={editedUser.name}\n                        onChangeText={(text) => handleInputChange('name', text)}\n                    />\n                </View>\n                <View style={styles.inputRow}>\n                    <Text style={styles.label}>Email:</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Email\"\n                        value={editedUser.email}\n                        onChangeText={(text) => handleInputChange('email', text)}\n                    />\n                </View>\n                <View style={styles.inputRow}>\n                    <Text style={styles.label}>Country:</Text>\n                    <TouchableOpacity\n                        style={styles.countryPickerButton}\n                        onPress={() => setCountryPickerVisibility(true)}\n                    >\n                        <Text style={styles.countryPickerText}>{editedUser.countryOfOrigin}</Text>\n                        <Ionicons name=\"caret-down-outline\" size={20} color=\"black\" />\n                    </TouchableOpacity>\n                    <Modal\n                        transparent={true}\n                        animationType=\"slide\"\n                        visible={isCountryPickerVisible}\n                        onRequestClose={() => setCountryPickerVisibility(false)}\n                    >\n                        <View style={styles.modalContainer}>\n                            <Picker\n                                selectedValue={editedUser.countryOfOrigin}\n                                onValueChange={handleCountryChange}\n                                style={styles.picker}\n                            >\n                                {countries.map((country, index) => (\n                                    <Picker.Item\n                                        key={index}\n                                        label={country.label}\n                                        value={country.value}\n                                    />\n                                ))}\n                            </Picker>\n                        </View>\n                    </Modal>\n                </View>\n                <View style={styles.inputRow}>\n                    <Text style={styles.label}>Date Of Birth:</Text>\n                    <TouchableOpacity onPress={openDatePicker} style={styles.datePicker}>\n\n                        <Text style={styles.datePickerText}>{editedUser.dateOfBirth}</Text>\n                        <Ionicons name=\"calendar-outline\" size={20} color=\"black\" />\n                    </TouchableOpacity>\n                    <DateTimePicker\n                        isVisible={isDatePickerVisible}\n                        mode=\"date\"\n                        onConfirm={handleDateConfirm}\n                        onCancel={() => setDatePickerVisibility(false)}\n                    />\n                </View>\n            </View>\n\n            <TouchableOpacity\n                style={styles.updatePasswordButton}\n                onPress={() => navigation.navigate('UpdatePassword')}\n            >\n                <Ionicons name=\"key-outline\" size={20} color=\"white\" />\n                <Text style={styles.updatePasswordButtonText}>Update Password</Text>\n            </TouchableOpacity>\n\n            {/* Save Changes button with icon */}\n            <TouchableOpacity style={styles.saveChangesButton} onPress={saveChanges}>\n            <Ionicons name=\"save-outline\" size={18} color=\"white\" />\n                <Text style={styles.saveChangesButtonText}>Save Changes</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexGrow: 1,\n        padding: 20,\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    backButton: {\n        marginRight: 20,\n    },\n    header: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginLeft: 70,\n    },\n    profileHeader: {\n        alignItems: 'center',\n        marginTop: 20,\n    },\n    profileImage: {\n        width: 150,\n        height: 150,\n        borderRadius: 120,\n    },\n    profileImagePlaceholder: {\n        width: 150,\n        height: 150,\n        borderRadius: 120,\n        backgroundColor: 'gray',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    heading: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginTop: 10,\n    },\n    profileInfo: {\n        marginTop: 20,\n    },\n    inputRow: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        marginBottom: 20,\n        width: '100%',\n    },\n    label: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        width: '100%',\n    },\n    input: {\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        borderColor: 'gray',\n        fontSize: 14,\n        padding: 10,\n        width: '100%',\n    },\n    countryPickerButton: {\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        borderColor: 'gray',\n        fontSize: 14,\n        padding: 8,\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    countryPickerText: {\n        fontSize: 14,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'flex-end',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    picker: {\n        backgroundColor: 'white',\n    },\n    datePicker: {\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        borderColor: 'gray',\n        fontSize: 14,\n        padding: 8,\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    datePickerText: {\n        fontSize: 14,\n    },\n    updatePasswordButton: {\n        backgroundColor: 'dodgerblue',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 20,\n        alignItems: 'center', // Center horizontally\n        flexDirection: 'row',\n        justifyContent: 'center', // Center vertically\n        width: '60%',\n        marginLeft: 70,\n    },\n    updatePasswordButtonText: {\n        color: 'white',\n        marginLeft: 10,\n    },\n    saveChangesButton: {\n        backgroundColor: 'green',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        alignItems: 'center', // Center horizontally\n        flexDirection: 'row',\n        justifyContent: 'center', // Center vertically\n        width: '60%',\n        marginLeft: 70,\n    },\n    saveChangesButtonText: {\n        color: 'white',\n        marginLeft: 10,\n    },\n    buttonContent: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n});\n\nexport default EditProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}