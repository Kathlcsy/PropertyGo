{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { loginUser, signUpUser } from \"../../utils/api\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nvar SignUpScreen = function SignUpScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    email = _useState10[0],\n    setEmail = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedCountry = _useState12[0],\n    setSelectedCountry = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    dateOfBirth = _useState14[0],\n    setDateOfBirth = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isDatePickerVisible = _useState16[0],\n    setDatePickerVisibility = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isCountryPickerVisible = _useState18[0],\n    setCountryPickerVisibility = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showPassword = _useState20[0],\n    setShowPassword = _useState20[1];\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var handleSignUp = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!userName || !password || !confirmPassword || !email || !selectedCountry || !dateOfBirth) {\n        Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n        return;\n      }\n      if (!emailPattern.test(email)) {\n        Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Sign Up Failed', 'Passwords do not match');\n        return;\n      }\n      var today = new Date();\n      var dob = new Date(dateOfBirth);\n      var age = today.getFullYear() - dob.getFullYear();\n      if (today.getMonth() < dob.getMonth() || today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate()) {\n        age--;\n      }\n      if (age < 21) {\n        Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n        return;\n      }\n      try {\n        var userData = {\n          userName: userName,\n          password: password,\n          name: name,\n          email: email,\n          countryOfOrigin: selectedCountry.toUpperCase(),\n          dateOfBirth: dateOfBirth.toISOString().split('T')[0],\n          isActive: true,\n          rating: null,\n          experience: null,\n          projectsCompleted: null,\n          companyName: null,\n          startTime: null,\n          endTime: null,\n          contractorSpecialization: null,\n          userType: 'BUYER_SELLER'\n        };\n        var signUpResult = yield signUpUser(userData);\n        console.log(\"This is the sign-up result: \", signUpResult);\n        if (signUpResult.success) {\n          handleLogin();\n          Alert.alert('Move on to input your partner details!', 'Signup successful.');\n          setTimeout(function () {\n            navigation.navigate('Intro to Partner App');\n          }, 500);\n        } else if (signUpResult.message) {\n          if (signUpResult.message.includes('Username')) {\n            Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n          } else if (signUpResult.message.includes('Email')) {\n            Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n          } else {\n            Alert.alert('Sign Up Failed', signUpResult.message);\n          }\n        } else {\n          if (signUpResult.error.includes('Username')) {\n            Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n          } else if (signUpResult.error.includes('Email')) {\n            Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n          }\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        Alert.alert('Sign Up Failed', 'Signup failed');\n      }\n    });\n    return function handleSignUp() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$loginUser = yield loginUser(userName, password),\n        success = _yield$loginUser.success,\n        data = _yield$loginUser.data,\n        message = _yield$loginUser.message;\n      if (success) {\n        login(data);\n        console.log('Login successful');\n      } else {\n        console.log(message);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerView,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.container,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsxs(View, {\n        style: styles.headerContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../assets/PropertyGo-HighRes-Logo.png\"),\n          style: styles.headerImage\n        }), _jsx(Text, {\n          style: styles.headerText,\n          children: \"Sign Up (Partner) \"\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Full Name:\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Full Name\",\n            placeholderTextColor: \"black\",\n            value: name,\n            onChangeText: setName\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"User Name:\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"User Name\",\n            placeholderTextColor: \"black\",\n            value: userName,\n            onChangeText: setUserName\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Password:\"\n          }), _jsxs(View, {\n            style: styles.passwordInputContainer,\n            children: [_jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Password\",\n              placeholderTextColor: \"black\",\n              value: password,\n              onChangeText: setPassword,\n              secureTextEntry: !showPassword\n            }), _jsx(TouchableOpacity, {\n              style: styles.passwordIcon,\n              onPress: function onPress() {\n                return setShowPassword(!showPassword);\n              },\n              children: _jsx(Icon, {\n                name: showPassword ? 'eye' : 'eye-slash',\n                size: 20,\n                color: \"black\"\n              })\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Confirm Password:\"\n          }), _jsx(View, {\n            style: styles.passwordInputContainer,\n            children: _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Confirm Password\",\n              placeholderTextColor: \"black\",\n              value: confirmPassword,\n              onChangeText: setConfirmPassword,\n              secureTextEntry: !showPassword\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Email:\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Email\",\n            placeholderTextColor: \"black\",\n            value: email,\n            onChangeText: setEmail,\n            keyboardType: \"email-address\"\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Date of Birth:\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.datePickerButton,\n            onPress: function onPress() {\n              return setDatePickerVisibility(true);\n            },\n            children: _jsx(Text, {\n              style: styles.pickerText,\n              children: dateOfBirth ? dateOfBirth.toDateString() : 'Date of Birth'\n            })\n          }), _jsx(Modal, {\n            transparent: true,\n            animationType: \"slide\",\n            visible: isDatePickerVisible,\n            onRequestClose: function onRequestClose() {\n              return setDatePickerVisibility(false);\n            },\n            children: _jsx(View, {\n              style: styles.modalView,\n              children: _jsx(DateTimePicker, {\n                isVisible: isDatePickerVisible,\n                mode: \"date\",\n                onConfirm: function onConfirm(date) {\n                  setDateOfBirth(date);\n                  setDatePickerVisibility(false);\n                },\n                onCancel: function onCancel() {\n                  return setDatePickerVisibility(false);\n                }\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Country:\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.countryPickerButton,\n            onPress: function onPress() {\n              return setCountryPickerVisibility(true);\n            },\n            children: _jsx(Text, {\n              style: styles.pickerText,\n              children: selectedCountry || 'Select Country'\n            })\n          }), _jsx(Modal, {\n            transparent: true,\n            animationType: \"slide\",\n            visible: isCountryPickerVisible,\n            onRequestClose: function onRequestClose() {\n              return setCountryPickerVisibility(false);\n            },\n            children: _jsx(View, {\n              style: styles.modalView,\n              children: _jsx(Picker, {\n                selectedValue: selectedCountry,\n                onValueChange: function onValueChange(itemValue) {\n                  setSelectedCountry(itemValue);\n                  setCountryPickerVisibility(false);\n                },\n                children: countries.map(function (country) {\n                  return _jsx(Picker.Item, {\n                    label: country.label,\n                    value: country.value\n                  }, country.value);\n                })\n              })\n            })\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.inputRow,\n        children: \"\\n\\n\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.signUpButton,\n      onPress: handleSignUp,\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(Icon, {\n          name: \"user-plus\",\n          size: 24,\n          color: \"white\",\n          style: styles.icon\n        }), _jsx(Text, {\n          style: styles.signUpButtonText,\n          children: \"  Continue\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#FFFFFF'\n  },\n  containerView: {\n    flexGrow: 1,\n    padding: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  headerImage: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  formContainer: {\n    width: '100%'\n  },\n  inputRow: {\n    marginBottom: 10,\n    width: '100%'\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10,\n    fontSize: 14\n  },\n  passwordInputContainer: {\n    position: 'relative'\n  },\n  passwordIcon: {\n    position: 'absolute',\n    right: 10,\n    top: '45%',\n    transform: [{\n      translateY: -12\n    }]\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  countryPickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  pickerText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  signUpButton: {\n    marginVertical: 10,\n    flexDirection: 'row',\n    backgroundColor: '#1E90FF',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 20,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '60%',\n    marginLeft: 70\n  },\n  signUpButtonText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    marginLeft: 10\n  },\n  scrollViewContent: {\n    paddingBottom: 100\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 10\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useContext","useState","Alert","Image","Modal","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","Picker","DateTimePicker","Icon","AuthContext","loginUser","signUpUser","useNavigation","jsx","_jsx","jsxs","_jsxs","countries","label","value","SignUpScreen","navigation","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","name","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","email","setEmail","_useState11","_useState12","selectedCountry","setSelectedCountry","_useState13","_useState14","dateOfBirth","setDateOfBirth","_useState15","_useState16","isDatePickerVisible","setDatePickerVisibility","_useState17","_useState18","isCountryPickerVisible","setCountryPickerVisibility","_useState19","_useState20","showPassword","setShowPassword","_useContext","login","handleSignUp","_ref","_asyncToGenerator","emailPattern","alert","test","today","Date","dob","age","getFullYear","getMonth","getDate","userData","countryOfOrigin","toUpperCase","toISOString","split","isActive","rating","experience","projectsCompleted","companyName","startTime","endTime","contractorSpecialization","userType","signUpResult","console","log","success","handleLogin","setTimeout","navigate","message","includes","error","apply","arguments","_ref2","_yield$loginUser","data","style","styles","containerView","children","scrollView","contentContainerStyle","container","keyboardShouldPersistTaps","headerContainer","source","require","headerImage","headerText","formContainer","inputRow","input","placeholder","placeholderTextColor","onChangeText","passwordInputContainer","secureTextEntry","passwordIcon","onPress","size","color","keyboardType","datePickerButton","pickerText","toDateString","transparent","animationType","visible","onRequestClose","modalView","isVisible","mode","onConfirm","date","onCancel","countryPickerButton","selectedValue","onValueChange","itemValue","map","country","Item","signUpButton","buttonContent","icon","signUpButtonText","create","flexGrow","alignItems","padding","backgroundColor","flexDirection","buttonContainer","width","height","marginRight","marginTop","marginBottom","fontSize","fontWeight","borderColor","borderWidth","borderRadius","paddingHorizontal","position","right","top","transform","translateY","paddingLeft","justifyContent","flex","marginVertical","marginLeft","scrollViewContent","paddingBottom"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/login/SignUpScreenPartnerApp.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Alert, Image, Modal, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View, } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { AuthContext } from '../../AuthContext';\nimport { loginUser, signUpUser } from '../../utils/api';\nimport { useNavigation } from '@react-navigation/native';\n\nconst countries = [\n    { label: 'Select Country', value: '' },\n    { label: 'Singapore', value: 'Singapore' },\n    { label: 'Indonesia', value: 'Indonesia' },\n    { label: 'Malaysia', value: 'Malaysia' },\n];\n\nconst SignUpScreen = () => {\n    const navigation = useNavigation();\n    const [userName, setUserName] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [isCountryPickerVisible, setCountryPickerVisibility] = useState(false);\n    const [showPassword, setShowPassword] = useState(false); // Added showPassword state\n    const { login } = useContext(AuthContext);\n\n    const handleSignUp = async () => {\n        // Add email validation\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (\n            !userName ||\n            !password ||\n            !confirmPassword ||\n            !email ||\n            !selectedCountry ||\n            !dateOfBirth\n        ) {\n            Alert.alert('Sign Up Failed', 'Please fill in all fields.');\n            return;\n        }\n\n        if (!emailPattern.test(email)) {\n            Alert.alert('Sign Up Failed', 'Please enter a valid email address.');\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            Alert.alert('Sign Up Failed', 'Passwords do not match');\n            return;\n        }\n\n        const today = new Date();\n        const dob = new Date(dateOfBirth);\n        let age = today.getFullYear() - dob.getFullYear();\n\n        if (\n            today.getMonth() < dob.getMonth() ||\n            (today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate())\n        ) {\n            age--;\n        }\n\n        if (age < 21) {\n            Alert.alert('Sign Up Failed', 'You must be at least 21 years old to sign up.');\n            return;\n        }\n\n        try {\n            const userData = {\n                userName,\n                password,\n                name,\n                email,\n                countryOfOrigin: selectedCountry.toUpperCase(),\n                dateOfBirth: dateOfBirth.toISOString().split('T')[0],\n                isActive: true,\n                rating: null,\n                experience: null,\n                projectsCompleted: null,\n                companyName: null,\n                startTime: null,\n                endTime: null,\n                contractorSpecialization: null,\n                userType: 'BUYER_SELLER', // This one here.\n            };\n\n            const signUpResult = await signUpUser(userData);\n            console.log(\"This is the sign-up result: \", signUpResult)\n\n            if (signUpResult.success) {\n                handleLogin();\n                Alert.alert('Move on to input your partner details!', 'Signup successful.');\n                // This basically logs them in and brings them to the partnerapp page.\n                // Slight lag to make sure it loads fully?\n                setTimeout(() => { navigation.navigate('Intro to Partner App'); }, 500)\n            } else if (signUpResult.message) {\n                if (signUpResult.message.includes('Username')) {\n                    Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n                } else if (signUpResult.message.includes('Email')) {\n                    Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n                } else {\n                    Alert.alert('Sign Up Failed', signUpResult.message);\n                }\n            } else {\n                if (signUpResult.error.includes('Username')) {\n                    Alert.alert('Sign Up Failed', 'Username is already taken. Please choose another.');\n                } else if (signUpResult.error.includes('Email')) {\n                    Alert.alert('Sign Up Failed', 'Email is already used. Please use another email address.');\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            Alert.alert('Sign Up Failed', 'Signup failed');\n        }\n    };\n\n    const handleLogin = async () => {\n        const { success, data, message } = await loginUser(userName, password);\n\n        if (success) {\n            login(data); // Use the login function from AuthContext to set the user\n            console.log('Login successful');\n        } else {\n            console.log(message);\n        }\n    };\n\n    return (\n        <View style={styles.containerView}>\n            <ScrollView\n                style={styles.scrollView}\n                contentContainerStyle={styles.container}\n                keyboardShouldPersistTaps=\"handled\">\n                <View style={styles.headerContainer}>\n                    <Image\n                        source={require('../../assets/PropertyGo-HighRes-Logo.png')}\n                        style={styles.headerImage}\n                    />\n                    <Text style={styles.headerText}>Sign Up (Partner) </Text>\n                </View>\n                <View style={styles.formContainer}>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Full Name:</Text>\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Full Name\"\n                            placeholderTextColor=\"black\"\n                            value={name}\n                            onChangeText={setName}\n                        />\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>User Name:</Text>\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"User Name\"\n                            placeholderTextColor=\"black\"\n                            value={userName}\n                            onChangeText={setUserName}\n                        />\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Password:</Text>\n                        <View style={styles.passwordInputContainer}>\n                            <TextInput\n                                style={styles.input}\n                                placeholder=\"Password\"\n                                placeholderTextColor=\"black\"\n                                value={password}\n                                onChangeText={setPassword}\n                                secureTextEntry={!showPassword} // Toggle secureTextEntry based on showPassword\n                            />\n                            <TouchableOpacity\n                                style={styles.passwordIcon}\n                                onPress={() => setShowPassword(!showPassword)} // Toggle showPassword state\n                            >\n                                <Icon\n                                    name={showPassword ? 'eye' : 'eye-slash'}\n                                    size={20}\n                                    color=\"black\"\n                                />\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Confirm Password:</Text>\n                        <View style={styles.passwordInputContainer}>\n                            <TextInput\n                                style={styles.input}\n                                placeholder=\"Confirm Password\"\n                                placeholderTextColor=\"black\"\n                                value={confirmPassword}\n                                onChangeText={setConfirmPassword}\n                                secureTextEntry={!showPassword} // Toggle secureTextEntry based on showPassword\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Email:</Text>\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            placeholderTextColor=\"black\"\n                            value={email}\n                            onChangeText={setEmail}\n                            keyboardType=\"email-address\"\n                        />\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Date of Birth:</Text>\n                        <TouchableOpacity\n                            style={styles.datePickerButton}\n                            onPress={() => setDatePickerVisibility(true)}\n                        >\n                            <Text style={styles.pickerText}>\n                                {dateOfBirth ? dateOfBirth.toDateString() : 'Date of Birth'}\n                            </Text>\n                        </TouchableOpacity>\n                        <Modal\n                            transparent={true}\n                            animationType=\"slide\"\n                            visible={isDatePickerVisible}\n                            onRequestClose={() => setDatePickerVisibility(false)}\n                        >\n                            <View style={styles.modalView}>\n                                <DateTimePicker\n                                    isVisible={isDatePickerVisible}\n                                    mode=\"date\"\n                                    onConfirm={(date) => {\n                                        setDateOfBirth(date);\n                                        setDatePickerVisibility(false);\n                                    }}\n                                    onCancel={() => setDatePickerVisibility(false)}\n                                />\n                            </View>\n                        </Modal>\n                    </View>\n                    <View style={styles.inputRow}>\n                        <Text style={styles.label}>Country:</Text>\n                        <TouchableOpacity\n                            style={styles.countryPickerButton}\n                            onPress={() => setCountryPickerVisibility(true)}\n                        >\n                            <Text style={styles.pickerText}>\n                                {selectedCountry || 'Select Country'}\n                            </Text>\n                        </TouchableOpacity>\n                        <Modal\n                            transparent={true}\n                            animationType=\"slide\"\n                            visible={isCountryPickerVisible}\n                            onRequestClose={() => setCountryPickerVisibility(false)}\n                        >\n                            <View style={styles.modalView}>\n                                <Picker\n                                    selectedValue={selectedCountry}\n                                    onValueChange={(itemValue) => {\n                                        setSelectedCountry(itemValue);\n                                        setCountryPickerVisibility(false);\n                                    }}\n                                >\n                                    {countries.map((country) => (\n                                        <Picker.Item\n                                            key={country.value}\n                                            label={country.label}\n                                            value={country.value}\n                                        />\n                                    ))}\n                                </Picker>\n                            </View>\n                        </Modal>\n                    </View>\n                </View>\n                <Text style={styles.inputRow}>{\"\\n\\n\"}</Text>\n                {/* <Text style={styles.signUpButtonText}>{\"\\n\"}</Text> */}\n\n            </ScrollView>\n                <TouchableOpacity style={styles.signUpButton} onPress={handleSignUp}>\n                    <View style={styles.buttonContent}>\n                        <Icon name=\"user-plus\" size={24} color=\"white\" style={styles.icon} />\n                        <Text style={styles.signUpButtonText}>  Continue</Text>\n                    </View>\n                </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexGrow: 1,\n        alignItems: 'center',\n        padding: 16,\n        backgroundColor: '#FFFFFF',\n    },\n    containerView: {\n        flexGrow: 1,\n        padding: 1,\n        backgroundColor: '#FFFFFF',\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    headerImage: {\n        width: 60,\n        height: 60,\n        marginRight: 10,\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    headerText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    formContainer: {\n        width: '100%',\n    },\n    inputRow: {\n        marginBottom: 10,\n        width: '100%',\n    },\n    label: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginBottom: 5,\n    },\n    input: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginBottom: 10,\n        fontSize: 14, // Match the font size\n    },\n    passwordInputContainer: {\n        position: 'relative',\n    },\n    passwordIcon: {\n        position: 'absolute',\n        right: 10,\n        top: '45%',\n        transform: [{ translateY: -12 }],\n    },\n    datePickerButton: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        paddingLeft: 10,\n        justifyContent: 'center',\n        borderRadius: 5, // Add border radius\n    },\n    countryPickerButton: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        paddingLeft: 10,\n        justifyContent: 'center',\n        borderRadius: 5, // Add border radius\n    },\n    pickerText: {\n        fontSize: 14,\n        color: 'black',\n    },\n    modalView: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    signUpButton: {\n        marginVertical: 10,\n        flexDirection: 'row',\n        backgroundColor: '#1E90FF',\n        padding: 15,\n        borderRadius: 10,\n        marginBottom: 20,\n        alignItems: 'center', // Center horizontally\n        flexDirection: 'row',\n        justifyContent: 'center', // Center vertically\n        width: '60%',\n        marginLeft: 70,\n    },\n    signUpButtonText: {\n        fontSize: 18,\n        color: 'white',\n    },\n    buttonContent: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    icon: {\n        marginLeft: 10,\n    },\n    scrollViewContent: {\n        paddingBottom: 100, // Adjust this value as needed to ensure the input field is visible\n    },\n    scrollView: {\n        flex: 1,\n        marginBottom: 10, // Adjust this margin to avoid overlap with the navigation bar\n    },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}