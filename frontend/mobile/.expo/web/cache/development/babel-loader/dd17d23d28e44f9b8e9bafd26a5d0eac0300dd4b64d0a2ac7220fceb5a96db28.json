{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TransactionCard from \"./TransactionCard\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { fetchUserTransactions } from \"../../../utils/transactionApi\";\nimport { AuthContext } from \"../../../AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TransactionScreen = function TransactionScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var userId = user.user.userId;\n  useEffect(function () {\n    getUserTransactions();\n  }, []);\n  useFocusEffect(React.useCallback(function () {\n    console.log('Transaction page gained focus');\n    getUserTransactions();\n  }, []));\n  var getUserTransactions = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$fetchUserTrans = yield fetchUserTransactions(userId),\n        success = _yield$fetchUserTrans.success,\n        data = _yield$fetchUserTrans.data,\n        message = _yield$fetchUserTrans.message;\n      if (success) {\n        setTransactions(data);\n        console.log(\"fetchUserTransactions data:\", data);\n      } else {\n        setTransactions([]);\n        console.error('Error fetching transaction data for user:', message);\n      }\n    });\n    return function getUserTransactions() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  console.log(\"transactions:\", transactions);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Transactions\"\n    }), transactions && transactions.length > 0 ? _jsx(FlatList, {\n      data: transactions,\n      keyExtractor: function keyExtractor(item) {\n        return item.transactionId.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TransactionCard, {\n          transaction: item\n        });\n      }\n    }) : _jsx(Text, {\n      style: styles.noAvailabilityText,\n      children: \"No transactions found.\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginLeft: 100,\n    marginTop: 10,\n    paddingBottom: 20\n  },\n  noAvailabilityText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 10\n  }\n});\nexport default TransactionScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","ScrollView","FlatList","StyleSheet","Text","TransactionCard","useFocusEffect","fetchUserTransactions","AuthContext","jsx","_jsx","jsxs","_jsxs","TransactionScreen","_useState","_useState2","_slicedToArray","transactions","setTransactions","_useContext","user","userId","getUserTransactions","useCallback","console","log","_ref","_asyncToGenerator","_yield$fetchUserTrans","success","data","message","error","apply","arguments","style","styles","container","children","header","length","keyExtractor","item","transactionId","toString","renderItem","_ref2","transaction","noAvailabilityText","create","flex","backgroundColor","padding","fontSize","fontWeight","color","marginLeft","marginTop","paddingBottom","textAlign"],"sources":["/Users/limzhongzhi/WebstormProjects/PropertyGo/frontend/mobile/screens/sideNavigatorBar/Transaction/Transactions.js"],"sourcesContent":["// TransactionScreen.js\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { View, ScrollView, FlatList, StyleSheet, Text } from 'react-native'; // Import ScrollView from 'react-native'\nimport TransactionCard from './TransactionCard'; // Import the TransactionCard component\nimport {useFocusEffect} from \"@react-navigation/native\";\nimport { fetchUserTransactions } from '../../../utils/transactionApi';\nimport { AuthContext } from '../../../AuthContext';\n\nconst TransactionScreen = () => {\n    const [transactions, setTransactions] = useState([]);\n    const { user } = useContext(AuthContext);\n    const userId = user.user.userId;\n\n    useEffect(() => {\n        // Fetch user transactions when the component mounts\n        getUserTransactions();\n    }, []);\n\n    useFocusEffect(\n        React.useCallback(() => {\n            console.log('Transaction page gained focus');\n            getUserTransactions();\n        }, [])\n    );\n\n    const getUserTransactions = async () => {\n        const { success, data, message } = await fetchUserTransactions(\n            userId\n        );\n\n        if (success) {\n            setTransactions(data);\n            console.log(\"fetchUserTransactions data:\", data); // Log the fetched data\n        } else {\n            setTransactions([]);\n            console.error('Error fetching transaction data for user:', message);\n        }\n    };\n\n    console.log(\"transactions:\", transactions); // Log the transactions state\n\n    return (\n        <ScrollView style={styles.container}>\n            <Text style={styles.header}>Transactions</Text>\n            {transactions && transactions.length > 0 ? (\n                <FlatList\n                    data={transactions}\n                    keyExtractor={(item) => item.transactionId.toString()}\n                    renderItem={({ item }) => <TransactionCard transaction={item} />}\n                />\n            ) : (\n                <Text style={styles.noAvailabilityText}>No transactions found.</Text>\n            )}\n        </ScrollView> // Wrap your content with ScrollView\n    );\n\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        padding: 16,\n    },\n    header: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: '#333',\n        marginLeft: 100,\n        marginTop: 10,\n        paddingBottom: 20,\n    },\n    noAvailabilityText: {\n        fontSize: 16,\n        textAlign: 'center',\n        marginTop: 10,\n    },\n});\n\nexport default TransactionScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}