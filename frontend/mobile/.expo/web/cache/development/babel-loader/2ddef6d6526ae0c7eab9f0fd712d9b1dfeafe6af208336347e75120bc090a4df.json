{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport NotificationItem from \"../../components/Notification/NotificationItem\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { getAllNotification } from \"../../utils/notificationApi\";\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationModal from \"../../components/Notification/NotificationModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Activity = function Activity(_ref) {\n  var parentFetchData = _ref.parentFetchData;\n  var navigation = useNavigation();\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filter = _useState4[0],\n    setFilter = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isModalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshing = _useState8[0],\n    setRefreshing = _useState8[1];\n  var useParentCallback = useCallback(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var notificationData = yield getAllNotification(user.user.userId, filter);\n          yield parentFetchData();\n          setNotifications(notificationData);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [filter]);\n  useFocusEffect(useParentCallback);\n  var handleNotificationPress = function handleNotificationPress(notification) {\n    if (notification.userNavigationScreen === \"forumPost\") {\n      navigation.navigate('Forum Side Navigator', {\n        screen: 'Forum Stack Group',\n        params: {\n          screen: \"Forum Comment\",\n          params: {\n            post: notification.forumPost\n          }\n        }\n      });\n    }\n  };\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleFilterPress = function () {\n    var _ref3 = _asyncToGenerator(function* (f) {\n      setFilter(f);\n      setModalVisible(!isModalVisible);\n    });\n    return function handleFilterPress(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleRefresh = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      useParentCallback();\n      setRefreshing(false);\n    });\n    return function handleRefresh() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Activity\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.filterButton,\n        onPress: toggleModal,\n        children: _jsx(Text, {\n          style: styles.filter,\n          children: \"Filter\"\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: handleRefresh,\n        tintColor: '#FFD700'\n      }),\n      children: [notifications.map(function (notification, index) {\n        return _jsx(NotificationItem, {\n          onPress: function onPress() {\n            return handleNotificationPress(notification);\n          },\n          profileImage: notification.userNotification ? notification.userNotification.profileImage : null,\n          content: notification.content,\n          updatedAt: notification.updatedAt,\n          completed: notification.isCompleted,\n          pending: notification.isPending,\n          redirect: notification.userNavigationScreen,\n          hasUserRead: notification.hasUserRead\n        }, notification.notificationId);\n      }), notifications.length === 0 ? _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            marginLeft: 5\n          },\n          children: \" No notification at the moment!\"\n        })\n      }) : null]\n    }), _jsx(NotificationModal, {\n      isVisible: isModalVisible,\n      onClose: toggleModal,\n      onFilter: handleFilterPress\n    })]\n  });\n};\nexport default Activity;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: 'white'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 30,\n    margin: 5,\n    backgroundColor: \"transparent\"\n  },\n  title: {\n    fontSize: 18,\n    marginHorizontal: 5,\n    fontWeight: 'bold'\n  },\n  filter: {\n    fontSize: 18,\n    marginHorizontal: 5,\n    fontWeight: 'bold',\n    color: \"blue\"\n  },\n  filterButton: {\n    paddingHorizontal: 10\n  },\n  addItem: {\n    alignItems: 'center',\n    marginLeft: 300,\n    marginRight: 10\n  }\n});","map":{"version":3,"names":["React","useState","useContext","useCallback","useFocusEffect","StyleSheet","View","Text","TouchableOpacity","ScrollView","SafeAreaView","Alert","RefreshControl","NotificationItem","AuthContext","getAllNotification","useNavigation","NotificationModal","jsx","_jsx","jsxs","_jsxs","Activity","_ref","parentFetchData","navigation","_useContext","user","_useState","_useState2","_slicedToArray","notifications","setNotifications","_useState3","_useState4","filter","setFilter","_useState5","_useState6","isModalVisible","setModalVisible","_useState7","_useState8","refreshing","setRefreshing","useParentCallback","fetchData","_ref2","_asyncToGenerator","notificationData","userId","error","console","apply","arguments","handleNotificationPress","notification","userNavigationScreen","navigate","screen","params","post","forumPost","toggleModal","handleFilterPress","_ref3","f","_x","handleRefresh","_ref4","style","styles","container","children","header","title","filterButton","onPress","refreshControl","onRefresh","tintColor","map","index","profileImage","userNotification","content","updatedAt","completed","isCompleted","pending","isPending","redirect","hasUserRead","notificationId","length","marginLeft","isVisible","onClose","onFilter","create","flex","padding","backgroundColor","flexDirection","justifyContent","alignItems","height","margin","fontSize","marginHorizontal","fontWeight","color","paddingHorizontal","addItem","marginRight"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/userBottomNavBar/Activity.js"],"sourcesContent":["import React, { useState, useContext, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView, SafeAreaView, Alert, RefreshControl } from 'react-native';\nimport NotificationItem from '../../components/Notification/NotificationItem';\nimport { AuthContext } from '../../AuthContext';\nimport { getAllNotification } from '../../utils/notificationApi';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationModal from '../../components/Notification/NotificationModal';\n\n\nconst Activity = ({ parentFetchData }) => {\n\n    const navigation = useNavigation();\n    const { user } = useContext(AuthContext);\n    const [notifications, setNotifications] = useState([])\n    const [filter, setFilter] = useState(null);\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [refreshing, setRefreshing] = useState(false);\n\n    const useParentCallback = useCallback(() => {\n        const fetchData = async () => {\n            try {\n                const notificationData = await getAllNotification(user.user.userId, filter);\n                // console.log(notificationData)\n                await parentFetchData()\n                // console.log(\"notificationData fetched\")\n                setNotifications(notificationData);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        fetchData();\n    }, [filter])\n\n    useFocusEffect(useParentCallback);\n\n    const handleNotificationPress = (notification) => {\n        if (notification.userNavigationScreen === \"forumPost\") {\n            navigation.navigate('Forum Side Navigator', {\n                screen: 'Forum Stack Group',\n                params: {\n                    screen: \"Forum Comment\",\n                    params: {\n                        post: notification.forumPost\n                    },\n                },\n            });\n        }\n    };\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    const handleFilterPress = async (f) => {\n        // console.log(f)\n        setFilter(f)\n        setModalVisible(!isModalVisible);\n    };\n\n    const handleRefresh = async () => {\n        setRefreshing(true);\n        useParentCallback();\n        setRefreshing(false);\n    };\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.header}>\n                <Text style={styles.title}>Activity</Text>\n                <TouchableOpacity style={styles.filterButton} onPress={toggleModal}>\n                    <Text style={styles.filter}>Filter</Text>\n                </TouchableOpacity>\n            </View>\n            <ScrollView refreshControl={\n                <RefreshControl\n                    refreshing={refreshing}\n                    onRefresh={handleRefresh}\n                    tintColor={'#FFD700'}\n                />\n            }>\n                {/* {console.log(filter)} */}\n                {notifications.map((notification, index) => {\n                    // console.log(notification.content); // Log the notification data\n\n                    return (\n                        <NotificationItem\n                            key={notification.notificationId}\n                            onPress={() => handleNotificationPress(notification)}\n                            profileImage={notification.userNotification ? notification.userNotification.profileImage : null}\n                            content={notification.content}\n                            updatedAt={notification.updatedAt}\n                            completed={notification.isCompleted}\n                            pending={notification.isPending}\n                            redirect={notification.userNavigationScreen}\n                            hasUserRead={notification.hasUserRead}\n                        />\n                    );\n                })}\n                {notifications.length === 0 ? <View><Text style={{marginLeft:5}}> No notification at the moment!</Text></View> : null}\n            </ScrollView>\n            <NotificationModal isVisible={isModalVisible} onClose={toggleModal} onFilter={handleFilterPress} />\n        </SafeAreaView>\n    );\n};\n\nexport default Activity;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: 'white',\n        // borderWidth: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: 30,\n        //   borderWidth:1,\n        //   paddingEnd: 5,\n        margin: 5,\n        backgroundColor: \"transparent\"\n    },\n    title: {\n        fontSize: 18,\n        marginHorizontal: 5,\n        fontWeight: 'bold', // Add fontWeight to make the title bold\n        //   color:\"blue\"\n    },\n    filter: {\n        fontSize: 18,\n        marginHorizontal: 5,\n        fontWeight: 'bold', // Add fontWeight to make the title bold\n        color: \"blue\"\n    },\n    filterButton: {\n        paddingHorizontal: 10,\n    },\n    addItem: {\n        alignItems: 'center',\n        // paddingEnd: 30,\n        marginLeft: 300,\n        marginRight: 10,\n        // flex:1,\n        // borderWidth:1,\n        // backgroundColor: \"black\"\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}