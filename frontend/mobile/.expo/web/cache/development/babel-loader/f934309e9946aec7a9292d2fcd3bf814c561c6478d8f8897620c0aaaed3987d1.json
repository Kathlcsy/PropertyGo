{
  "ast": null,
  "code": "import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport ContactUsStatus from \"../screens/sideNavigatorBar/ContactUsStatus\";\nimport ContactUs from \"../screens/sideNavigatorBar/ContactUs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar ContactUsStackGroup = function ContactUsStackGroup(_ref) {\n  var route = _ref.route;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            focused = _ref3.focused,\n            size = _ref3.size;\n          var iconName;\n          if (route.name === \"ContactUs\") {\n            iconName = focused ? \"mail\" : \"mail-outline\";\n            return _jsx(MaterialIcons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          } else if (route.name === \"ContactUs Status\") {\n            return _jsx(Feather, {\n              name: \"loader\",\n              size: size,\n              color: color\n            });\n          }\n        },\n        tabBarActiveTintColor: \"#FFD700\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ContactUs\",\n      component: ContactUs,\n      initialParams: {\n        parentRoute: route.params.parentRoute\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ContactUs Status\",\n      component: ContactUsStatus,\n      initialParams: {\n        parentRoute: route.params.parentRoute\n      }\n    })]\n  });\n};\nexport default ContactUsStackGroup;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "createBottomTabNavigator",
      "MaterialIcons",
      "Feather",
      "ContactUsStatus",
      "ContactUs",
      "jsx",
      "_jsx",
      "jsxs",
      "_jsxs",
      "Tab",
      "ContactUsStackGroup",
      "_ref",
      "route",
      "Navigator",
      "screenOptions",
      "_ref2",
      "headerShown",
      "tabBarIcon",
      "_ref3",
      "color",
      "focused",
      "size",
      "iconName",
      "name",
      "tabBarActiveTintColor",
      "children",
      "Screen",
      "component",
      "initialParams",
      "parentRoute",
      "params"
    ],
    "sources": [
      "C:/Users/Legion/Desktop/FSR - 1/PropertyGo/frontend/mobile/navigations/ContactUsStackGroup.js"
    ],
    "sourcesContent": [
      "import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Feather } from '@expo/vector-icons'; \r\nimport ContactUsStatus from '../screens/sideNavigatorBar/ContactUsStatus';\r\nimport ContactUs from '../screens/sideNavigatorBar/ContactUs';\r\n\r\n// const ContactUsStack = createNativeStackNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst ContactUsStackGroup = ({route}) => {\r\n\r\n    // return (\r\n\r\n    //     <ContactUsStack.Navigator>\r\n    //         <ContactUsStack.Screen name=\"ContactUs Details\" component={ContactUsDetails} options={{ headerShown: false }}/>\r\n    //         <ContactUsStack.Screen name=\"ContactUs\" component={ContactUs}/>\r\n    //     </ContactUsStack.Navigator>\r\n    // );\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n                headerShown: false,\r\n                tabBarIcon: ({ color, focused, size }) => {\r\n                    let iconName;\r\n\r\n                    if (route.name === \"ContactUs\") {\r\n                        iconName = focused ? \"mail\" : \"mail-outline\";\r\n                        return <MaterialIcons name={iconName} size={size} color={color} />;\r\n                      } else if (route.name === \"ContactUs Status\") {\r\n                        // You can use Feather icon for \"Contact Us Status\"\r\n                        return <Feather name=\"loader\" size={size} color={color} />;\r\n                      }\r\n\r\n                },\r\n                tabBarActiveTintColor: \"#FFD700\",\r\n            })}\r\n        >\r\n            <Tab.Screen name=\"ContactUs\" component={ContactUs}  initialParams={{ parentRoute: route.params.parentRoute }}/>\r\n            <Tab.Screen name=\"ContactUs Status\" component={ContactUsStatus}  initialParams={{ parentRoute: route.params.parentRoute }} />\r\n            \r\n        </Tab.Navigator>\r\n    );\r\n};\r\nexport default ContactUsStackGroup;"
    ],
    "mappings": "AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI9D,IAAMC,GAAG,GAAGT,wBAAwB,CAAC,CAAC;AAEtC,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAAgB;EAAA,IAAXC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAU/B,OACIJ,KAAA,CAACC,GAAG,CAACI,SAAS;IACVC,aAAa,EAAE,SAAAA,cAAAC,KAAA;MAAA,IAAGH,KAAK,GAAAG,KAAA,CAALH,KAAK;MAAA,OAAQ;QAC3BI,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,KAAK,GAAAD,KAAA,CAALC,KAAK;YAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UAC/B,IAAIC,QAAQ;UAEZ,IAAIV,KAAK,CAACW,IAAI,KAAK,WAAW,EAAE;YAC5BD,QAAQ,GAAGF,OAAO,GAAG,MAAM,GAAG,cAAc;YAC5C,OAAOd,IAAA,CAACL,aAAa;cAACsB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACF,KAAK,EAAEA;YAAM,CAAE,CAAC;UACpE,CAAC,MAAM,IAAIP,KAAK,CAACW,IAAI,KAAK,kBAAkB,EAAE;YAE5C,OAAOjB,IAAA,CAACJ,OAAO;cAACqB,IAAI,EAAC,QAAQ;cAACF,IAAI,EAAEA,IAAK;cAACF,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC5D;QAEN,CAAC;QACDK,qBAAqB,EAAE;MAC3B,CAAC;IAAA,CAAE;IAAAC,QAAA,GAEHnB,IAAA,CAACG,GAAG,CAACiB,MAAM;MAACH,IAAI,EAAC,WAAW;MAACI,SAAS,EAAEvB,SAAU;MAAEwB,aAAa,EAAE;QAAEC,WAAW,EAAEjB,KAAK,CAACkB,MAAM,CAACD;MAAY;IAAE,CAAC,CAAC,EAC/GvB,IAAA,CAACG,GAAG,CAACiB,MAAM;MAACH,IAAI,EAAC,kBAAkB;MAACI,SAAS,EAAExB,eAAgB;MAAEyB,aAAa,EAAE;QAAEC,WAAW,EAAEjB,KAAK,CAACkB,MAAM,CAACD;MAAY;IAAE,CAAE,CAAC;EAAA,CAElH,CAAC;AAExB,CAAC;AACD,eAAenB,mBAAmB"
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}