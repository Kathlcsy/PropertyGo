{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { getImageUriById, isPropertyInFavorites, addFavoriteProperty, removeFavoriteProperty, countUsersFavoritedProperty } from \"../../utils/api\";\nimport { AuthContext } from \"../../AuthContext\";\nimport DefaultImage from \"../../assets/No-Image-Available.webp\";\nimport * as Animatable from 'react-native-animatable';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PropertyCard = function PropertyCard(_ref) {\n  var property = _ref.property,\n    _onPress = _ref.onPress,\n    reloadPropertyCard = _ref.reloadPropertyCard;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    propertyImageUri = _useState2[0],\n    setPropertyImageUri = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFavorite = _useState4[0],\n    setIsFavorite = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    favoriteCount = _useState6[0],\n    setFavoriteCount = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isBoostActive = _useState8[0],\n    setIsBoostActive = _useState8[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState9 = useState(Date.now()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    cacheBuster = _useState10[0],\n    setCacheBuster = _useState10[1];\n  var cardSize = Dimensions.get('window').width;\n  var formatPrice = function formatPrice(price) {\n    if (price !== null && !isNaN(price)) {\n      var formattedPrice = price.toFixed(2);\n      return formattedPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      return 'N/A';\n    }\n  };\n  var fetchFavoriteCount = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$countUsersFavo = yield countUsersFavoritedProperty(property.propertyListingId),\n        success = _yield$countUsersFavo.success,\n        data = _yield$countUsersFavo.data,\n        message = _yield$countUsersFavo.message;\n      if (success) {\n        setFavoriteCount(data.count);\n      } else {\n        console.error('Error fetching favorite count:', message);\n      }\n    });\n    return function fetchFavoriteCount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (property.images && property.images.length > 0) {\n      var imageIds = property.images.map(Number);\n      var smallestImageId = Math.min.apply(Math, _toConsumableArray(imageIds));\n      var imageUri = getImageUriById(smallestImageId.toString());\n      setPropertyImageUri(imageUri);\n    }\n    setCacheBuster(Date.now());\n    checkIfPropertyIsFavorite();\n    calculateBoostStatus();\n    fetchFavoriteCount();\n  }, [property]);\n  var calculateBoostStatus = function calculateBoostStatus() {\n    if (property.boostListingEndDate) {\n      var currentDate = new Date();\n      var boostEndDate = new Date(property.boostListingEndDate);\n      setIsBoostActive(boostEndDate >= currentDate);\n    } else {\n      setIsBoostActive(false);\n    }\n  };\n  var checkIfPropertyIsFavorite = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var userId = user.user.userId;\n      try {\n        var _yield$isPropertyInFa = yield isPropertyInFavorites(userId, property.propertyListingId),\n          success = _yield$isPropertyInFa.success,\n          data = _yield$isPropertyInFa.data;\n        if (success) {\n          setIsFavorite(data.isLiked);\n          setFavoriteCount(data.favoriteCount);\n        } else {\n          console.error('Error checking if property is in favorites:', data.message);\n        }\n      } catch (error) {\n        console.error('Error checking if property is in favorites:', error);\n      }\n    });\n    return function checkIfPropertyIsFavorite() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchPropertyDetails = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var userId = user.user.userId;\n      var _yield$Promise$all = yield Promise.all([isPropertyInFavorites(userId, property.propertyListingId), countUsersFavoritedProperty(property.propertyListingId)]),\n        _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n        favoriteStatusResponse = _yield$Promise$all2[0],\n        favoriteCountResponse = _yield$Promise$all2[1];\n      if (favoriteStatusResponse.success) {\n        setIsFavorite(favoriteStatusResponse.data.isLiked);\n      } else {\n        console.error('Error checking if property is in favorites:', favoriteStatusResponse.data.message);\n      }\n      if (favoriteCountResponse.success) {\n        setFavoriteCount(favoriteCountResponse.data.count);\n      } else {\n        console.error('Error fetching favorite count:', favoriteCountResponse.message);\n      }\n    });\n    return function fetchPropertyDetails() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleFavoriteButtonPress = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (isFavorite) {\n        var _yield$removeFavorite = yield removeFavoriteProperty(user.user.userId, property.propertyListingId),\n          success = _yield$removeFavorite.success;\n        if (success) {\n          setIsFavorite(false);\n          setFavoriteCount(function (prevCount) {\n            return prevCount - 1;\n          });\n        } else {\n          console.error('Error removing property from favorites');\n        }\n      } else {\n        var _yield$addFavoritePro = yield addFavoriteProperty(user.user.userId, property.propertyListingId),\n          _success = _yield$addFavoritePro.success;\n        if (_success) {\n          setIsFavorite(true);\n          setFavoriteCount(function (prevCount) {\n            return prevCount + 1;\n          });\n        } else {\n          console.error('Error adding property to favorites');\n        }\n      }\n    });\n    return function handleFavoriteButtonPress() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var _useState11 = useState('blue'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    currentColor = _useState12[0],\n    setCurrentColor = _useState12[1];\n  var colors = ['red', 'green', 'blue', 'orange'];\n  var animationDuration = 1000;\n  useEffect(function () {\n    var colorChangeTimer = setInterval(function () {\n      var nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n      var nextColor = colors[nextColorIndex];\n      setCurrentColor(nextColor);\n    }, animationDuration);\n    return function () {\n      return clearInterval(colorChangeTimer);\n    };\n  }, [currentColor]);\n  return _jsxs(TouchableOpacity, {\n    style: [styles.card, {\n      width: cardSize * 0.8,\n      height: cardSize * 0.8\n    }],\n    onPress: function onPress() {\n      return _onPress(property.propertyId);\n    },\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: propertyImageUri ? _jsx(Image, {\n        source: {\n          uri: `${propertyImageUri}?timestamp=${cacheBuster}`\n        },\n        style: styles.propertyImage\n      }) : _jsx(View, {\n        style: styles.placeholderImage,\n        children: _jsx(Image, {\n          source: DefaultImage,\n          style: styles.placeholderImageImage\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.propertyDetails,\n      children: [_jsx(Text, {\n        style: styles.propertyTitle,\n        children: property.title\n      }), _jsxs(Text, {\n        style: styles.propertyPrice,\n        children: [\"$\", formatPrice(property.price)]\n      }), _jsxs(Text, {\n        style: styles.propertyInfo,\n        children: [property.bed, \" \", _jsx(Ionicons, {\n          name: \"bed\",\n          size: 16,\n          color: \"#333\"\n        }), \" |\", property.bathroom, \" \", _jsx(Ionicons, {\n          name: \"water\",\n          size: 16,\n          color: \"#333\"\n        }), \" |\", property.size, \" sqm \", _jsx(Ionicons, {\n          name: \"cube-outline\",\n          size: 16,\n          color: \"#333\"\n        })]\n      }), _jsxs(View, {\n        style: styles.favoriteButton,\n        children: [isBoostActive && _jsx(Animatable.View, {\n          animation: \"jello\",\n          easing: \"ease-out\",\n          iterationCount: \"infinite\",\n          children: _jsx(Ionicons, {\n            name: \"flash\",\n            size: 24,\n            color: currentColor,\n            style: {\n              marginRight: 4\n            }\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleFavoriteButtonPress,\n          children: _jsx(Ionicons, {\n            name: isFavorite ? 'heart' : 'heart-outline',\n            size: 24,\n            color: isFavorite ? 'red' : '#333',\n            style: {\n              marginRight: 4\n            }\n          })\n        }), _jsx(Text, {\n          style: {\n            color: isFavorite ? 'red' : '#333',\n            fontSize: 16,\n            fontWeight: 'bold'\n          },\n          children: favoriteCount\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    alignSelf: 'center',\n    marginVertical: 10,\n    borderRadius: 10,\n    borderWidth: 0.5,\n    borderColor: '#ddd',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 7,\n    marginLeft: 10\n  },\n  imageContainer: {\n    width: '100%',\n    height: '60%',\n    overflow: 'hidden'\n  },\n  propertyImage: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  propertyDetails: {\n    padding: 10,\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  propertyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  propertyPrice: {\n    fontSize: 16,\n    color: '#333'\n  },\n  propertyInfo: {\n    fontSize: 12,\n    color: '#555'\n  },\n  propertyListing: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  },\n  placeholderImage: {\n    borderRadius: 20\n  },\n  placeholderImageImage: {\n    width: '100%',\n    height: '80%',\n    marginBottom: 80,\n    borderRadius: 10\n  },\n  favoriteContainer: {},\n  favoriteCount: {\n    marginTop: 40,\n    fontSize: 16\n  },\n  favoriteButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'flex-end'\n  }\n});\nexport default PropertyCard;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Image","TouchableOpacity","StyleSheet","Dimensions","Ionicons","getImageUriById","isPropertyInFavorites","addFavoriteProperty","removeFavoriteProperty","countUsersFavoritedProperty","AuthContext","DefaultImage","Animatable","jsx","_jsx","jsxs","_jsxs","PropertyCard","_ref","property","onPress","reloadPropertyCard","_useState","_useState2","_slicedToArray","propertyImageUri","setPropertyImageUri","_useState3","_useState4","isFavorite","setIsFavorite","_useState5","_useState6","favoriteCount","setFavoriteCount","_useState7","_useState8","isBoostActive","setIsBoostActive","_useContext","user","_useState9","Date","now","_useState10","cacheBuster","setCacheBuster","cardSize","get","width","formatPrice","price","isNaN","formattedPrice","toFixed","toString","replace","fetchFavoriteCount","_ref2","_asyncToGenerator","_yield$countUsersFavo","propertyListingId","success","data","message","count","console","error","apply","arguments","images","length","imageIds","map","Number","smallestImageId","Math","min","_toConsumableArray","imageUri","checkIfPropertyIsFavorite","calculateBoostStatus","boostListingEndDate","currentDate","boostEndDate","_ref3","userId","_yield$isPropertyInFa","isLiked","fetchPropertyDetails","_ref4","_yield$Promise$all","Promise","all","_yield$Promise$all2","favoriteStatusResponse","favoriteCountResponse","handleFavoriteButtonPress","_ref5","_yield$removeFavorite","prevCount","_yield$addFavoritePro","_useState11","_useState12","currentColor","setCurrentColor","colors","animationDuration","colorChangeTimer","setInterval","nextColorIndex","indexOf","nextColor","clearInterval","style","styles","card","height","propertyId","children","imageContainer","source","uri","propertyImage","placeholderImage","placeholderImageImage","propertyDetails","propertyTitle","title","propertyPrice","propertyInfo","bed","name","size","color","bathroom","favoriteButton","animation","easing","iterationCount","marginRight","fontSize","fontWeight","create","backgroundColor","alignSelf","marginVertical","borderRadius","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","overflow","padding","flex","justifyContent","propertyListing","flexDirection","marginBottom","favoriteContainer","marginTop","alignItems"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/propertyListings/PropertyCardSmall.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n  getImageUriById,\n  isPropertyInFavorites,\n  addFavoriteProperty,\n  removeFavoriteProperty,\n  countUsersFavoritedProperty,\n} from '../../utils/api';\nimport { AuthContext } from '../../AuthContext';\nimport DefaultImage from '../../assets/No-Image-Available.webp';\nimport * as Animatable from 'react-native-animatable';\n\nconst PropertyCard = ({ property, onPress, reloadPropertyCard }) => {\n  const [propertyImageUri, setPropertyImageUri] = useState('');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [favoriteCount, setFavoriteCount] = useState(0);\n  const [isBoostActive, setIsBoostActive] = useState(false); // Added state for boost status\n  const { user } = useContext(AuthContext);\n  const [cacheBuster, setCacheBuster] = useState(Date.now());\n  const cardSize = Dimensions.get('window').width;\n\n  const formatPrice = (price) => {\n    if (price !== null && !isNaN(price)) {\n      const formattedPrice = price.toFixed(2);\n      return formattedPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      return 'N/A';\n    }\n  };\n\n  const fetchFavoriteCount = async () => {\n    // console.log('Favorite count:', property.favoriteCount);\n    // setFavoriteCount(property.favoriteCount);\n    const { success, data, message } = await countUsersFavoritedProperty(property.propertyListingId);\n    if (success) {\n      setFavoriteCount(data.count);\n    } else {\n      console.error('Error fetching favorite count:', message);\n    }\n  };\n\n  useEffect(() => {\n    if (property.images && property.images.length > 0) {\n      const imageIds = property.images.map(Number);\n      const smallestImageId = Math.min(...imageIds);\n      const imageUri = getImageUriById(smallestImageId.toString());\n      setPropertyImageUri(imageUri);\n    }\n\n    // Calculate boost status and fetch property favorite status/count\n    setCacheBuster(Date.now());\n    checkIfPropertyIsFavorite();\n    calculateBoostStatus();\n    // fetchPropertyDetails();\n    fetchFavoriteCount();\n  }, [property]);\n\n  const calculateBoostStatus = () => {\n    if (property.boostListingEndDate) {\n      const currentDate = new Date();\n      const boostEndDate = new Date(property.boostListingEndDate);\n      setIsBoostActive(boostEndDate >= currentDate); // Check if boost is active\n    } else {\n      setIsBoostActive(false); // No boost end date means not active\n    }\n  };\n\n  const checkIfPropertyIsFavorite = async () => {\n    const userId = user.user.userId;\n    try {\n        const { success, data } = await isPropertyInFavorites(userId, property.propertyListingId);\n\n        if (success) {\n            setIsFavorite(data.isLiked);\n            setFavoriteCount(data.favoriteCount); // Set the favorite count from the API response\n        } else {\n            console.error('Error checking if property is in favorites:', data.message);\n        }\n    } catch (error) {\n        console.error('Error checking if property is in favorites:', error);\n    }\n};\n\n  const fetchPropertyDetails = async () => {\n    const userId = user.user.userId;\n\n    const [favoriteStatusResponse, favoriteCountResponse] = await Promise.all([\n      isPropertyInFavorites(userId, property.propertyListingId),\n      countUsersFavoritedProperty(property.propertyListingId),\n    ]);\n\n    if (favoriteStatusResponse.success) {\n      setIsFavorite(favoriteStatusResponse.data.isLiked);\n    } else {\n      console.error('Error checking if property is in favorites:', favoriteStatusResponse.data.message);\n    }\n\n    if (favoriteCountResponse.success) {\n      setFavoriteCount(favoriteCountResponse.data.count);\n    } else {\n      console.error('Error fetching favorite count:', favoriteCountResponse.message);\n    }\n  };\n\n  const handleFavoriteButtonPress = async () => {\n    if (isFavorite) {\n      const { success } = await removeFavoriteProperty(user.user.userId, property.propertyListingId);\n\n      if (success) {\n        setIsFavorite(false);\n        setFavoriteCount((prevCount) => prevCount - 1);\n      } else {\n        console.error('Error removing property from favorites');\n      }\n    } else {\n      const { success } = await addFavoriteProperty(user.user.userId, property.propertyListingId);\n\n      if (success) {\n        setIsFavorite(true);\n        setFavoriteCount((prevCount) => prevCount + 1);\n      } else {\n        console.error('Error adding property to favorites');\n      }\n    }\n  };\n\n  const [currentColor, setCurrentColor] = useState('blue'); // Initial color\n  const colors = ['red', 'green', 'blue', 'orange']; // Define your desired colors\n  const animationDuration = 1000; // Duration for each color change (in milliseconds)\n\n  useEffect(() => {\n    // Create a timer to change the color at regular intervals\n    const colorChangeTimer = setInterval(() => {\n      // Get the next color in the array\n      const nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n      const nextColor = colors[nextColorIndex];\n      setCurrentColor(nextColor);\n    }, animationDuration);\n\n    // Clear the timer when the component unmounts\n    return () => clearInterval(colorChangeTimer);\n  }, [currentColor]);\n\n  return (\n    <TouchableOpacity\n      style={[styles.card, { width: cardSize * 0.8, height: cardSize * 0.8 }]}\n      onPress={() => onPress(property.propertyId)}\n    >\n      <View style={styles.imageContainer}>\n        {propertyImageUri ? (\n          <Image source={{ uri: `${propertyImageUri}?timestamp=${cacheBuster}` }} style={styles.propertyImage} />\n        ) : (\n          <View style={styles.placeholderImage}>\n            <Image source={DefaultImage} style={styles.placeholderImageImage} />\n          </View>\n        )}\n      </View>\n      <View style={styles.propertyDetails}>\n        <Text style={styles.propertyTitle}>{property.title}</Text>\n        <Text style={styles.propertyPrice}>${formatPrice(property.price)}</Text>\n        <Text style={styles.propertyInfo}>\n          {property.bed} <Ionicons name=\"bed\" size={16} color=\"#333\" /> |\n          {property.bathroom} <Ionicons name=\"water\" size={16} color=\"#333\" /> |\n          {property.size} sqm <Ionicons name=\"cube-outline\" size={16} color=\"#333\" />\n        </Text>\n        <View style={styles.favoriteButton}>\n          {isBoostActive && (\n            <Animatable.View animation=\"jello\" easing=\"ease-out\" iterationCount=\"infinite\">\n                <Ionicons\n                  name=\"flash\"\n                  size={24}\n                  color={currentColor}\n                  style={{ marginRight: 4 }}\n                />\n            </Animatable.View>\n          )}\n          <TouchableOpacity onPress={handleFavoriteButtonPress}>\n            <Ionicons\n              name={isFavorite ? 'heart' : 'heart-outline'}\n              size={24}\n              color={isFavorite ? 'red' : '#333'}\n              style={{ marginRight: 4 }} // Adjust as needed\n            />\n          </TouchableOpacity>\n          <Text style={{ color: isFavorite ? 'red' : '#333', fontSize: 16, fontWeight: 'bold' }}>\n            {favoriteCount}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    alignSelf: 'center', // Center the card\n    marginVertical: 10, // A little margin top and bottom for spacing between cards\n    borderRadius: 10,\n    borderWidth: 0.5, // Light border\n    borderColor: '#ddd', // Light gray color\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 5,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 7,\n    marginLeft: 10,\n  },\n  imageContainer: {\n    width: '100%',\n    height: '60%',\n    overflow: 'hidden', // Hide overflow\n  },\n  propertyImage: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  propertyDetails: {\n    padding: 10,\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  propertyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  propertyPrice: {\n    fontSize: 16,\n    color: '#333',\n  },\n  propertyInfo: {\n    fontSize: 12,\n    color: '#555',\n  },\n  propertyListing: {\n    flexDirection: 'row',\n    marginBottom: 20, // Adjust this value to control the spacing between cards\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: '#fff',\n  },\n  placeholderImage: {\n    borderRadius: 20,\n\n  },\n  placeholderImageImage: {\n    width: '100%', // Adjust the width as needed to match the desired size\n    height: '80%', // Adjust the height as needed to match the desired size\n    marginBottom: 80,\n    borderRadius: 10,\n  },\n  favoriteContainer: {\n    // flexDirection: 'row',\n    // alignItems: 'left',\n    // marginTop: 8, // Adjust the spacing as needed\n  },\n  favoriteCount: {\n    marginTop: 40, // Adjust the spacing between icon and count as needed\n    fontSize: 16,\n  },\n  favoriteButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'flex-end', // Align to the right\n  },\n});\n\nexport default PropertyCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}