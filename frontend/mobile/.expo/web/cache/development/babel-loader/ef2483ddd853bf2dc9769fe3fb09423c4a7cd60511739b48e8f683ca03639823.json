{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigation } from '@react-navigation/native';\nimport { Picker } from '@react-native-picker/picker';\nimport { useFormData } from \"../../contexts/PartnerApplicationFormDataContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  userRole: Yup.string().oneOf([\"LAWYER\", \"CONTRACTOR\", \"PROPERTY_AGENT\"], 'Invalid role').required('User Role is required')\n});\nvar UserRoleScreen = function UserRoleScreen() {\n  var navigation = useNavigation();\n  var _useFormData = useFormData(),\n    formData = _useFormData.formData,\n    setFormData = _useFormData.setFormData;\n  var handleSubmit = function handleSubmit(values) {\n    setFormData(_objectSpread(_objectSpread({}, formData), values));\n    console.log(formData);\n    navigation.navigate('Credit Card Info');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"User Role\"\n    }), _jsx(Formik, {\n      initialValues: {\n        userRole: formData.userRole || ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: function children(_ref) {\n        var handleSubmit = _ref.handleSubmit,\n          isValid = _ref.isValid,\n          errors = _ref.errors,\n          setFieldValue = _ref.setFieldValue;\n        return _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"User Role\"\n          }), _jsxs(Picker, {\n            style: {\n              marginTop: -40,\n              marginBottom: -10,\n              marginRight: 12,\n              borderStyle: \"dashed\"\n            },\n            selectedValue: formData.userRole,\n            onValueChange: function onValueChange(itemValue) {\n              setFieldValue('userRole', itemValue);\n              setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n                userRole: itemValue\n              }));\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Select role\",\n              value: \"\"\n            }), _jsx(Picker.Item, {\n              label: \"Lawyer\",\n              value: \"LAWYER\"\n            }), _jsx(Picker.Item, {\n              label: \"Contractor\",\n              value: \"CONTRACTOR\"\n            }), _jsx(Picker.Item, {\n              label: \"Property Agent\",\n              value: \"PROPERTY_AGENT\"\n            })]\n          }), errors.userRole && _jsx(Text, {\n            style: styles.errorText,\n            children: errors.userRole\n          }), _jsx(Text, {\n            children: \"\\xA0\"\n          }), _jsxs(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleSubmit,\n            disabled: !isValid,\n            children: [_jsx(Text, {\n              style: styles.buttonText,\n              children: \"Submit\"\n            }), _jsx(AntDesign, {\n              name: \"arrowright\",\n              size: 20,\n              color: \"black\"\n            })]\n          })]\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 10\n  },\n  label: {\n    fontSize: 18,\n    color: '#666'\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 8,\n    marginLeft: 4\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 20,\n    width: '100%'\n  },\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#5F5859',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 30\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    marginRight: 10\n  }\n});\nexport default UserRoleScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","AntDesign","Formik","Field","Yup","useNavigation","Picker","useFormData","jsx","_jsx","jsxs","_jsxs","validationSchema","object","shape","userRole","string","oneOf","required","UserRoleScreen","navigation","_useFormData","formData","setFormData","handleSubmit","values","_objectSpread","console","log","navigate","style","styles","container","children","title","initialValues","onSubmit","_ref","isValid","errors","setFieldValue","label","marginTop","marginBottom","marginRight","borderStyle","selectedValue","onValueChange","itemValue","Item","value","errorText","button","onPress","disabled","buttonText","name","size","color","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginLeft","input","borderWidth","borderColor","borderRadius","padding","width","flexDirection","paddingVertical","paddingHorizontal"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/screens/partnerApplication/UserRole.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigation } from '@react-navigation/native';\nimport { Picker } from '@react-native-picker/picker';\nimport { useFormData } from '../../contexts/PartnerApplicationFormDataContext'; // Update the path to your FormDataContext\n\nconst validationSchema = Yup.object().shape({\n    userRole: Yup.string()\n        .oneOf([\"LAWYER\", \"CONTRACTOR\", \"PROPERTY_AGENT\"], 'Invalid role')\n        .required('User Role is required'),\n});\n\nconst UserRoleScreen = () => {\n    const navigation = useNavigation();\n    const { formData, setFormData } = useFormData(); // Using the context\n\n    const handleSubmit = (values) => {\n        // Update the context with the new values\n        setFormData({ ...formData, ...values });\n        console.log(formData)\n        navigation.navigate('Credit Card Info');\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>User Role</Text>\n            <Formik\n                initialValues={{ userRole: formData.userRole || '' }}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n            >\n                {({ handleSubmit, isValid, errors, setFieldValue }) => (\n                    <View>\n                        <Text style={styles.label}>User Role</Text>\n                        <Picker\n                            style={{marginTop: -40, marginBottom: -10, marginRight: 12, borderStyle:\"dashed\"}}\n                            selectedValue={formData.userRole}\n                            onValueChange={(itemValue) => {\n                                setFieldValue('userRole', itemValue);\n                                setFormData({ ...formData, userRole: itemValue });\n                            }}\n                        >\n                            <Picker.Item label=\"Select role\" value=\"\" />\n                            <Picker.Item label=\"Lawyer\" value=\"LAWYER\" />\n                            <Picker.Item label=\"Contractor\" value=\"CONTRACTOR\" />\n                            <Picker.Item label=\"Property Agent\" value=\"PROPERTY_AGENT\" />\n                        </Picker>\n                        {errors.userRole && <Text style={styles.errorText}>{errors.userRole}</Text>}\n                        <Text>&nbsp;</Text>\n                        <TouchableOpacity style={styles.button} onPress={handleSubmit} disabled={!isValid}>\n                            <Text style={styles.buttonText}>Submit</Text>\n                            <AntDesign name=\"arrowright\" size={20} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                )}\n            </Formik>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#f2f2f2',\n    },\n    title: {\n        fontSize: 32,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 18,\n        color: '#666',\n    },\n    errorText: {\n        color: 'red',\n        fontSize: 14,\n        marginBottom: 8,\n        marginLeft: 4,\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        padding: 12,\n        marginBottom: 20,\n        width: '100%',\n    },\n    button: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#5F5859',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 30,\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 18,\n        marginRight: 10,\n    },\n});\n\nexport default UserRoleScreen;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}