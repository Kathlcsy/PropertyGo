{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var BoostingAnimation = function BoostingAnimation() {\n  var _useState = useState('blue'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentColor = _useState2[0],\n    setCurrentColor = _useState2[1];\n  var colors = ['red', 'green', 'blue', 'orange'];\n  var animationDuration = 1000;\n  useEffect(function () {\n    var colorChangeTimer = setInterval(function () {\n      var nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n      var nextColor = colors[nextColorIndex];\n      setCurrentColor(nextColor);\n    }, animationDuration);\n    return function () {\n      return clearInterval(colorChangeTimer);\n    };\n  }, [currentColor]);\n  return _jsx(Animatable.View, {\n    animation: \"jello\",\n    easing: \"ease-out\",\n    iterationCount: \"infinite\",\n    children: _jsx(Ionicons, {\n      name: \"flash\",\n      size: 24,\n      color: currentColor,\n      style: {\n        marginRight: 4\n      }\n    })\n  });\n};","map":{"version":3,"names":["Animatable","Ionicons","React","useEffect","useState","jsx","_jsx","BoostingAnimation","_useState","_useState2","_slicedToArray","currentColor","setCurrentColor","colors","animationDuration","colorChangeTimer","setInterval","nextColorIndex","indexOf","length","nextColor","clearInterval","View","animation","easing","iterationCount","children","name","size","color","style","marginRight"],"sources":["/Users/kathleen/Documents/IS4103Capstone/PropertyGo/frontend/mobile/components/BoostingAnimation.js"],"sourcesContent":["import * as Animatable from \"react-native-animatable\";\nimport {Ionicons} from \"@expo/vector-icons\";\nimport React, {useEffect, useState} from \"react\";\n\nexport const BoostingAnimation = () => {\n    const [currentColor, setCurrentColor] = useState('blue'); // Initial color\n    const colors = ['red', 'green', 'blue', 'orange']; // Define your desired colors\n    const animationDuration = 1000; // Duration for each color change (in milliseconds)\n\n    useEffect(() => {\n        // Create a timer to change the color at regular intervals\n        const colorChangeTimer = setInterval(() => {\n            // Get the next color in the array\n            const nextColorIndex = (colors.indexOf(currentColor) + 1) % colors.length;\n            const nextColor = colors[nextColorIndex];\n            setCurrentColor(nextColor);\n        }, animationDuration);\n\n        // Clear the timer when the component unmounts\n        return () => clearInterval(colorChangeTimer);\n    }, [currentColor]);\n\n    return (\n        <Animatable.View animation=\"jello\" easing=\"ease-out\" iterationCount=\"infinite\">\n            <Ionicons\n                name=\"flash\"\n                size={24}\n                color={currentColor}\n                style={{marginRight: 4}}\n            />\n        </Animatable.View>\n    )\n}\n"],"mappings":";AAAA,OAAO,KAAKA,UAAU,MAAM,yBAAyB;AACrD,SAAQC,QAAQ,QAAO,oBAAoB;AAC3C,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjD,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EACnC,IAAAC,SAAA,GAAwCJ,QAAQ,CAAC,MAAM,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAMI,MAAM,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;EACjD,IAAMC,iBAAiB,GAAG,IAAI;EAE9BX,SAAS,CAAC,YAAM;IAEZ,IAAMY,gBAAgB,GAAGC,WAAW,CAAC,YAAM;MAEvC,IAAMC,cAAc,GAAG,CAACJ,MAAM,CAACK,OAAO,CAACP,YAAY,CAAC,GAAG,CAAC,IAAIE,MAAM,CAACM,MAAM;MACzE,IAAMC,SAAS,GAAGP,MAAM,CAACI,cAAc,CAAC;MACxCL,eAAe,CAACQ,SAAS,CAAC;IAC9B,CAAC,EAAEN,iBAAiB,CAAC;IAGrB,OAAO;MAAA,OAAMO,aAAa,CAACN,gBAAgB,CAAC;IAAA;EAChD,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,OACIL,IAAA,CAACN,UAAU,CAACsB,IAAI;IAACC,SAAS,EAAC,OAAO;IAACC,MAAM,EAAC,UAAU;IAACC,cAAc,EAAC,UAAU;IAAAC,QAAA,EAC1EpB,IAAA,CAACL,QAAQ;MACL0B,IAAI,EAAC,OAAO;MACZC,IAAI,EAAE,EAAG;MACTC,KAAK,EAAElB,YAAa;MACpBmB,KAAK,EAAE;QAACC,WAAW,EAAE;MAAC;IAAE,CAC3B;EAAC,CACW,CAAC;AAE1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}